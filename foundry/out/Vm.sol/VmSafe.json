{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","addr(uint256)":"ffa18649","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","closeFile(string)":"48c3241f","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlobBaseFee()":"1f6d6ef7","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptUint(string)":"652fd489","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resumeGasMetering()":"2bcd50e0","rpc(string,string)":"1206c8a8","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setEnv(string,string)":"3d5923ee","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signP256(uint256,bytes32)":"83211b40","sleep(uint256)":"fa9d8713","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopMappingRecording()":"0d4aae9b","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","unixTime()":"625387dc","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may result in Script simulations differing from on-chain execution. It is recommended to only use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"VmSafe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink-brownie-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x882b5ae1b429dda7696bc57c913808f0942423d024fad8cedf0ba08d34040649\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://31b63dcea38a411471679c9cc78b3f6d5ae830b9e0560091a6d6b1f0049aa166\",\"dweb:/ipfs/QmW61wSQ3yj5j4yapXVCxmwdXFEr8ASnxjXiDev8QHVgHT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get a `Wallet`'s nonce."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink-brownie-contracts/","@openzeppelin/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"VmSafe"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x882b5ae1b429dda7696bc57c913808f0942423d024fad8cedf0ba08d34040649","urls":["bzz-raw://31b63dcea38a411471679c9cc78b3f6d5ae830b9e0560091a6d6b1f0049aa166","dweb:/ipfs/QmW61wSQ3yj5j4yapXVCxmwdXFEr8ASnxjXiDev8QHVgHT"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":12808,"exportedSymbols":{"Vm":[12807],"VmSafe":[12206]},"nodeType":"SourceUnit","src":"117:90555:17","nodes":[{"id":9004,"nodeType":"PragmaDirective","src":"117:31:17","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":9005,"nodeType":"PragmaDirective","src":"149:33:17","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":12206,"nodeType":"ContractDefinition","src":"409:75703:17","nodes":[{"id":9013,"nodeType":"EnumDefinition","src":"529:533:17","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":9007,"nodeType":"StructuredDocumentation","src":"432:92:17","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":9008,"name":"None","nameLocation":"610:4:17","nodeType":"EnumValue","src":"610:4:17"},{"id":9009,"name":"Broadcast","nameLocation":"714:9:17","nodeType":"EnumValue","src":"714:9:17"},{"id":9010,"name":"RecurrentBroadcast","nameLocation":"829:18:17","nodeType":"EnumValue","src":"829:18:17"},{"id":9011,"name":"Prank","nameLocation":"939:5:17","nodeType":"EnumValue","src":"939:5:17"},{"id":9012,"name":"RecurrentPrank","nameLocation":"1042:14:17","nodeType":"EnumValue","src":"1042:14:17"}],"name":"CallerMode","nameLocation":"534:10:17"},{"id":9026,"nodeType":"EnumDefinition","src":"1118:791:17","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":9014,"nodeType":"StructuredDocumentation","src":"1068:45:17","text":"The kind of account access that occurred."},"members":[{"id":9015,"name":"Call","nameLocation":"1186:4:17","nodeType":"EnumValue","src":"1186:4:17"},{"id":9016,"name":"DelegateCall","nameLocation":"1252:12:17","nodeType":"EnumValue","src":"1252:12:17"},{"id":9017,"name":"CallCode","nameLocation":"1322:8:17","nodeType":"EnumValue","src":"1322:8:17"},{"id":9018,"name":"StaticCall","nameLocation":"1390:10:17","nodeType":"EnumValue","src":"1390:10:17"},{"id":9019,"name":"Create","nameLocation":"1446:6:17","nodeType":"EnumValue","src":"1446:6:17"},{"id":9020,"name":"SelfDestruct","nameLocation":"1505:12:17","nodeType":"EnumValue","src":"1505:12:17"},{"id":9021,"name":"Resume","nameLocation":"1644:6:17","nodeType":"EnumValue","src":"1644:6:17"},{"id":9022,"name":"Balance","nameLocation":"1703:7:17","nodeType":"EnumValue","src":"1703:7:17"},{"id":9023,"name":"Extcodesize","nameLocation":"1764:11:17","nodeType":"EnumValue","src":"1764:11:17"},{"id":9024,"name":"Extcodehash","nameLocation":"1829:11:17","nodeType":"EnumValue","src":"1829:11:17"},{"id":9025,"name":"Extcodecopy","nameLocation":"1892:11:17","nodeType":"EnumValue","src":"1892:11:17"}],"name":"AccountAccessKind","nameLocation":"1123:17:17"},{"id":9037,"nodeType":"EnumDefinition","src":"1949:683:17","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":9027,"nodeType":"StructuredDocumentation","src":"1915:29:17","text":"Forge execution contexts."},"members":[{"id":9028,"name":"TestGroup","nameLocation":"2047:9:17","nodeType":"EnumValue","src":"2047:9:17"},{"id":9029,"name":"Test","nameLocation":"2109:4:17","nodeType":"EnumValue","src":"2109:4:17"},{"id":9030,"name":"Coverage","nameLocation":"2170:8:17","nodeType":"EnumValue","src":"2170:8:17"},{"id":9031,"name":"Snapshot","nameLocation":"2235:8:17","nodeType":"EnumValue","src":"2235:8:17"},{"id":9032,"name":"ScriptGroup","nameLocation":"2327:11:17","nodeType":"EnumValue","src":"2327:11:17"},{"id":9033,"name":"ScriptDryRun","nameLocation":"2393:12:17","nodeType":"EnumValue","src":"2393:12:17"},{"id":9034,"name":"ScriptBroadcast","nameLocation":"2472:15:17","nodeType":"EnumValue","src":"2472:15:17"},{"id":9035,"name":"ScriptResume","nameLocation":"2551:12:17","nodeType":"EnumValue","src":"2551:12:17"},{"id":9036,"name":"Unknown","nameLocation":"2619:7:17","nodeType":"EnumValue","src":"2619:7:17"}],"name":"ForgeContext","nameLocation":"1954:12:17"},{"id":9046,"nodeType":"StructDefinition","src":"2694:237:17","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":9038,"nodeType":"StructuredDocumentation","src":"2638:51:17","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":9041,"mutability":"mutable","name":"topics","nameLocation":"2792:6:17","nodeType":"VariableDeclaration","scope":9046,"src":"2782:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9040,"nodeType":"ArrayTypeName","src":"2782:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":9043,"mutability":"mutable","name":"data","nameLocation":"2850:4:17","nodeType":"VariableDeclaration","scope":9046,"src":"2844:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9042,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9045,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:17","nodeType":"VariableDeclaration","scope":9046,"src":"2909:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9044,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:17","scope":12206,"visibility":"public"},{"id":9052,"nodeType":"StructDefinition","src":"3000:119:17","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":9047,"nodeType":"StructuredDocumentation","src":"2937:58:17","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":9049,"mutability":"mutable","name":"key","nameLocation":"3065:3:17","nodeType":"VariableDeclaration","scope":9052,"src":"3058:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9048,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9051,"mutability":"mutable","name":"url","nameLocation":"3109:3:17","nodeType":"VariableDeclaration","scope":9052,"src":"3102:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9050,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:17","scope":12206,"visibility":"public"},{"id":9073,"nodeType":"StructDefinition","src":"3179:615:17","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":9053,"nodeType":"StructuredDocumentation","src":"3125:49:17","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":9055,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:17","nodeType":"VariableDeclaration","scope":9073,"src":"3252:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9054,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9058,"mutability":"mutable","name":"topics","nameLocation":"3354:6:17","nodeType":"VariableDeclaration","scope":9073,"src":"3344:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9057,"nodeType":"ArrayTypeName","src":"3344:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":9060,"mutability":"mutable","name":"data","nameLocation":"3412:4:17","nodeType":"VariableDeclaration","scope":9073,"src":"3406:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9059,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9062,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:17","nodeType":"VariableDeclaration","scope":9073,"src":"3453:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9064,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:17","nodeType":"VariableDeclaration","scope":9073,"src":"3509:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9063,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":9066,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:17","nodeType":"VariableDeclaration","scope":9073,"src":"3570:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9068,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:17","nodeType":"VariableDeclaration","scope":9073,"src":"3650:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9067,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":9070,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:17","nodeType":"VariableDeclaration","scope":9073,"src":"3709:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9069,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9072,"mutability":"mutable","name":"removed","nameLocation":"3780:7:17","nodeType":"VariableDeclaration","scope":9073,"src":"3775:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9071,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:17","scope":12206,"visibility":"public"},{"id":9085,"nodeType":"StructDefinition","src":"3870:334:17","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":9074,"nodeType":"StructuredDocumentation","src":"3800:65:17","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":9076,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:17","nodeType":"VariableDeclaration","scope":9085,"src":"3934:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9075,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9078,"mutability":"mutable","name":"path","nameLocation":"4004:4:17","nodeType":"VariableDeclaration","scope":9085,"src":"3997:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9077,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9080,"mutability":"mutable","name":"depth","nameLocation":"4060:5:17","nodeType":"VariableDeclaration","scope":9085,"src":"4053:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9079,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":9082,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:17","nodeType":"VariableDeclaration","scope":9085,"src":"4120:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9081,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9084,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:17","nodeType":"VariableDeclaration","scope":9085,"src":"4183:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9083,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:17","scope":12206,"visibility":"public"},{"id":9101,"nodeType":"StructDefinition","src":"4434:599:17","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":9086,"nodeType":"StructuredDocumentation","src":"4210:219:17","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":9088,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:17","nodeType":"VariableDeclaration","scope":9101,"src":"4515:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9087,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9090,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:17","nodeType":"VariableDeclaration","scope":9101,"src":"4586:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9089,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9092,"mutability":"mutable","name":"length","nameLocation":"4683:6:17","nodeType":"VariableDeclaration","scope":9101,"src":"4675:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9091,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9094,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:17","nodeType":"VariableDeclaration","scope":9101,"src":"4769:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9093,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9096,"mutability":"mutable","name":"modified","nameLocation":"4863:8:17","nodeType":"VariableDeclaration","scope":9101,"src":"4855:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9095,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9098,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:17","nodeType":"VariableDeclaration","scope":9101,"src":"4931:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9100,"mutability":"mutable","name":"created","nameLocation":"5019:7:17","nodeType":"VariableDeclaration","scope":9101,"src":"5011:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9099,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:17","scope":12206,"visibility":"public"},{"id":9111,"nodeType":"StructDefinition","src":"5087:277:17","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":9102,"nodeType":"StructuredDocumentation","src":"5039:43:17","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":9104,"mutability":"mutable","name":"addr","nameLocation":"5152:4:17","nodeType":"VariableDeclaration","scope":9111,"src":"5144:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9103,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9106,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:17","nodeType":"VariableDeclaration","scope":9111,"src":"5206:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9105,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9108,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:17","nodeType":"VariableDeclaration","scope":9111,"src":"5274:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9107,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9110,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:17","nodeType":"VariableDeclaration","scope":9111,"src":"5339:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9109,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:17","scope":12206,"visibility":"public"},{"id":9119,"nodeType":"StructDefinition","src":"5409:213:17","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":9112,"nodeType":"StructuredDocumentation","src":"5370:34:17","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":9114,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:17","nodeType":"VariableDeclaration","scope":9119,"src":"5474:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":9113,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":9116,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:17","nodeType":"VariableDeclaration","scope":9119,"src":"5551:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9115,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9118,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:17","nodeType":"VariableDeclaration","scope":9119,"src":"5603:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9117,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:17","scope":12206,"visibility":"public"},{"id":9125,"nodeType":"StructDefinition","src":"5671:184:17","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":9120,"nodeType":"StructuredDocumentation","src":"5628:38:17","text":"Information on the chain and fork."},"members":[{"constant":false,"id":9122,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:17","nodeType":"VariableDeclaration","scope":9125,"src":"5764:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9121,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9124,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:17","nodeType":"VariableDeclaration","scope":9125,"src":"5833:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9123,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:17","scope":12206,"visibility":"public"},{"id":9157,"nodeType":"StructDefinition","src":"5916:1837:17","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":9126,"nodeType":"StructuredDocumentation","src":"5861:50:17","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":9129,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:17","nodeType":"VariableDeclaration","scope":9157,"src":"5998:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$9125_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":9128,"nodeType":"UserDefinedTypeName","pathNode":{"id":9127,"name":"ChainInfo","nameLocations":["5998:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":9125,"src":"5998:9:17"},"referencedDeclaration":9125,"src":"5998:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$9125_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":9132,"mutability":"mutable","name":"kind","nameLocation":"6471:4:17","nodeType":"VariableDeclaration","scope":9157,"src":"6453:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$9026","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":9131,"nodeType":"UserDefinedTypeName","pathNode":{"id":9130,"name":"AccountAccessKind","nameLocations":["6453:17:17"],"nodeType":"IdentifierPath","referencedDeclaration":9026,"src":"6453:17:17"},"referencedDeclaration":9026,"src":"6453:17:17","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$9026","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":9134,"mutability":"mutable","name":"account","nameLocation":"6648:7:17","nodeType":"VariableDeclaration","scope":9157,"src":"6640:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9133,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9136,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:17","nodeType":"VariableDeclaration","scope":9157,"src":"6703:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9135,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9138,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:17","nodeType":"VariableDeclaration","scope":9157,"src":"6917:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9137,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9140,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:17","nodeType":"VariableDeclaration","scope":9157,"src":"7000:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9139,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9142,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:17","nodeType":"VariableDeclaration","scope":9157,"src":"7175:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9141,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9144,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:17","nodeType":"VariableDeclaration","scope":9157,"src":"7254:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9143,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9146,"mutability":"mutable","name":"value","nameLocation":"7344:5:17","nodeType":"VariableDeclaration","scope":9157,"src":"7336:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9145,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9148,"mutability":"mutable","name":"data","nameLocation":"7418:4:17","nodeType":"VariableDeclaration","scope":9157,"src":"7412:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9147,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9150,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:17","nodeType":"VariableDeclaration","scope":9157,"src":"7508:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9149,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9154,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:17","nodeType":"VariableDeclaration","scope":9157,"src":"7619:31:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$9171_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":9152,"nodeType":"UserDefinedTypeName","pathNode":{"id":9151,"name":"StorageAccess","nameLocations":["7619:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":9171,"src":"7619:13:17"},"referencedDeclaration":9171,"src":"7619:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$9171_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":9153,"nodeType":"ArrayTypeName","src":"7619:15:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$9171_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":9156,"mutability":"mutable","name":"depth","nameLocation":"7741:5:17","nodeType":"VariableDeclaration","scope":9157,"src":"7734:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9155,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:17","scope":12206,"visibility":"public"},{"id":9171,"nodeType":"StructDefinition","src":"7815:425:17","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":9158,"nodeType":"StructuredDocumentation","src":"7759:51:17","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":9160,"mutability":"mutable","name":"account","nameLocation":"7905:7:17","nodeType":"VariableDeclaration","scope":9171,"src":"7897:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9159,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9162,"mutability":"mutable","name":"slot","nameLocation":"7969:4:17","nodeType":"VariableDeclaration","scope":9171,"src":"7961:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9164,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:17","nodeType":"VariableDeclaration","scope":9171,"src":"8021:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9163,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9166,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:17","nodeType":"VariableDeclaration","scope":9171,"src":"8086:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9168,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:17","nodeType":"VariableDeclaration","scope":9171,"src":"8155:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9170,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:17","nodeType":"VariableDeclaration","scope":9171,"src":"8220:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9169,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:17","scope":12206,"visibility":"public"},{"id":9183,"nodeType":"StructDefinition","src":"8291:362:17","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":9172,"nodeType":"StructuredDocumentation","src":"8246:40:17","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":9174,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:17","nodeType":"VariableDeclaration","scope":9183,"src":"8350:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9173,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":9176,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:17","nodeType":"VariableDeclaration","scope":9183,"src":"8406:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9175,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":9178,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8498:13:17","nodeType":"VariableDeclaration","scope":9183,"src":"8491:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9177,"name":"uint64","nodeType":"ElementaryTypeName","src":"8491:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":9180,"mutability":"mutable","name":"gasRefunded","nameLocation":"8566:11:17","nodeType":"VariableDeclaration","scope":9183,"src":"8560:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9179,"name":"int64","nodeType":"ElementaryTypeName","src":"8560:5:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9182,"mutability":"mutable","name":"gasRemaining","nameLocation":"8634:12:17","nodeType":"VariableDeclaration","scope":9183,"src":"8627:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9181,"name":"uint64","nodeType":"ElementaryTypeName","src":"8627:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:17","scope":12206,"visibility":"public"},{"id":9191,"nodeType":"FunctionDefinition","src":"8840:80:17","nodes":[],"documentation":{"id":9184,"nodeType":"StructuredDocumentation","src":"8697:138:17","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"8849:10:17","parameters":{"id":9187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9186,"mutability":"mutable","name":"name","nameLocation":"8876:4:17","nodeType":"VariableDeclaration","scope":9191,"src":"8860:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9185,"name":"string","nodeType":"ElementaryTypeName","src":"8860:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8859:22:17"},"returnParameters":{"id":9190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9189,"mutability":"mutable","name":"value","nameLocation":"8913:5:17","nodeType":"VariableDeclaration","scope":9191,"src":"8905:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9188,"name":"address","nodeType":"ElementaryTypeName","src":"8905:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8904:15:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9202,"nodeType":"FunctionDefinition","src":"9103:112:17","nodes":[],"documentation":{"id":9192,"nodeType":"StructuredDocumentation","src":"8926:172:17","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"9112:10:17","parameters":{"id":9197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9194,"mutability":"mutable","name":"name","nameLocation":"9139:4:17","nodeType":"VariableDeclaration","scope":9202,"src":"9123:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9193,"name":"string","nodeType":"ElementaryTypeName","src":"9123:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9196,"mutability":"mutable","name":"delim","nameLocation":"9161:5:17","nodeType":"VariableDeclaration","scope":9202,"src":"9145:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9195,"name":"string","nodeType":"ElementaryTypeName","src":"9145:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9122:45:17"},"returnParameters":{"id":9201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9200,"mutability":"mutable","name":"value","nameLocation":"9208:5:17","nodeType":"VariableDeclaration","scope":9202,"src":"9191:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9198,"name":"address","nodeType":"ElementaryTypeName","src":"9191:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9199,"nodeType":"ArrayTypeName","src":"9191:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9190:24:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9210,"nodeType":"FunctionDefinition","src":"9361:74:17","nodes":[],"documentation":{"id":9203,"nodeType":"StructuredDocumentation","src":"9221:135:17","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9370:7:17","parameters":{"id":9206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9205,"mutability":"mutable","name":"name","nameLocation":"9394:4:17","nodeType":"VariableDeclaration","scope":9210,"src":"9378:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9204,"name":"string","nodeType":"ElementaryTypeName","src":"9378:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9377:22:17"},"returnParameters":{"id":9209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9208,"mutability":"mutable","name":"value","nameLocation":"9428:5:17","nodeType":"VariableDeclaration","scope":9210,"src":"9423:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9207,"name":"bool","nodeType":"ElementaryTypeName","src":"9423:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9422:12:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9221,"nodeType":"FunctionDefinition","src":"9615:106:17","nodes":[],"documentation":{"id":9211,"nodeType":"StructuredDocumentation","src":"9441:169:17","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9624:7:17","parameters":{"id":9216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9213,"mutability":"mutable","name":"name","nameLocation":"9648:4:17","nodeType":"VariableDeclaration","scope":9221,"src":"9632:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9212,"name":"string","nodeType":"ElementaryTypeName","src":"9632:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9215,"mutability":"mutable","name":"delim","nameLocation":"9670:5:17","nodeType":"VariableDeclaration","scope":9221,"src":"9654:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9214,"name":"string","nodeType":"ElementaryTypeName","src":"9654:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9631:45:17"},"returnParameters":{"id":9220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9219,"mutability":"mutable","name":"value","nameLocation":"9714:5:17","nodeType":"VariableDeclaration","scope":9221,"src":"9700:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":9217,"name":"bool","nodeType":"ElementaryTypeName","src":"9700:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9218,"nodeType":"ArrayTypeName","src":"9700:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"9699:21:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9229,"nodeType":"FunctionDefinition","src":"9870:80:17","nodes":[],"documentation":{"id":9222,"nodeType":"StructuredDocumentation","src":"9727:138:17","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"9879:10:17","parameters":{"id":9225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9224,"mutability":"mutable","name":"name","nameLocation":"9906:4:17","nodeType":"VariableDeclaration","scope":9229,"src":"9890:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9223,"name":"string","nodeType":"ElementaryTypeName","src":"9890:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9889:22:17"},"returnParameters":{"id":9228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9227,"mutability":"mutable","name":"value","nameLocation":"9943:5:17","nodeType":"VariableDeclaration","scope":9229,"src":"9935:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9935:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9934:15:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9240,"nodeType":"FunctionDefinition","src":"10133:112:17","nodes":[],"documentation":{"id":9230,"nodeType":"StructuredDocumentation","src":"9956:172:17","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"10142:10:17","parameters":{"id":9235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9232,"mutability":"mutable","name":"name","nameLocation":"10169:4:17","nodeType":"VariableDeclaration","scope":9240,"src":"10153:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9231,"name":"string","nodeType":"ElementaryTypeName","src":"10153:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9234,"mutability":"mutable","name":"delim","nameLocation":"10191:5:17","nodeType":"VariableDeclaration","scope":9240,"src":"10175:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9233,"name":"string","nodeType":"ElementaryTypeName","src":"10175:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10152:45:17"},"returnParameters":{"id":9239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9238,"mutability":"mutable","name":"value","nameLocation":"10238:5:17","nodeType":"VariableDeclaration","scope":9240,"src":"10221:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10221:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9237,"nodeType":"ArrayTypeName","src":"10221:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10220:24:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9248,"nodeType":"FunctionDefinition","src":"10392:83:17","nodes":[],"documentation":{"id":9241,"nodeType":"StructuredDocumentation","src":"10251:136:17","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10401:8:17","parameters":{"id":9244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9243,"mutability":"mutable","name":"name","nameLocation":"10426:4:17","nodeType":"VariableDeclaration","scope":9248,"src":"10410:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9242,"name":"string","nodeType":"ElementaryTypeName","src":"10410:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10409:22:17"},"returnParameters":{"id":9247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9246,"mutability":"mutable","name":"value","nameLocation":"10468:5:17","nodeType":"VariableDeclaration","scope":9248,"src":"10455:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9245,"name":"bytes","nodeType":"ElementaryTypeName","src":"10455:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10454:20:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9259,"nodeType":"FunctionDefinition","src":"10656:108:17","nodes":[],"documentation":{"id":9249,"nodeType":"StructuredDocumentation","src":"10481:170:17","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10665:8:17","parameters":{"id":9254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9251,"mutability":"mutable","name":"name","nameLocation":"10690:4:17","nodeType":"VariableDeclaration","scope":9259,"src":"10674:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9250,"name":"string","nodeType":"ElementaryTypeName","src":"10674:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9253,"mutability":"mutable","name":"delim","nameLocation":"10712:5:17","nodeType":"VariableDeclaration","scope":9259,"src":"10696:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9252,"name":"string","nodeType":"ElementaryTypeName","src":"10696:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10673:45:17"},"returnParameters":{"id":9258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9257,"mutability":"mutable","name":"value","nameLocation":"10757:5:17","nodeType":"VariableDeclaration","scope":9259,"src":"10742:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":9255,"name":"bytes","nodeType":"ElementaryTypeName","src":"10742:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":9256,"nodeType":"ArrayTypeName","src":"10742:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10741:22:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9267,"nodeType":"FunctionDefinition","src":"10866:77:17","nodes":[],"documentation":{"id":9260,"nodeType":"StructuredDocumentation","src":"10770:91:17","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"10875:9:17","parameters":{"id":9263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9262,"mutability":"mutable","name":"name","nameLocation":"10901:4:17","nodeType":"VariableDeclaration","scope":9267,"src":"10885:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9261,"name":"string","nodeType":"ElementaryTypeName","src":"10885:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10884:22:17"},"returnParameters":{"id":9266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9265,"mutability":"mutable","name":"result","nameLocation":"10935:6:17","nodeType":"VariableDeclaration","scope":9267,"src":"10930:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9264,"name":"bool","nodeType":"ElementaryTypeName","src":"10930:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10929:13:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9275,"nodeType":"FunctionDefinition","src":"11091:75:17","nodes":[],"documentation":{"id":9268,"nodeType":"StructuredDocumentation","src":"10949:137:17","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11100:6:17","parameters":{"id":9271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9270,"mutability":"mutable","name":"name","nameLocation":"11123:4:17","nodeType":"VariableDeclaration","scope":9275,"src":"11107:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9269,"name":"string","nodeType":"ElementaryTypeName","src":"11107:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11106:22:17"},"returnParameters":{"id":9274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9273,"mutability":"mutable","name":"value","nameLocation":"11159:5:17","nodeType":"VariableDeclaration","scope":9275,"src":"11152:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9272,"name":"int256","nodeType":"ElementaryTypeName","src":"11152:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"11151:14:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9286,"nodeType":"FunctionDefinition","src":"11348:107:17","nodes":[],"documentation":{"id":9276,"nodeType":"StructuredDocumentation","src":"11172:171:17","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11357:6:17","parameters":{"id":9281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9278,"mutability":"mutable","name":"name","nameLocation":"11380:4:17","nodeType":"VariableDeclaration","scope":9286,"src":"11364:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9277,"name":"string","nodeType":"ElementaryTypeName","src":"11364:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9280,"mutability":"mutable","name":"delim","nameLocation":"11402:5:17","nodeType":"VariableDeclaration","scope":9286,"src":"11386:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9279,"name":"string","nodeType":"ElementaryTypeName","src":"11386:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11363:45:17"},"returnParameters":{"id":9285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9284,"mutability":"mutable","name":"value","nameLocation":"11448:5:17","nodeType":"VariableDeclaration","scope":9286,"src":"11432:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":9282,"name":"int256","nodeType":"ElementaryTypeName","src":"11432:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9283,"nodeType":"ArrayTypeName","src":"11432:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"11431:23:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9296,"nodeType":"FunctionDefinition","src":"11646:91:17","nodes":[],"documentation":{"id":9287,"nodeType":"StructuredDocumentation","src":"11461:180:17","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11655:5:17","parameters":{"id":9292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9289,"mutability":"mutable","name":"name","nameLocation":"11677:4:17","nodeType":"VariableDeclaration","scope":9296,"src":"11661:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9288,"name":"string","nodeType":"ElementaryTypeName","src":"11661:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9291,"mutability":"mutable","name":"defaultValue","nameLocation":"11688:12:17","nodeType":"VariableDeclaration","scope":9296,"src":"11683:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9290,"name":"bool","nodeType":"ElementaryTypeName","src":"11683:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11660:41:17"},"returnParameters":{"id":9295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9294,"mutability":"mutable","name":"value","nameLocation":"11730:5:17","nodeType":"VariableDeclaration","scope":9296,"src":"11725:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9293,"name":"bool","nodeType":"ElementaryTypeName","src":"11725:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11724:12:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9306,"nodeType":"FunctionDefinition","src":"11931:97:17","nodes":[],"documentation":{"id":9297,"nodeType":"StructuredDocumentation","src":"11743:183:17","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11940:5:17","parameters":{"id":9302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9299,"mutability":"mutable","name":"name","nameLocation":"11962:4:17","nodeType":"VariableDeclaration","scope":9306,"src":"11946:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9298,"name":"string","nodeType":"ElementaryTypeName","src":"11946:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9301,"mutability":"mutable","name":"defaultValue","nameLocation":"11976:12:17","nodeType":"VariableDeclaration","scope":9306,"src":"11968:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9300,"name":"uint256","nodeType":"ElementaryTypeName","src":"11968:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11945:44:17"},"returnParameters":{"id":9305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9304,"mutability":"mutable","name":"value","nameLocation":"12021:5:17","nodeType":"VariableDeclaration","scope":9306,"src":"12013:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9303,"name":"uint256","nodeType":"ElementaryTypeName","src":"12013:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12012:15:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9320,"nodeType":"FunctionDefinition","src":"12256:164:17","nodes":[],"documentation":{"id":9307,"nodeType":"StructuredDocumentation","src":"12034:217:17","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12265:5:17","parameters":{"id":9315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9309,"mutability":"mutable","name":"name","nameLocation":"12287:4:17","nodeType":"VariableDeclaration","scope":9320,"src":"12271:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9308,"name":"string","nodeType":"ElementaryTypeName","src":"12271:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9311,"mutability":"mutable","name":"delim","nameLocation":"12309:5:17","nodeType":"VariableDeclaration","scope":9320,"src":"12293:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9310,"name":"string","nodeType":"ElementaryTypeName","src":"12293:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9314,"mutability":"mutable","name":"defaultValue","nameLocation":"12335:12:17","nodeType":"VariableDeclaration","scope":9320,"src":"12316:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9312,"name":"address","nodeType":"ElementaryTypeName","src":"12316:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9313,"nodeType":"ArrayTypeName","src":"12316:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12270:78:17"},"returnParameters":{"id":9319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9318,"mutability":"mutable","name":"value","nameLocation":"12413:5:17","nodeType":"VariableDeclaration","scope":9320,"src":"12396:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9316,"name":"address","nodeType":"ElementaryTypeName","src":"12396:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9317,"nodeType":"ArrayTypeName","src":"12396:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12395:24:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9334,"nodeType":"FunctionDefinition","src":"12648:164:17","nodes":[],"documentation":{"id":9321,"nodeType":"StructuredDocumentation","src":"12426:217:17","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12657:5:17","parameters":{"id":9329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9323,"mutability":"mutable","name":"name","nameLocation":"12679:4:17","nodeType":"VariableDeclaration","scope":9334,"src":"12663:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9322,"name":"string","nodeType":"ElementaryTypeName","src":"12663:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9325,"mutability":"mutable","name":"delim","nameLocation":"12701:5:17","nodeType":"VariableDeclaration","scope":9334,"src":"12685:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9324,"name":"string","nodeType":"ElementaryTypeName","src":"12685:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9328,"mutability":"mutable","name":"defaultValue","nameLocation":"12727:12:17","nodeType":"VariableDeclaration","scope":9334,"src":"12708:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12708:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9327,"nodeType":"ArrayTypeName","src":"12708:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12662:78:17"},"returnParameters":{"id":9333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9332,"mutability":"mutable","name":"value","nameLocation":"12805:5:17","nodeType":"VariableDeclaration","scope":9334,"src":"12788:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12788:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9331,"nodeType":"ArrayTypeName","src":"12788:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12787:24:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9348,"nodeType":"FunctionDefinition","src":"13039:162:17","nodes":[],"documentation":{"id":9335,"nodeType":"StructuredDocumentation","src":"12818:216:17","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13048:5:17","parameters":{"id":9343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9337,"mutability":"mutable","name":"name","nameLocation":"13070:4:17","nodeType":"VariableDeclaration","scope":9348,"src":"13054:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9336,"name":"string","nodeType":"ElementaryTypeName","src":"13054:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9339,"mutability":"mutable","name":"delim","nameLocation":"13092:5:17","nodeType":"VariableDeclaration","scope":9348,"src":"13076:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9338,"name":"string","nodeType":"ElementaryTypeName","src":"13076:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9342,"mutability":"mutable","name":"defaultValue","nameLocation":"13117:12:17","nodeType":"VariableDeclaration","scope":9348,"src":"13099:30:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":9340,"name":"string","nodeType":"ElementaryTypeName","src":"13099:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":9341,"nodeType":"ArrayTypeName","src":"13099:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13053:77:17"},"returnParameters":{"id":9347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9346,"mutability":"mutable","name":"value","nameLocation":"13194:5:17","nodeType":"VariableDeclaration","scope":9348,"src":"13178:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":9344,"name":"string","nodeType":"ElementaryTypeName","src":"13178:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":9345,"nodeType":"ArrayTypeName","src":"13178:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13177:23:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9362,"nodeType":"FunctionDefinition","src":"13427:160:17","nodes":[],"documentation":{"id":9349,"nodeType":"StructuredDocumentation","src":"13207:215:17","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13436:5:17","parameters":{"id":9357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9351,"mutability":"mutable","name":"name","nameLocation":"13458:4:17","nodeType":"VariableDeclaration","scope":9362,"src":"13442:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9350,"name":"string","nodeType":"ElementaryTypeName","src":"13442:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9353,"mutability":"mutable","name":"delim","nameLocation":"13480:5:17","nodeType":"VariableDeclaration","scope":9362,"src":"13464:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9352,"name":"string","nodeType":"ElementaryTypeName","src":"13464:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9356,"mutability":"mutable","name":"defaultValue","nameLocation":"13504:12:17","nodeType":"VariableDeclaration","scope":9362,"src":"13487:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":9354,"name":"bytes","nodeType":"ElementaryTypeName","src":"13487:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":9355,"nodeType":"ArrayTypeName","src":"13487:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13441:76:17"},"returnParameters":{"id":9361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9360,"mutability":"mutable","name":"value","nameLocation":"13580:5:17","nodeType":"VariableDeclaration","scope":9362,"src":"13565:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":9358,"name":"bytes","nodeType":"ElementaryTypeName","src":"13565:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":9359,"nodeType":"ArrayTypeName","src":"13565:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13564:22:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9372,"nodeType":"FunctionDefinition","src":"13780:95:17","nodes":[],"documentation":{"id":9363,"nodeType":"StructuredDocumentation","src":"13593:182:17","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13789:5:17","parameters":{"id":9368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9365,"mutability":"mutable","name":"name","nameLocation":"13811:4:17","nodeType":"VariableDeclaration","scope":9372,"src":"13795:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9364,"name":"string","nodeType":"ElementaryTypeName","src":"13795:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9367,"mutability":"mutable","name":"defaultValue","nameLocation":"13824:12:17","nodeType":"VariableDeclaration","scope":9372,"src":"13817:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9366,"name":"int256","nodeType":"ElementaryTypeName","src":"13817:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13794:43:17"},"returnParameters":{"id":9371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9370,"mutability":"mutable","name":"value","nameLocation":"13868:5:17","nodeType":"VariableDeclaration","scope":9372,"src":"13861:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9369,"name":"int256","nodeType":"ElementaryTypeName","src":"13861:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13860:14:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9382,"nodeType":"FunctionDefinition","src":"14069:97:17","nodes":[],"documentation":{"id":9373,"nodeType":"StructuredDocumentation","src":"13881:183:17","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14078:5:17","parameters":{"id":9378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9375,"mutability":"mutable","name":"name","nameLocation":"14100:4:17","nodeType":"VariableDeclaration","scope":9382,"src":"14084:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9374,"name":"string","nodeType":"ElementaryTypeName","src":"14084:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9377,"mutability":"mutable","name":"defaultValue","nameLocation":"14114:12:17","nodeType":"VariableDeclaration","scope":9382,"src":"14106:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9376,"name":"address","nodeType":"ElementaryTypeName","src":"14106:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14083:44:17"},"returnParameters":{"id":9381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9380,"mutability":"mutable","name":"value","nameLocation":"14159:5:17","nodeType":"VariableDeclaration","scope":9382,"src":"14151:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9379,"name":"address","nodeType":"ElementaryTypeName","src":"14151:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14150:15:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9392,"nodeType":"FunctionDefinition","src":"14360:97:17","nodes":[],"documentation":{"id":9383,"nodeType":"StructuredDocumentation","src":"14172:183:17","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14369:5:17","parameters":{"id":9388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9385,"mutability":"mutable","name":"name","nameLocation":"14391:4:17","nodeType":"VariableDeclaration","scope":9392,"src":"14375:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9384,"name":"string","nodeType":"ElementaryTypeName","src":"14375:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9387,"mutability":"mutable","name":"defaultValue","nameLocation":"14405:12:17","nodeType":"VariableDeclaration","scope":9392,"src":"14397:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14397:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14374:44:17"},"returnParameters":{"id":9391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9390,"mutability":"mutable","name":"value","nameLocation":"14450:5:17","nodeType":"VariableDeclaration","scope":9392,"src":"14442:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14442:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14441:15:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9402,"nodeType":"FunctionDefinition","src":"14650:111:17","nodes":[],"documentation":{"id":9393,"nodeType":"StructuredDocumentation","src":"14463:182:17","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14659:5:17","parameters":{"id":9398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9395,"mutability":"mutable","name":"name","nameLocation":"14681:4:17","nodeType":"VariableDeclaration","scope":9402,"src":"14665:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9394,"name":"string","nodeType":"ElementaryTypeName","src":"14665:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9397,"mutability":"mutable","name":"defaultValue","nameLocation":"14703:12:17","nodeType":"VariableDeclaration","scope":9402,"src":"14687:28:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9396,"name":"string","nodeType":"ElementaryTypeName","src":"14687:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14664:52:17"},"returnParameters":{"id":9401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9400,"mutability":"mutable","name":"value","nameLocation":"14754:5:17","nodeType":"VariableDeclaration","scope":9402,"src":"14740:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9399,"name":"string","nodeType":"ElementaryTypeName","src":"14740:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14739:21:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9412,"nodeType":"FunctionDefinition","src":"14953:109:17","nodes":[],"documentation":{"id":9403,"nodeType":"StructuredDocumentation","src":"14767:181:17","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14962:5:17","parameters":{"id":9408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9405,"mutability":"mutable","name":"name","nameLocation":"14984:4:17","nodeType":"VariableDeclaration","scope":9412,"src":"14968:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9404,"name":"string","nodeType":"ElementaryTypeName","src":"14968:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9407,"mutability":"mutable","name":"defaultValue","nameLocation":"15005:12:17","nodeType":"VariableDeclaration","scope":9412,"src":"14990:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9406,"name":"bytes","nodeType":"ElementaryTypeName","src":"14990:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14967:51:17"},"returnParameters":{"id":9411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9410,"mutability":"mutable","name":"value","nameLocation":"15055:5:17","nodeType":"VariableDeclaration","scope":9412,"src":"15042:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9409,"name":"bytes","nodeType":"ElementaryTypeName","src":"15042:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15041:20:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9426,"nodeType":"FunctionDefinition","src":"15287:158:17","nodes":[],"documentation":{"id":9413,"nodeType":"StructuredDocumentation","src":"15068:214:17","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15296:5:17","parameters":{"id":9421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9415,"mutability":"mutable","name":"name","nameLocation":"15318:4:17","nodeType":"VariableDeclaration","scope":9426,"src":"15302:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9414,"name":"string","nodeType":"ElementaryTypeName","src":"15302:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9417,"mutability":"mutable","name":"delim","nameLocation":"15340:5:17","nodeType":"VariableDeclaration","scope":9426,"src":"15324:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9416,"name":"string","nodeType":"ElementaryTypeName","src":"15324:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9420,"mutability":"mutable","name":"defaultValue","nameLocation":"15363:12:17","nodeType":"VariableDeclaration","scope":9426,"src":"15347:28:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":9418,"name":"bool","nodeType":"ElementaryTypeName","src":"15347:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9419,"nodeType":"ArrayTypeName","src":"15347:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15301:75:17"},"returnParameters":{"id":9425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9424,"mutability":"mutable","name":"value","nameLocation":"15438:5:17","nodeType":"VariableDeclaration","scope":9426,"src":"15424:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":9422,"name":"bool","nodeType":"ElementaryTypeName","src":"15424:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9423,"nodeType":"ArrayTypeName","src":"15424:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15423:21:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9440,"nodeType":"FunctionDefinition","src":"15673:164:17","nodes":[],"documentation":{"id":9427,"nodeType":"StructuredDocumentation","src":"15451:217:17","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15682:5:17","parameters":{"id":9435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9429,"mutability":"mutable","name":"name","nameLocation":"15704:4:17","nodeType":"VariableDeclaration","scope":9440,"src":"15688:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9428,"name":"string","nodeType":"ElementaryTypeName","src":"15688:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9431,"mutability":"mutable","name":"delim","nameLocation":"15726:5:17","nodeType":"VariableDeclaration","scope":9440,"src":"15710:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9430,"name":"string","nodeType":"ElementaryTypeName","src":"15710:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9434,"mutability":"mutable","name":"defaultValue","nameLocation":"15752:12:17","nodeType":"VariableDeclaration","scope":9440,"src":"15733:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9432,"name":"uint256","nodeType":"ElementaryTypeName","src":"15733:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9433,"nodeType":"ArrayTypeName","src":"15733:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15687:78:17"},"returnParameters":{"id":9439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9438,"mutability":"mutable","name":"value","nameLocation":"15830:5:17","nodeType":"VariableDeclaration","scope":9440,"src":"15813:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9436,"name":"uint256","nodeType":"ElementaryTypeName","src":"15813:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9437,"nodeType":"ArrayTypeName","src":"15813:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15812:24:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9454,"nodeType":"FunctionDefinition","src":"16064:162:17","nodes":[],"documentation":{"id":9441,"nodeType":"StructuredDocumentation","src":"15843:216:17","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"16073:5:17","parameters":{"id":9449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9443,"mutability":"mutable","name":"name","nameLocation":"16095:4:17","nodeType":"VariableDeclaration","scope":9454,"src":"16079:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9442,"name":"string","nodeType":"ElementaryTypeName","src":"16079:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9445,"mutability":"mutable","name":"delim","nameLocation":"16117:5:17","nodeType":"VariableDeclaration","scope":9454,"src":"16101:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9444,"name":"string","nodeType":"ElementaryTypeName","src":"16101:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9448,"mutability":"mutable","name":"defaultValue","nameLocation":"16142:12:17","nodeType":"VariableDeclaration","scope":9454,"src":"16124:30:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":9446,"name":"int256","nodeType":"ElementaryTypeName","src":"16124:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9447,"nodeType":"ArrayTypeName","src":"16124:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16078:77:17"},"returnParameters":{"id":9453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9452,"mutability":"mutable","name":"value","nameLocation":"16219:5:17","nodeType":"VariableDeclaration","scope":9454,"src":"16203:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":9450,"name":"int256","nodeType":"ElementaryTypeName","src":"16203:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9451,"nodeType":"ArrayTypeName","src":"16203:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16202:23:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9462,"nodeType":"FunctionDefinition","src":"16374:85:17","nodes":[],"documentation":{"id":9455,"nodeType":"StructuredDocumentation","src":"16232:137:17","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16383:9:17","parameters":{"id":9458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9457,"mutability":"mutable","name":"name","nameLocation":"16409:4:17","nodeType":"VariableDeclaration","scope":9462,"src":"16393:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9456,"name":"string","nodeType":"ElementaryTypeName","src":"16393:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16392:22:17"},"returnParameters":{"id":9461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9460,"mutability":"mutable","name":"value","nameLocation":"16452:5:17","nodeType":"VariableDeclaration","scope":9462,"src":"16438:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9459,"name":"string","nodeType":"ElementaryTypeName","src":"16438:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16437:21:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9473,"nodeType":"FunctionDefinition","src":"16641:110:17","nodes":[],"documentation":{"id":9463,"nodeType":"StructuredDocumentation","src":"16465:171:17","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16650:9:17","parameters":{"id":9468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9465,"mutability":"mutable","name":"name","nameLocation":"16676:4:17","nodeType":"VariableDeclaration","scope":9473,"src":"16660:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9464,"name":"string","nodeType":"ElementaryTypeName","src":"16660:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9467,"mutability":"mutable","name":"delim","nameLocation":"16698:5:17","nodeType":"VariableDeclaration","scope":9473,"src":"16682:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9466,"name":"string","nodeType":"ElementaryTypeName","src":"16682:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16659:45:17"},"returnParameters":{"id":9472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9471,"mutability":"mutable","name":"value","nameLocation":"16744:5:17","nodeType":"VariableDeclaration","scope":9473,"src":"16728:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":9469,"name":"string","nodeType":"ElementaryTypeName","src":"16728:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":9470,"nodeType":"ArrayTypeName","src":"16728:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"16727:23:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9481,"nodeType":"FunctionDefinition","src":"16900:77:17","nodes":[],"documentation":{"id":9474,"nodeType":"StructuredDocumentation","src":"16757:138:17","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"16909:7:17","parameters":{"id":9477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9476,"mutability":"mutable","name":"name","nameLocation":"16933:4:17","nodeType":"VariableDeclaration","scope":9481,"src":"16917:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9475,"name":"string","nodeType":"ElementaryTypeName","src":"16917:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16916:22:17"},"returnParameters":{"id":9480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9479,"mutability":"mutable","name":"value","nameLocation":"16970:5:17","nodeType":"VariableDeclaration","scope":9481,"src":"16962:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9478,"name":"uint256","nodeType":"ElementaryTypeName","src":"16962:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16961:15:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9492,"nodeType":"FunctionDefinition","src":"17160:109:17","nodes":[],"documentation":{"id":9482,"nodeType":"StructuredDocumentation","src":"16983:172:17","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"17169:7:17","parameters":{"id":9487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9484,"mutability":"mutable","name":"name","nameLocation":"17193:4:17","nodeType":"VariableDeclaration","scope":9492,"src":"17177:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9483,"name":"string","nodeType":"ElementaryTypeName","src":"17177:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9486,"mutability":"mutable","name":"delim","nameLocation":"17215:5:17","nodeType":"VariableDeclaration","scope":9492,"src":"17199:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9485,"name":"string","nodeType":"ElementaryTypeName","src":"17199:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17176:45:17"},"returnParameters":{"id":9491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9490,"mutability":"mutable","name":"value","nameLocation":"17262:5:17","nodeType":"VariableDeclaration","scope":9492,"src":"17245:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9488,"name":"uint256","nodeType":"ElementaryTypeName","src":"17245:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9489,"nodeType":"ArrayTypeName","src":"17245:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17244:24:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9501,"nodeType":"FunctionDefinition","src":"17346:77:17","nodes":[],"documentation":{"id":9493,"nodeType":"StructuredDocumentation","src":"17275:66:17","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"17355:9:17","parameters":{"id":9497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9496,"mutability":"mutable","name":"context","nameLocation":"17378:7:17","nodeType":"VariableDeclaration","scope":9501,"src":"17365:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$9037","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":9495,"nodeType":"UserDefinedTypeName","pathNode":{"id":9494,"name":"ForgeContext","nameLocations":["17365:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":9037,"src":"17365:12:17"},"referencedDeclaration":9037,"src":"17365:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$9037","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"17364:22:17"},"returnParameters":{"id":9500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9499,"mutability":"mutable","name":"result","nameLocation":"17415:6:17","nodeType":"VariableDeclaration","scope":9501,"src":"17410:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9498,"name":"bool","nodeType":"ElementaryTypeName","src":"17410:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17409:13:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9509,"nodeType":"FunctionDefinition","src":"17465:70:17","nodes":[],"documentation":{"id":9502,"nodeType":"StructuredDocumentation","src":"17429:31:17","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"17474:6:17","parameters":{"id":9507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9504,"mutability":"mutable","name":"name","nameLocation":"17497:4:17","nodeType":"VariableDeclaration","scope":9509,"src":"17481:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9503,"name":"string","nodeType":"ElementaryTypeName","src":"17481:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9506,"mutability":"mutable","name":"value","nameLocation":"17519:5:17","nodeType":"VariableDeclaration","scope":9509,"src":"17503:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9505,"name":"string","nodeType":"ElementaryTypeName","src":"17503:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17480:45:17"},"returnParameters":{"id":9508,"nodeType":"ParameterList","parameters":[],"src":"17534:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9521,"nodeType":"FunctionDefinition","src":"17667:109:17","nodes":[],"documentation":{"id":9510,"nodeType":"StructuredDocumentation","src":"17571:91:17","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"17676:8:17","parameters":{"id":9513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9512,"mutability":"mutable","name":"target","nameLocation":"17693:6:17","nodeType":"VariableDeclaration","scope":9521,"src":"17685:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9511,"name":"address","nodeType":"ElementaryTypeName","src":"17685:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17684:16:17"},"returnParameters":{"id":9520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9516,"mutability":"mutable","name":"readSlots","nameLocation":"17736:9:17","nodeType":"VariableDeclaration","scope":9521,"src":"17719:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17719:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9515,"nodeType":"ArrayTypeName","src":"17719:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":9519,"mutability":"mutable","name":"writeSlots","nameLocation":"17764:10:17","nodeType":"VariableDeclaration","scope":9521,"src":"17747:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9518,"nodeType":"ArrayTypeName","src":"17747:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17718:57:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9529,"nodeType":"FunctionDefinition","src":"17832:74:17","nodes":[],"documentation":{"id":9522,"nodeType":"StructuredDocumentation","src":"17782:45:17","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"17841:4:17","parameters":{"id":9525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9524,"mutability":"mutable","name":"privateKey","nameLocation":"17854:10:17","nodeType":"VariableDeclaration","scope":9529,"src":"17846:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9523,"name":"uint256","nodeType":"ElementaryTypeName","src":"17846:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17845:20:17"},"returnParameters":{"id":9528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9527,"mutability":"mutable","name":"keyAddr","nameLocation":"17897:7:17","nodeType":"VariableDeclaration","scope":9529,"src":"17889:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9526,"name":"address","nodeType":"ElementaryTypeName","src":"17889:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17888:17:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":9546,"nodeType":"FunctionDefinition","src":"17969:160:17","nodes":[],"documentation":{"id":9530,"nodeType":"StructuredDocumentation","src":"17912:52:17","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"17978:11:17","parameters":{"id":9540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9532,"mutability":"mutable","name":"fromBlock","nameLocation":"17998:9:17","nodeType":"VariableDeclaration","scope":9546,"src":"17990:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9531,"name":"uint256","nodeType":"ElementaryTypeName","src":"17990:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9534,"mutability":"mutable","name":"toBlock","nameLocation":"18017:7:17","nodeType":"VariableDeclaration","scope":9546,"src":"18009:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9533,"name":"uint256","nodeType":"ElementaryTypeName","src":"18009:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9536,"mutability":"mutable","name":"target","nameLocation":"18034:6:17","nodeType":"VariableDeclaration","scope":9546,"src":"18026:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9535,"name":"address","nodeType":"ElementaryTypeName","src":"18026:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9539,"mutability":"mutable","name":"topics","nameLocation":"18061:6:17","nodeType":"VariableDeclaration","scope":9546,"src":"18042:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18042:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9538,"nodeType":"ArrayTypeName","src":"18042:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17989:79:17"},"returnParameters":{"id":9545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9544,"mutability":"mutable","name":"logs","nameLocation":"18123:4:17","nodeType":"VariableDeclaration","scope":9546,"src":"18103:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$9073_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":9542,"nodeType":"UserDefinedTypeName","pathNode":{"id":9541,"name":"EthGetLogs","nameLocations":["18103:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":9073,"src":"18103:10:17"},"referencedDeclaration":9073,"src":"18103:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$9073_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":9543,"nodeType":"ArrayTypeName","src":"18103:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$9073_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"18102:26:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9552,"nodeType":"FunctionDefinition","src":"18466:70:17","nodes":[],"documentation":{"id":9547,"nodeType":"StructuredDocumentation","src":"18135:326:17","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"18475:14:17","parameters":{"id":9548,"nodeType":"ParameterList","parameters":[],"src":"18489:2:17"},"returnParameters":{"id":9551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9550,"mutability":"mutable","name":"blobBaseFee","nameLocation":"18523:11:17","nodeType":"VariableDeclaration","scope":9552,"src":"18515:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9549,"name":"uint256","nodeType":"ElementaryTypeName","src":"18515:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18514:21:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9558,"nodeType":"FunctionDefinition","src":"18851:65:17","nodes":[],"documentation":{"id":9553,"nodeType":"StructuredDocumentation","src":"18542:304:17","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"18860:14:17","parameters":{"id":9554,"nodeType":"ParameterList","parameters":[],"src":"18874:2:17"},"returnParameters":{"id":9557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9556,"mutability":"mutable","name":"height","nameLocation":"18908:6:17","nodeType":"VariableDeclaration","scope":9558,"src":"18900:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9555,"name":"uint256","nodeType":"ElementaryTypeName","src":"18900:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18899:16:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9564,"nodeType":"FunctionDefinition","src":"19240:71:17","nodes":[],"documentation":{"id":9559,"nodeType":"StructuredDocumentation","src":"18922:313:17","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"19249:17:17","parameters":{"id":9560,"nodeType":"ParameterList","parameters":[],"src":"19266:2:17"},"returnParameters":{"id":9563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9562,"mutability":"mutable","name":"timestamp","nameLocation":"19300:9:17","nodeType":"VariableDeclaration","scope":9564,"src":"19292:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9561,"name":"uint256","nodeType":"ElementaryTypeName","src":"19292:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19291:19:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9578,"nodeType":"FunctionDefinition","src":"19404:146:17","nodes":[],"documentation":{"id":9565,"nodeType":"StructuredDocumentation","src":"19317:82:17","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"19413:24:17","parameters":{"id":9570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9567,"mutability":"mutable","name":"target","nameLocation":"19446:6:17","nodeType":"VariableDeclaration","scope":9578,"src":"19438:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9566,"name":"address","nodeType":"ElementaryTypeName","src":"19438:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9569,"mutability":"mutable","name":"elementSlot","nameLocation":"19462:11:17","nodeType":"VariableDeclaration","scope":9578,"src":"19454:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19454:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19437:37:17"},"returnParameters":{"id":9577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9572,"mutability":"mutable","name":"found","nameLocation":"19514:5:17","nodeType":"VariableDeclaration","scope":9578,"src":"19509:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9571,"name":"bool","nodeType":"ElementaryTypeName","src":"19509:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9574,"mutability":"mutable","name":"key","nameLocation":"19529:3:17","nodeType":"VariableDeclaration","scope":9578,"src":"19521:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19521:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9576,"mutability":"mutable","name":"parent","nameLocation":"19542:6:17","nodeType":"VariableDeclaration","scope":9578,"src":"19534:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19534:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19508:41:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9588,"nodeType":"FunctionDefinition","src":"19647:97:17","nodes":[],"documentation":{"id":9579,"nodeType":"StructuredDocumentation","src":"19556:86:17","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"19656:16:17","parameters":{"id":9584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9581,"mutability":"mutable","name":"target","nameLocation":"19681:6:17","nodeType":"VariableDeclaration","scope":9588,"src":"19673:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9580,"name":"address","nodeType":"ElementaryTypeName","src":"19673:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9583,"mutability":"mutable","name":"mappingSlot","nameLocation":"19697:11:17","nodeType":"VariableDeclaration","scope":9588,"src":"19689:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19689:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19672:37:17"},"returnParameters":{"id":9587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9586,"mutability":"mutable","name":"length","nameLocation":"19736:6:17","nodeType":"VariableDeclaration","scope":9588,"src":"19728:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9585,"name":"uint256","nodeType":"ElementaryTypeName","src":"19728:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19727:16:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9600,"nodeType":"FunctionDefinition","src":"19948:109:17","nodes":[],"documentation":{"id":9589,"nodeType":"StructuredDocumentation","src":"19750:193:17","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"19957:16:17","parameters":{"id":9596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9591,"mutability":"mutable","name":"target","nameLocation":"19982:6:17","nodeType":"VariableDeclaration","scope":9600,"src":"19974:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9590,"name":"address","nodeType":"ElementaryTypeName","src":"19974:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9593,"mutability":"mutable","name":"mappingSlot","nameLocation":"19998:11:17","nodeType":"VariableDeclaration","scope":9600,"src":"19990:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19990:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9595,"mutability":"mutable","name":"idx","nameLocation":"20019:3:17","nodeType":"VariableDeclaration","scope":9600,"src":"20011:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9594,"name":"uint256","nodeType":"ElementaryTypeName","src":"20011:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19973:50:17"},"returnParameters":{"id":9599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9598,"mutability":"mutable","name":"value","nameLocation":"20050:5:17","nodeType":"VariableDeclaration","scope":9600,"src":"20042:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20042:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20041:15:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9608,"nodeType":"FunctionDefinition","src":"20101:72:17","nodes":[],"documentation":{"id":9601,"nodeType":"StructuredDocumentation","src":"20063:33:17","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"20110:8:17","parameters":{"id":9604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9603,"mutability":"mutable","name":"account","nameLocation":"20127:7:17","nodeType":"VariableDeclaration","scope":9608,"src":"20119:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9602,"name":"address","nodeType":"ElementaryTypeName","src":"20119:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20118:17:17"},"returnParameters":{"id":9607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9606,"mutability":"mutable","name":"nonce","nameLocation":"20166:5:17","nodeType":"VariableDeclaration","scope":9608,"src":"20159:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9605,"name":"uint64","nodeType":"ElementaryTypeName","src":"20159:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"20158:14:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9616,"nodeType":"FunctionDefinition","src":"20215:64:17","nodes":[],"documentation":{"id":9609,"nodeType":"StructuredDocumentation","src":"20179:31:17","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"20224:15:17","parameters":{"id":9610,"nodeType":"ParameterList","parameters":[],"src":"20239:2:17"},"returnParameters":{"id":9615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9614,"mutability":"mutable","name":"logs","nameLocation":"20273:4:17","nodeType":"VariableDeclaration","scope":9616,"src":"20260:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$9046_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":9612,"nodeType":"UserDefinedTypeName","pathNode":{"id":9611,"name":"Log","nameLocations":["20260:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":9046,"src":"20260:3:17"},"referencedDeclaration":9046,"src":"20260:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$9046_storage_ptr","typeString":"struct VmSafe.Log"}},"id":9613,"nodeType":"ArrayTypeName","src":"20260:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$9046_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"20259:19:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9623,"nodeType":"FunctionDefinition","src":"20329:62:17","nodes":[],"documentation":{"id":9617,"nodeType":"StructuredDocumentation","src":"20285:39:17","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"20338:11:17","parameters":{"id":9618,"nodeType":"ParameterList","parameters":[],"src":"20349:2:17"},"returnParameters":{"id":9622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9621,"mutability":"mutable","name":"gas","nameLocation":"20386:3:17","nodeType":"VariableDeclaration","scope":9623,"src":"20375:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$9183_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":9620,"nodeType":"UserDefinedTypeName","pathNode":{"id":9619,"name":"Gas","nameLocations":["20375:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":9183,"src":"20375:3:17"},"referencedDeclaration":9183,"src":"20375:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$9183_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"20374:16:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9633,"nodeType":"FunctionDefinition","src":"20443:81:17","nodes":[],"documentation":{"id":9624,"nodeType":"StructuredDocumentation","src":"20397:41:17","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"20452:4:17","parameters":{"id":9629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9626,"mutability":"mutable","name":"target","nameLocation":"20465:6:17","nodeType":"VariableDeclaration","scope":9633,"src":"20457:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9625,"name":"address","nodeType":"ElementaryTypeName","src":"20457:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9628,"mutability":"mutable","name":"slot","nameLocation":"20481:4:17","nodeType":"VariableDeclaration","scope":9633,"src":"20473:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20473:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20456:30:17"},"returnParameters":{"id":9632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9631,"mutability":"mutable","name":"data","nameLocation":"20518:4:17","nodeType":"VariableDeclaration","scope":9633,"src":"20510:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20510:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20509:14:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9637,"nodeType":"FunctionDefinition","src":"20615:37:17","nodes":[],"documentation":{"id":9634,"nodeType":"StructuredDocumentation","src":"20530:80:17","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"20624:16:17","parameters":{"id":9635,"nodeType":"ParameterList","parameters":[],"src":"20640:2:17"},"returnParameters":{"id":9636,"nodeType":"ParameterList","parameters":[],"src":"20651:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9641,"nodeType":"FunctionDefinition","src":"20704:27:17","nodes":[],"documentation":{"id":9638,"nodeType":"StructuredDocumentation","src":"20658:41:17","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"20713:6:17","parameters":{"id":9639,"nodeType":"ParameterList","parameters":[],"src":"20719:2:17"},"returnParameters":{"id":9640,"nodeType":"ParameterList","parameters":[],"src":"20730:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9645,"nodeType":"FunctionDefinition","src":"20778:31:17","nodes":[],"documentation":{"id":9642,"nodeType":"StructuredDocumentation","src":"20737:36:17","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"20787:10:17","parameters":{"id":9643,"nodeType":"ParameterList","parameters":[],"src":"20797:2:17"},"returnParameters":{"id":9644,"nodeType":"ParameterList","parameters":[],"src":"20808:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9649,"nodeType":"FunctionDefinition","src":"20899:38:17","nodes":[],"documentation":{"id":9646,"nodeType":"StructuredDocumentation","src":"20815:79:17","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"20908:17:17","parameters":{"id":9647,"nodeType":"ParameterList","parameters":[],"src":"20925:2:17"},"returnParameters":{"id":9648,"nodeType":"ParameterList","parameters":[],"src":"20936:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9659,"nodeType":"FunctionDefinition","src":"21014:98:17","nodes":[],"documentation":{"id":9650,"nodeType":"StructuredDocumentation","src":"20943:66:17","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"21023:3:17","parameters":{"id":9655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9652,"mutability":"mutable","name":"method","nameLocation":"21043:6:17","nodeType":"VariableDeclaration","scope":9659,"src":"21027:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9651,"name":"string","nodeType":"ElementaryTypeName","src":"21027:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9654,"mutability":"mutable","name":"params","nameLocation":"21067:6:17","nodeType":"VariableDeclaration","scope":9659,"src":"21051:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9653,"name":"string","nodeType":"ElementaryTypeName","src":"21051:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21026:48:17"},"returnParameters":{"id":9658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9657,"mutability":"mutable","name":"data","nameLocation":"21106:4:17","nodeType":"VariableDeclaration","scope":9659,"src":"21093:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9656,"name":"bytes","nodeType":"ElementaryTypeName","src":"21093:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21092:19:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9671,"nodeType":"FunctionDefinition","src":"21186:99:17","nodes":[],"documentation":{"id":9660,"nodeType":"StructuredDocumentation","src":"21118:63:17","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"21195:8:17","parameters":{"id":9665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9662,"mutability":"mutable","name":"privateKey","nameLocation":"21212:10:17","nodeType":"VariableDeclaration","scope":9671,"src":"21204:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9661,"name":"uint256","nodeType":"ElementaryTypeName","src":"21204:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9664,"mutability":"mutable","name":"digest","nameLocation":"21232:6:17","nodeType":"VariableDeclaration","scope":9671,"src":"21224:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21224:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21203:36:17"},"returnParameters":{"id":9670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9667,"mutability":"mutable","name":"r","nameLocation":"21271:1:17","nodeType":"VariableDeclaration","scope":9671,"src":"21263:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21263:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9669,"mutability":"mutable","name":"s","nameLocation":"21282:1:17","nodeType":"VariableDeclaration","scope":9671,"src":"21274:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21274:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21262:22:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":9685,"nodeType":"FunctionDefinition","src":"21359:104:17","nodes":[],"documentation":{"id":9672,"nodeType":"StructuredDocumentation","src":"21291:63:17","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"21368:4:17","parameters":{"id":9677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9674,"mutability":"mutable","name":"privateKey","nameLocation":"21381:10:17","nodeType":"VariableDeclaration","scope":9685,"src":"21373:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9673,"name":"uint256","nodeType":"ElementaryTypeName","src":"21373:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9676,"mutability":"mutable","name":"digest","nameLocation":"21401:6:17","nodeType":"VariableDeclaration","scope":9685,"src":"21393:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21393:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21372:36:17"},"returnParameters":{"id":9684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9679,"mutability":"mutable","name":"v","nameLocation":"21438:1:17","nodeType":"VariableDeclaration","scope":9685,"src":"21432:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9678,"name":"uint8","nodeType":"ElementaryTypeName","src":"21432:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":9681,"mutability":"mutable","name":"r","nameLocation":"21449:1:17","nodeType":"VariableDeclaration","scope":9685,"src":"21441:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21441:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9683,"mutability":"mutable","name":"s","nameLocation":"21460:1:17","nodeType":"VariableDeclaration","scope":9685,"src":"21452:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21452:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21431:31:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":9697,"nodeType":"FunctionDefinition","src":"21902:84:17","nodes":[],"documentation":{"id":9686,"nodeType":"StructuredDocumentation","src":"21469:428:17","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"21911:4:17","parameters":{"id":9689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9688,"mutability":"mutable","name":"digest","nameLocation":"21924:6:17","nodeType":"VariableDeclaration","scope":9697,"src":"21916:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21916:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21915:16:17"},"returnParameters":{"id":9696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9691,"mutability":"mutable","name":"v","nameLocation":"21961:1:17","nodeType":"VariableDeclaration","scope":9697,"src":"21955:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9690,"name":"uint8","nodeType":"ElementaryTypeName","src":"21955:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":9693,"mutability":"mutable","name":"r","nameLocation":"21972:1:17","nodeType":"VariableDeclaration","scope":9697,"src":"21964:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21964:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9695,"mutability":"mutable","name":"s","nameLocation":"21983:1:17","nodeType":"VariableDeclaration","scope":9697,"src":"21975:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21975:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21954:31:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":9711,"nodeType":"FunctionDefinition","src":"22163:100:17","nodes":[],"documentation":{"id":9698,"nodeType":"StructuredDocumentation","src":"21992:166:17","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"22172:4:17","parameters":{"id":9703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9700,"mutability":"mutable","name":"signer","nameLocation":"22185:6:17","nodeType":"VariableDeclaration","scope":9711,"src":"22177:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9699,"name":"address","nodeType":"ElementaryTypeName","src":"22177:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9702,"mutability":"mutable","name":"digest","nameLocation":"22201:6:17","nodeType":"VariableDeclaration","scope":9711,"src":"22193:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22193:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22176:32:17"},"returnParameters":{"id":9710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9705,"mutability":"mutable","name":"v","nameLocation":"22238:1:17","nodeType":"VariableDeclaration","scope":9711,"src":"22232:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9704,"name":"uint8","nodeType":"ElementaryTypeName","src":"22232:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":9707,"mutability":"mutable","name":"r","nameLocation":"22249:1:17","nodeType":"VariableDeclaration","scope":9711,"src":"22241:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22241:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9709,"mutability":"mutable","name":"s","nameLocation":"22260:1:17","nodeType":"VariableDeclaration","scope":9711,"src":"22252:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22252:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22231:31:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":9715,"nodeType":"FunctionDefinition","src":"22331:42:17","nodes":[],"documentation":{"id":9712,"nodeType":"StructuredDocumentation","src":"22269:57:17","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"22340:21:17","parameters":{"id":9713,"nodeType":"ParameterList","parameters":[],"src":"22361:2:17"},"returnParameters":{"id":9714,"nodeType":"ParameterList","parameters":[],"src":"22372:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9719,"nodeType":"FunctionDefinition","src":"22517:44:17","nodes":[],"documentation":{"id":9716,"nodeType":"StructuredDocumentation","src":"22379:133:17","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"22526:23:17","parameters":{"id":9717,"nodeType":"ParameterList","parameters":[],"src":"22549:2:17"},"returnParameters":{"id":9718,"nodeType":"ParameterList","parameters":[],"src":"22560:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9727,"nodeType":"FunctionDefinition","src":"22669:92:17","nodes":[],"documentation":{"id":9720,"nodeType":"StructuredDocumentation","src":"22567:97:17","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"22678:22:17","parameters":{"id":9721,"nodeType":"ParameterList","parameters":[],"src":"22700:2:17"},"returnParameters":{"id":9726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9725,"mutability":"mutable","name":"accountAccesses","nameLocation":"22744:15:17","nodeType":"VariableDeclaration","scope":9727,"src":"22721:38:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$9157_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":9723,"nodeType":"UserDefinedTypeName","pathNode":{"id":9722,"name":"AccountAccess","nameLocations":["22721:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":9157,"src":"22721:13:17"},"referencedDeclaration":9157,"src":"22721:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$9157_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":9724,"nodeType":"ArrayTypeName","src":"22721:15:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$9157_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"22720:40:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9731,"nodeType":"FunctionDefinition","src":"22857:41:17","nodes":[],"documentation":{"id":9728,"nodeType":"StructuredDocumentation","src":"22767:85:17","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"22866:20:17","parameters":{"id":9729,"nodeType":"ParameterList","parameters":[],"src":"22886:2:17"},"returnParameters":{"id":9730,"nodeType":"ParameterList","parameters":[],"src":"22897:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9737,"nodeType":"FunctionDefinition","src":"23097:50:17","nodes":[],"documentation":{"id":9732,"nodeType":"StructuredDocumentation","src":"22941:151:17","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"23106:9:17","parameters":{"id":9735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9734,"mutability":"mutable","name":"path","nameLocation":"23132:4:17","nodeType":"VariableDeclaration","scope":9737,"src":"23116:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9733,"name":"string","nodeType":"ElementaryTypeName","src":"23116:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23115:22:17"},"returnParameters":{"id":9736,"nodeType":"ParameterList","parameters":[],"src":"23146:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9747,"nodeType":"FunctionDefinition","src":"23462:93:17","nodes":[],"documentation":{"id":9738,"nodeType":"StructuredDocumentation","src":"23153:304:17","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"23471:8:17","parameters":{"id":9743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9740,"mutability":"mutable","name":"from","nameLocation":"23496:4:17","nodeType":"VariableDeclaration","scope":9747,"src":"23480:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9739,"name":"string","nodeType":"ElementaryTypeName","src":"23480:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9742,"mutability":"mutable","name":"to","nameLocation":"23518:2:17","nodeType":"VariableDeclaration","scope":9747,"src":"23502:18:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9741,"name":"string","nodeType":"ElementaryTypeName","src":"23502:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23479:42:17"},"returnParameters":{"id":9746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9745,"mutability":"mutable","name":"copied","nameLocation":"23547:6:17","nodeType":"VariableDeclaration","scope":9747,"src":"23540:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9744,"name":"uint64","nodeType":"ElementaryTypeName","src":"23540:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"23539:15:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9755,"nodeType":"FunctionDefinition","src":"23960:66:17","nodes":[],"documentation":{"id":9748,"nodeType":"StructuredDocumentation","src":"23561:394:17","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"23969:9:17","parameters":{"id":9753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9750,"mutability":"mutable","name":"path","nameLocation":"23995:4:17","nodeType":"VariableDeclaration","scope":9755,"src":"23979:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9749,"name":"string","nodeType":"ElementaryTypeName","src":"23979:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9752,"mutability":"mutable","name":"recursive","nameLocation":"24006:9:17","nodeType":"VariableDeclaration","scope":9755,"src":"24001:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9751,"name":"bool","nodeType":"ElementaryTypeName","src":"24001:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23978:38:17"},"returnParameters":{"id":9754,"nodeType":"ParameterList","parameters":[],"src":"24025:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9763,"nodeType":"FunctionDefinition","src":"24121:69:17","nodes":[],"documentation":{"id":9756,"nodeType":"StructuredDocumentation","src":"24032:84:17","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"24130:6:17","parameters":{"id":9759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9758,"mutability":"mutable","name":"path","nameLocation":"24153:4:17","nodeType":"VariableDeclaration","scope":9763,"src":"24137:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9757,"name":"string","nodeType":"ElementaryTypeName","src":"24137:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24136:22:17"},"returnParameters":{"id":9762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9761,"mutability":"mutable","name":"result","nameLocation":"24182:6:17","nodeType":"VariableDeclaration","scope":9763,"src":"24177:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9760,"name":"bool","nodeType":"ElementaryTypeName","src":"24177:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24176:13:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9772,"nodeType":"FunctionDefinition","src":"24255:84:17","nodes":[],"documentation":{"id":9764,"nodeType":"StructuredDocumentation","src":"24196:54:17","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"24264:3:17","parameters":{"id":9768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9767,"mutability":"mutable","name":"commandInput","nameLocation":"24286:12:17","nodeType":"VariableDeclaration","scope":9772,"src":"24268:30:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":9765,"name":"string","nodeType":"ElementaryTypeName","src":"24268:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":9766,"nodeType":"ArrayTypeName","src":"24268:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"24267:32:17"},"returnParameters":{"id":9771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9770,"mutability":"mutable","name":"result","nameLocation":"24331:6:17","nodeType":"VariableDeclaration","scope":9772,"src":"24318:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9769,"name":"bytes","nodeType":"ElementaryTypeName","src":"24318:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24317:21:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9781,"nodeType":"FunctionDefinition","src":"24438:93:17","nodes":[],"documentation":{"id":9773,"nodeType":"StructuredDocumentation","src":"24345:88:17","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"24447:10:17","parameters":{"id":9776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9775,"mutability":"mutable","name":"path","nameLocation":"24474:4:17","nodeType":"VariableDeclaration","scope":9781,"src":"24458:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9774,"name":"string","nodeType":"ElementaryTypeName","src":"24458:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24457:22:17"},"returnParameters":{"id":9780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9779,"mutability":"mutable","name":"metadata","nameLocation":"24521:8:17","nodeType":"VariableDeclaration","scope":9781,"src":"24503:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$9101_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":9778,"nodeType":"UserDefinedTypeName","pathNode":{"id":9777,"name":"FsMetadata","nameLocations":["24503:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":9101,"src":"24503:10:17"},"referencedDeclaration":9101,"src":"24503:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$9101_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"24502:28:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9789,"nodeType":"FunctionDefinition","src":"24769:101:17","nodes":[],"documentation":{"id":9782,"nodeType":"StructuredDocumentation","src":"24537:227:17","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"24778:7:17","parameters":{"id":9785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9784,"mutability":"mutable","name":"artifactPath","nameLocation":"24802:12:17","nodeType":"VariableDeclaration","scope":9789,"src":"24786:28:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9783,"name":"string","nodeType":"ElementaryTypeName","src":"24786:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24785:30:17"},"returnParameters":{"id":9788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9787,"mutability":"mutable","name":"creationBytecode","nameLocation":"24852:16:17","nodeType":"VariableDeclaration","scope":9789,"src":"24839:29:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9786,"name":"bytes","nodeType":"ElementaryTypeName","src":"24839:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24838:31:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9797,"nodeType":"FunctionDefinition","src":"25108:108:17","nodes":[],"documentation":{"id":9790,"nodeType":"StructuredDocumentation","src":"24876:227:17","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"25117:15:17","parameters":{"id":9793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9792,"mutability":"mutable","name":"artifactPath","nameLocation":"25149:12:17","nodeType":"VariableDeclaration","scope":9797,"src":"25133:28:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9791,"name":"string","nodeType":"ElementaryTypeName","src":"25133:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25132:30:17"},"returnParameters":{"id":9796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9795,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"25199:15:17","nodeType":"VariableDeclaration","scope":9797,"src":"25186:28:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9794,"name":"bytes","nodeType":"ElementaryTypeName","src":"25186:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25185:30:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9805,"nodeType":"FunctionDefinition","src":"25322:68:17","nodes":[],"documentation":{"id":9798,"nodeType":"StructuredDocumentation","src":"25222:95:17","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"25331:5:17","parameters":{"id":9801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9800,"mutability":"mutable","name":"path","nameLocation":"25353:4:17","nodeType":"VariableDeclaration","scope":9805,"src":"25337:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9799,"name":"string","nodeType":"ElementaryTypeName","src":"25337:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25336:22:17"},"returnParameters":{"id":9804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9803,"mutability":"mutable","name":"result","nameLocation":"25382:6:17","nodeType":"VariableDeclaration","scope":9805,"src":"25377:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9802,"name":"bool","nodeType":"ElementaryTypeName","src":"25377:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25376:13:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9813,"nodeType":"FunctionDefinition","src":"25499:69:17","nodes":[],"documentation":{"id":9806,"nodeType":"StructuredDocumentation","src":"25396:98:17","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"25508:6:17","parameters":{"id":9809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9808,"mutability":"mutable","name":"path","nameLocation":"25531:4:17","nodeType":"VariableDeclaration","scope":9813,"src":"25515:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9807,"name":"string","nodeType":"ElementaryTypeName","src":"25515:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25514:22:17"},"returnParameters":{"id":9812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9811,"mutability":"mutable","name":"result","nameLocation":"25560:6:17","nodeType":"VariableDeclaration","scope":9813,"src":"25555:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9810,"name":"bool","nodeType":"ElementaryTypeName","src":"25555:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25554:13:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9819,"nodeType":"FunctionDefinition","src":"25624:66:17","nodes":[],"documentation":{"id":9814,"nodeType":"StructuredDocumentation","src":"25574:45:17","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"25633:11:17","parameters":{"id":9815,"nodeType":"ParameterList","parameters":[],"src":"25644:2:17"},"returnParameters":{"id":9818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9817,"mutability":"mutable","name":"path","nameLocation":"25684:4:17","nodeType":"VariableDeclaration","scope":9819,"src":"25670:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9816,"name":"string","nodeType":"ElementaryTypeName","src":"25670:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25669:20:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9827,"nodeType":"FunctionDefinition","src":"25757:83:17","nodes":[],"documentation":{"id":9820,"nodeType":"StructuredDocumentation","src":"25696:56:17","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"25766:6:17","parameters":{"id":9823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9822,"mutability":"mutable","name":"promptText","nameLocation":"25789:10:17","nodeType":"VariableDeclaration","scope":9827,"src":"25773:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9821,"name":"string","nodeType":"ElementaryTypeName","src":"25773:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25772:28:17"},"returnParameters":{"id":9826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9825,"mutability":"mutable","name":"input","nameLocation":"25833:5:17","nodeType":"VariableDeclaration","scope":9827,"src":"25819:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9824,"name":"string","nodeType":"ElementaryTypeName","src":"25819:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25818:21:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9835,"nodeType":"FunctionDefinition","src":"25903:78:17","nodes":[],"documentation":{"id":9828,"nodeType":"StructuredDocumentation","src":"25846:52:17","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"25912:13:17","parameters":{"id":9831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9830,"mutability":"mutable","name":"promptText","nameLocation":"25942:10:17","nodeType":"VariableDeclaration","scope":9835,"src":"25926:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9829,"name":"string","nodeType":"ElementaryTypeName","src":"25926:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25925:28:17"},"returnParameters":{"id":9834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9835,"src":"25972:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9832,"name":"address","nodeType":"ElementaryTypeName","src":"25972:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25971:9:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9843,"nodeType":"FunctionDefinition","src":"26055:89:17","nodes":[],"documentation":{"id":9836,"nodeType":"StructuredDocumentation","src":"25987:63:17","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"26064:12:17","parameters":{"id":9839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9838,"mutability":"mutable","name":"promptText","nameLocation":"26093:10:17","nodeType":"VariableDeclaration","scope":9843,"src":"26077:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9837,"name":"string","nodeType":"ElementaryTypeName","src":"26077:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26076:28:17"},"returnParameters":{"id":9842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9841,"mutability":"mutable","name":"input","nameLocation":"26137:5:17","nodeType":"VariableDeclaration","scope":9843,"src":"26123:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9840,"name":"string","nodeType":"ElementaryTypeName","src":"26123:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26122:21:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9851,"nodeType":"FunctionDefinition","src":"26204:75:17","nodes":[],"documentation":{"id":9844,"nodeType":"StructuredDocumentation","src":"26150:49:17","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"26213:10:17","parameters":{"id":9847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9846,"mutability":"mutable","name":"promptText","nameLocation":"26240:10:17","nodeType":"VariableDeclaration","scope":9851,"src":"26224:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9845,"name":"string","nodeType":"ElementaryTypeName","src":"26224:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26223:28:17"},"returnParameters":{"id":9850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9851,"src":"26270:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9848,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:9:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9861,"nodeType":"FunctionDefinition","src":"26527:89:17","nodes":[],"documentation":{"id":9852,"nodeType":"StructuredDocumentation","src":"26285:237:17","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26536:7:17","parameters":{"id":9855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9854,"mutability":"mutable","name":"path","nameLocation":"26560:4:17","nodeType":"VariableDeclaration","scope":9861,"src":"26544:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9853,"name":"string","nodeType":"ElementaryTypeName","src":"26544:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26543:22:17"},"returnParameters":{"id":9860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9859,"mutability":"mutable","name":"entries","nameLocation":"26607:7:17","nodeType":"VariableDeclaration","scope":9861,"src":"26589:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$9085_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":9857,"nodeType":"UserDefinedTypeName","pathNode":{"id":9856,"name":"DirEntry","nameLocations":["26589:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":9085,"src":"26589:8:17"},"referencedDeclaration":9085,"src":"26589:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$9085_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":9858,"nodeType":"ArrayTypeName","src":"26589:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$9085_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26588:27:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9873,"nodeType":"FunctionDefinition","src":"26653:106:17","nodes":[],"documentation":{"id":9862,"nodeType":"StructuredDocumentation","src":"26622:26:17","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26662:7:17","parameters":{"id":9867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9864,"mutability":"mutable","name":"path","nameLocation":"26686:4:17","nodeType":"VariableDeclaration","scope":9873,"src":"26670:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9863,"name":"string","nodeType":"ElementaryTypeName","src":"26670:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9866,"mutability":"mutable","name":"maxDepth","nameLocation":"26699:8:17","nodeType":"VariableDeclaration","scope":9873,"src":"26692:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9865,"name":"uint64","nodeType":"ElementaryTypeName","src":"26692:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"26669:39:17"},"returnParameters":{"id":9872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9871,"mutability":"mutable","name":"entries","nameLocation":"26750:7:17","nodeType":"VariableDeclaration","scope":9873,"src":"26732:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$9085_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":9869,"nodeType":"UserDefinedTypeName","pathNode":{"id":9868,"name":"DirEntry","nameLocations":["26732:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":9085,"src":"26732:8:17"},"referencedDeclaration":9085,"src":"26732:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$9085_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":9870,"nodeType":"ArrayTypeName","src":"26732:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$9085_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26731:27:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9887,"nodeType":"FunctionDefinition","src":"26796:148:17","nodes":[],"documentation":{"id":9874,"nodeType":"StructuredDocumentation","src":"26765:26:17","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26805:7:17","parameters":{"id":9881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9876,"mutability":"mutable","name":"path","nameLocation":"26829:4:17","nodeType":"VariableDeclaration","scope":9887,"src":"26813:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9875,"name":"string","nodeType":"ElementaryTypeName","src":"26813:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9878,"mutability":"mutable","name":"maxDepth","nameLocation":"26842:8:17","nodeType":"VariableDeclaration","scope":9887,"src":"26835:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9877,"name":"uint64","nodeType":"ElementaryTypeName","src":"26835:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":9880,"mutability":"mutable","name":"followLinks","nameLocation":"26857:11:17","nodeType":"VariableDeclaration","scope":9887,"src":"26852:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9879,"name":"bool","nodeType":"ElementaryTypeName","src":"26852:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26812:57:17"},"returnParameters":{"id":9886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9885,"mutability":"mutable","name":"entries","nameLocation":"26935:7:17","nodeType":"VariableDeclaration","scope":9887,"src":"26917:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$9085_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":9883,"nodeType":"UserDefinedTypeName","pathNode":{"id":9882,"name":"DirEntry","nameLocations":["26917:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":9085,"src":"26917:8:17"},"referencedDeclaration":9085,"src":"26917:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$9085_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":9884,"nodeType":"ArrayTypeName","src":"26917:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$9085_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26916:27:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9895,"nodeType":"FunctionDefinition","src":"27042:83:17","nodes":[],"documentation":{"id":9888,"nodeType":"StructuredDocumentation","src":"26950:87:17","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"27051:8:17","parameters":{"id":9891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9890,"mutability":"mutable","name":"path","nameLocation":"27076:4:17","nodeType":"VariableDeclaration","scope":9895,"src":"27060:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9889,"name":"string","nodeType":"ElementaryTypeName","src":"27060:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27059:22:17"},"returnParameters":{"id":9894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9893,"mutability":"mutable","name":"data","nameLocation":"27119:4:17","nodeType":"VariableDeclaration","scope":9895,"src":"27105:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9892,"name":"string","nodeType":"ElementaryTypeName","src":"27105:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27104:20:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9903,"nodeType":"FunctionDefinition","src":"27223:88:17","nodes":[],"documentation":{"id":9896,"nodeType":"StructuredDocumentation","src":"27131:87:17","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"27232:14:17","parameters":{"id":9899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9898,"mutability":"mutable","name":"path","nameLocation":"27263:4:17","nodeType":"VariableDeclaration","scope":9903,"src":"27247:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9897,"name":"string","nodeType":"ElementaryTypeName","src":"27247:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27246:22:17"},"returnParameters":{"id":9902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9901,"mutability":"mutable","name":"data","nameLocation":"27305:4:17","nodeType":"VariableDeclaration","scope":9903,"src":"27292:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9900,"name":"bytes","nodeType":"ElementaryTypeName","src":"27292:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27291:19:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9911,"nodeType":"FunctionDefinition","src":"27360:83:17","nodes":[],"documentation":{"id":9904,"nodeType":"StructuredDocumentation","src":"27317:38:17","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"27369:8:17","parameters":{"id":9907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9906,"mutability":"mutable","name":"path","nameLocation":"27394:4:17","nodeType":"VariableDeclaration","scope":9911,"src":"27378:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9905,"name":"string","nodeType":"ElementaryTypeName","src":"27378:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27377:22:17"},"returnParameters":{"id":9910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9909,"mutability":"mutable","name":"line","nameLocation":"27437:4:17","nodeType":"VariableDeclaration","scope":9911,"src":"27423:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9908,"name":"string","nodeType":"ElementaryTypeName","src":"27423:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27422:20:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9919,"nodeType":"FunctionDefinition","src":"27702:93:17","nodes":[],"documentation":{"id":9912,"nodeType":"StructuredDocumentation","src":"27449:248:17","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"27711:8:17","parameters":{"id":9915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9914,"mutability":"mutable","name":"linkPath","nameLocation":"27736:8:17","nodeType":"VariableDeclaration","scope":9919,"src":"27720:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9913,"name":"string","nodeType":"ElementaryTypeName","src":"27720:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27719:26:17"},"returnParameters":{"id":9918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9917,"mutability":"mutable","name":"targetPath","nameLocation":"27783:10:17","nodeType":"VariableDeclaration","scope":9919,"src":"27769:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9916,"name":"string","nodeType":"ElementaryTypeName","src":"27769:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27768:26:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9927,"nodeType":"FunctionDefinition","src":"28185:66:17","nodes":[],"documentation":{"id":9920,"nodeType":"StructuredDocumentation","src":"27801:379:17","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"28194:9:17","parameters":{"id":9925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9922,"mutability":"mutable","name":"path","nameLocation":"28220:4:17","nodeType":"VariableDeclaration","scope":9927,"src":"28204:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9921,"name":"string","nodeType":"ElementaryTypeName","src":"28204:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9924,"mutability":"mutable","name":"recursive","nameLocation":"28231:9:17","nodeType":"VariableDeclaration","scope":9927,"src":"28226:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9923,"name":"bool","nodeType":"ElementaryTypeName","src":"28226:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28203:38:17"},"returnParameters":{"id":9926,"nodeType":"ParameterList","parameters":[],"src":"28250:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9933,"nodeType":"FunctionDefinition","src":"28584:51:17","nodes":[],"documentation":{"id":9928,"nodeType":"StructuredDocumentation","src":"28257:322:17","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"28593:10:17","parameters":{"id":9931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9930,"mutability":"mutable","name":"path","nameLocation":"28620:4:17","nodeType":"VariableDeclaration","scope":9933,"src":"28604:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9929,"name":"string","nodeType":"ElementaryTypeName","src":"28604:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28603:22:17"},"returnParameters":{"id":9932,"nodeType":"ParameterList","parameters":[],"src":"28634:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9943,"nodeType":"FunctionDefinition","src":"28742:91:17","nodes":[],"documentation":{"id":9934,"nodeType":"StructuredDocumentation","src":"28641:96:17","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"28751:6:17","parameters":{"id":9938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9937,"mutability":"mutable","name":"commandInput","nameLocation":"28776:12:17","nodeType":"VariableDeclaration","scope":9943,"src":"28758:30:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":9935,"name":"string","nodeType":"ElementaryTypeName","src":"28758:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":9936,"nodeType":"ArrayTypeName","src":"28758:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"28757:32:17"},"returnParameters":{"id":9942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9941,"mutability":"mutable","name":"result","nameLocation":"28825:6:17","nodeType":"VariableDeclaration","scope":9943,"src":"28808:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$9119_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":9940,"nodeType":"UserDefinedTypeName","pathNode":{"id":9939,"name":"FfiResult","nameLocations":["28808:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":9119,"src":"28808:9:17"},"referencedDeclaration":9119,"src":"28808:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$9119_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"28807:25:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9949,"nodeType":"FunctionDefinition","src":"28898:60:17","nodes":[],"documentation":{"id":9944,"nodeType":"StructuredDocumentation","src":"28839:54:17","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"28907:8:17","parameters":{"id":9945,"nodeType":"ParameterList","parameters":[],"src":"28915:2:17"},"returnParameters":{"id":9948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9947,"mutability":"mutable","name":"milliseconds","nameLocation":"28944:12:17","nodeType":"VariableDeclaration","scope":9949,"src":"28936:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9946,"name":"uint256","nodeType":"ElementaryTypeName","src":"28936:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28935:22:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9957,"nodeType":"FunctionDefinition","src":"29127:72:17","nodes":[],"documentation":{"id":9950,"nodeType":"StructuredDocumentation","src":"28964:158:17","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"29136:9:17","parameters":{"id":9955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9952,"mutability":"mutable","name":"path","nameLocation":"29162:4:17","nodeType":"VariableDeclaration","scope":9957,"src":"29146:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9951,"name":"string","nodeType":"ElementaryTypeName","src":"29146:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9954,"mutability":"mutable","name":"data","nameLocation":"29184:4:17","nodeType":"VariableDeclaration","scope":9957,"src":"29168:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9953,"name":"string","nodeType":"ElementaryTypeName","src":"29168:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29145:44:17"},"returnParameters":{"id":9956,"nodeType":"ParameterList","parameters":[],"src":"29198:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9965,"nodeType":"FunctionDefinition","src":"29377:77:17","nodes":[],"documentation":{"id":9958,"nodeType":"StructuredDocumentation","src":"29205:167:17","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"29386:15:17","parameters":{"id":9963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9960,"mutability":"mutable","name":"path","nameLocation":"29418:4:17","nodeType":"VariableDeclaration","scope":9965,"src":"29402:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9959,"name":"string","nodeType":"ElementaryTypeName","src":"29402:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9962,"mutability":"mutable","name":"data","nameLocation":"29439:4:17","nodeType":"VariableDeclaration","scope":9965,"src":"29424:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9961,"name":"bytes","nodeType":"ElementaryTypeName","src":"29424:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29401:43:17"},"returnParameters":{"id":9964,"nodeType":"ParameterList","parameters":[],"src":"29453:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9973,"nodeType":"FunctionDefinition","src":"29575:72:17","nodes":[],"documentation":{"id":9966,"nodeType":"StructuredDocumentation","src":"29460:110:17","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"29584:9:17","parameters":{"id":9971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9968,"mutability":"mutable","name":"path","nameLocation":"29610:4:17","nodeType":"VariableDeclaration","scope":9973,"src":"29594:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9967,"name":"string","nodeType":"ElementaryTypeName","src":"29594:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9970,"mutability":"mutable","name":"data","nameLocation":"29632:4:17","nodeType":"VariableDeclaration","scope":9973,"src":"29616:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9969,"name":"string","nodeType":"ElementaryTypeName","src":"29616:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29593:44:17"},"returnParameters":{"id":9972,"nodeType":"ParameterList","parameters":[],"src":"29646:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":9983,"nodeType":"FunctionDefinition","src":"29840:91:17","nodes":[],"documentation":{"id":9974,"nodeType":"StructuredDocumentation","src":"29684:151:17","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"29849:9:17","parameters":{"id":9979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9976,"mutability":"mutable","name":"json","nameLocation":"29875:4:17","nodeType":"VariableDeclaration","scope":9983,"src":"29859:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9975,"name":"string","nodeType":"ElementaryTypeName","src":"29859:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9978,"mutability":"mutable","name":"key","nameLocation":"29897:3:17","nodeType":"VariableDeclaration","scope":9983,"src":"29881:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9977,"name":"string","nodeType":"ElementaryTypeName","src":"29881:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29858:43:17"},"returnParameters":{"id":9982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9983,"src":"29925:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9980,"name":"bool","nodeType":"ElementaryTypeName","src":"29925:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29924:6:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":9993,"nodeType":"FunctionDefinition","src":"29986:95:17","nodes":[],"documentation":{"id":9984,"nodeType":"StructuredDocumentation","src":"29937:44:17","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"29995:13:17","parameters":{"id":9989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9986,"mutability":"mutable","name":"json","nameLocation":"30025:4:17","nodeType":"VariableDeclaration","scope":9993,"src":"30009:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9985,"name":"string","nodeType":"ElementaryTypeName","src":"30009:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9988,"mutability":"mutable","name":"key","nameLocation":"30047:3:17","nodeType":"VariableDeclaration","scope":9993,"src":"30031:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9987,"name":"string","nodeType":"ElementaryTypeName","src":"30031:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30008:43:17"},"returnParameters":{"id":9992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9993,"src":"30075:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9990,"name":"bool","nodeType":"ElementaryTypeName","src":"30075:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30074:6:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":10003,"nodeType":"FunctionDefinition","src":"30162:101:17","nodes":[],"documentation":{"id":9994,"nodeType":"StructuredDocumentation","src":"30087:70:17","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"30171:16:17","parameters":{"id":9999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9996,"mutability":"mutable","name":"json","nameLocation":"30204:4:17","nodeType":"VariableDeclaration","scope":10003,"src":"30188:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9995,"name":"string","nodeType":"ElementaryTypeName","src":"30188:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9998,"mutability":"mutable","name":"key","nameLocation":"30226:3:17","nodeType":"VariableDeclaration","scope":10003,"src":"30210:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9997,"name":"string","nodeType":"ElementaryTypeName","src":"30210:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30187:43:17"},"returnParameters":{"id":10002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10003,"src":"30254:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10000,"name":"address","nodeType":"ElementaryTypeName","src":"30254:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30253:9:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10014,"nodeType":"FunctionDefinition","src":"30346:139:17","nodes":[],"documentation":{"id":10004,"nodeType":"StructuredDocumentation","src":"30269:72:17","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"30355:21:17","parameters":{"id":10009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10006,"mutability":"mutable","name":"json","nameLocation":"30393:4:17","nodeType":"VariableDeclaration","scope":10014,"src":"30377:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10005,"name":"string","nodeType":"ElementaryTypeName","src":"30377:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10008,"mutability":"mutable","name":"key","nameLocation":"30415:3:17","nodeType":"VariableDeclaration","scope":10014,"src":"30399:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10007,"name":"string","nodeType":"ElementaryTypeName","src":"30399:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30376:43:17"},"returnParameters":{"id":10013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10014,"src":"30467:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10010,"name":"address","nodeType":"ElementaryTypeName","src":"30467:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10011,"nodeType":"ArrayTypeName","src":"30467:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"30466:18:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10024,"nodeType":"FunctionDefinition","src":"30563:95:17","nodes":[],"documentation":{"id":10015,"nodeType":"StructuredDocumentation","src":"30491:67:17","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"30572:13:17","parameters":{"id":10020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10017,"mutability":"mutable","name":"json","nameLocation":"30602:4:17","nodeType":"VariableDeclaration","scope":10024,"src":"30586:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10016,"name":"string","nodeType":"ElementaryTypeName","src":"30586:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10019,"mutability":"mutable","name":"key","nameLocation":"30624:3:17","nodeType":"VariableDeclaration","scope":10024,"src":"30608:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10018,"name":"string","nodeType":"ElementaryTypeName","src":"30608:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30585:43:17"},"returnParameters":{"id":10023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10024,"src":"30652:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10021,"name":"bool","nodeType":"ElementaryTypeName","src":"30652:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30651:6:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10035,"nodeType":"FunctionDefinition","src":"30738:109:17","nodes":[],"documentation":{"id":10025,"nodeType":"StructuredDocumentation","src":"30664:69:17","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"30747:18:17","parameters":{"id":10030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10027,"mutability":"mutable","name":"json","nameLocation":"30782:4:17","nodeType":"VariableDeclaration","scope":10035,"src":"30766:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10026,"name":"string","nodeType":"ElementaryTypeName","src":"30766:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10029,"mutability":"mutable","name":"key","nameLocation":"30804:3:17","nodeType":"VariableDeclaration","scope":10035,"src":"30788:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10028,"name":"string","nodeType":"ElementaryTypeName","src":"30788:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30765:43:17"},"returnParameters":{"id":10034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10035,"src":"30832:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":10031,"name":"bool","nodeType":"ElementaryTypeName","src":"30832:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10032,"nodeType":"ArrayTypeName","src":"30832:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"30831:15:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10045,"nodeType":"FunctionDefinition","src":"30926:104:17","nodes":[],"documentation":{"id":10036,"nodeType":"StructuredDocumentation","src":"30853:68:17","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"30935:14:17","parameters":{"id":10041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10038,"mutability":"mutable","name":"json","nameLocation":"30966:4:17","nodeType":"VariableDeclaration","scope":10045,"src":"30950:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10037,"name":"string","nodeType":"ElementaryTypeName","src":"30950:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10040,"mutability":"mutable","name":"key","nameLocation":"30988:3:17","nodeType":"VariableDeclaration","scope":10045,"src":"30972:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10039,"name":"string","nodeType":"ElementaryTypeName","src":"30972:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30949:43:17"},"returnParameters":{"id":10044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10045,"src":"31016:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10042,"name":"bytes","nodeType":"ElementaryTypeName","src":"31016:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31015:14:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10055,"nodeType":"FunctionDefinition","src":"31111:101:17","nodes":[],"documentation":{"id":10046,"nodeType":"StructuredDocumentation","src":"31036:70:17","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"31120:16:17","parameters":{"id":10051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10048,"mutability":"mutable","name":"json","nameLocation":"31153:4:17","nodeType":"VariableDeclaration","scope":10055,"src":"31137:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10047,"name":"string","nodeType":"ElementaryTypeName","src":"31137:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10050,"mutability":"mutable","name":"key","nameLocation":"31175:3:17","nodeType":"VariableDeclaration","scope":10055,"src":"31159:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10049,"name":"string","nodeType":"ElementaryTypeName","src":"31159:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31136:43:17"},"returnParameters":{"id":10054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10055,"src":"31203:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31203:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31202:9:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10066,"nodeType":"FunctionDefinition","src":"31295:139:17","nodes":[],"documentation":{"id":10056,"nodeType":"StructuredDocumentation","src":"31218:72:17","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"31304:21:17","parameters":{"id":10061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10058,"mutability":"mutable","name":"json","nameLocation":"31342:4:17","nodeType":"VariableDeclaration","scope":10066,"src":"31326:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10057,"name":"string","nodeType":"ElementaryTypeName","src":"31326:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10060,"mutability":"mutable","name":"key","nameLocation":"31364:3:17","nodeType":"VariableDeclaration","scope":10066,"src":"31348:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10059,"name":"string","nodeType":"ElementaryTypeName","src":"31348:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31325:43:17"},"returnParameters":{"id":10065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10066,"src":"31416:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31416:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10063,"nodeType":"ArrayTypeName","src":"31416:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"31415:18:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10077,"nodeType":"FunctionDefinition","src":"31515:111:17","nodes":[],"documentation":{"id":10067,"nodeType":"StructuredDocumentation","src":"31440:70:17","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"31524:19:17","parameters":{"id":10072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10069,"mutability":"mutable","name":"json","nameLocation":"31560:4:17","nodeType":"VariableDeclaration","scope":10077,"src":"31544:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10068,"name":"string","nodeType":"ElementaryTypeName","src":"31544:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10071,"mutability":"mutable","name":"key","nameLocation":"31582:3:17","nodeType":"VariableDeclaration","scope":10077,"src":"31566:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10070,"name":"string","nodeType":"ElementaryTypeName","src":"31566:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31543:43:17"},"returnParameters":{"id":10076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10077,"src":"31610:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":10073,"name":"bytes","nodeType":"ElementaryTypeName","src":"31610:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":10074,"nodeType":"ArrayTypeName","src":"31610:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"31609:16:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10087,"nodeType":"FunctionDefinition","src":"31706:96:17","nodes":[],"documentation":{"id":10078,"nodeType":"StructuredDocumentation","src":"31632:69:17","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"31715:12:17","parameters":{"id":10083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10080,"mutability":"mutable","name":"json","nameLocation":"31744:4:17","nodeType":"VariableDeclaration","scope":10087,"src":"31728:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10079,"name":"string","nodeType":"ElementaryTypeName","src":"31728:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10082,"mutability":"mutable","name":"key","nameLocation":"31766:3:17","nodeType":"VariableDeclaration","scope":10087,"src":"31750:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10081,"name":"string","nodeType":"ElementaryTypeName","src":"31750:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31727:43:17"},"returnParameters":{"id":10086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10087,"src":"31794:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10084,"name":"int256","nodeType":"ElementaryTypeName","src":"31794:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31793:8:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10098,"nodeType":"FunctionDefinition","src":"31884:110:17","nodes":[],"documentation":{"id":10088,"nodeType":"StructuredDocumentation","src":"31808:71:17","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"31893:17:17","parameters":{"id":10093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10090,"mutability":"mutable","name":"json","nameLocation":"31927:4:17","nodeType":"VariableDeclaration","scope":10098,"src":"31911:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10089,"name":"string","nodeType":"ElementaryTypeName","src":"31911:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10092,"mutability":"mutable","name":"key","nameLocation":"31949:3:17","nodeType":"VariableDeclaration","scope":10098,"src":"31933:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10091,"name":"string","nodeType":"ElementaryTypeName","src":"31933:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31910:43:17"},"returnParameters":{"id":10097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10098,"src":"31977:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":10094,"name":"int256","nodeType":"ElementaryTypeName","src":"31977:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":10095,"nodeType":"ArrayTypeName","src":"31977:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"31976:17:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10109,"nodeType":"FunctionDefinition","src":"32059:111:17","nodes":[],"documentation":{"id":10099,"nodeType":"StructuredDocumentation","src":"32000:54:17","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"32068:13:17","parameters":{"id":10104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10101,"mutability":"mutable","name":"json","nameLocation":"32098:4:17","nodeType":"VariableDeclaration","scope":10109,"src":"32082:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10100,"name":"string","nodeType":"ElementaryTypeName","src":"32082:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10103,"mutability":"mutable","name":"key","nameLocation":"32120:3:17","nodeType":"VariableDeclaration","scope":10109,"src":"32104:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10102,"name":"string","nodeType":"ElementaryTypeName","src":"32104:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32081:43:17"},"returnParameters":{"id":10108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10107,"mutability":"mutable","name":"keys","nameLocation":"32164:4:17","nodeType":"VariableDeclaration","scope":10109,"src":"32148:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":10105,"name":"string","nodeType":"ElementaryTypeName","src":"32148:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10106,"nodeType":"ArrayTypeName","src":"32148:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32147:22:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10119,"nodeType":"FunctionDefinition","src":"32250:106:17","nodes":[],"documentation":{"id":10110,"nodeType":"StructuredDocumentation","src":"32176:69:17","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"32259:15:17","parameters":{"id":10115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10112,"mutability":"mutable","name":"json","nameLocation":"32291:4:17","nodeType":"VariableDeclaration","scope":10119,"src":"32275:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10111,"name":"string","nodeType":"ElementaryTypeName","src":"32275:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10114,"mutability":"mutable","name":"key","nameLocation":"32313:3:17","nodeType":"VariableDeclaration","scope":10119,"src":"32297:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10113,"name":"string","nodeType":"ElementaryTypeName","src":"32297:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32274:43:17"},"returnParameters":{"id":10118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10119,"src":"32341:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10116,"name":"string","nodeType":"ElementaryTypeName","src":"32341:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32340:15:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10130,"nodeType":"FunctionDefinition","src":"32438:113:17","nodes":[],"documentation":{"id":10120,"nodeType":"StructuredDocumentation","src":"32362:71:17","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"32447:20:17","parameters":{"id":10125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10122,"mutability":"mutable","name":"json","nameLocation":"32484:4:17","nodeType":"VariableDeclaration","scope":10130,"src":"32468:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10121,"name":"string","nodeType":"ElementaryTypeName","src":"32468:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10124,"mutability":"mutable","name":"key","nameLocation":"32506:3:17","nodeType":"VariableDeclaration","scope":10130,"src":"32490:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10123,"name":"string","nodeType":"ElementaryTypeName","src":"32490:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32467:43:17"},"returnParameters":{"id":10129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10130,"src":"32534:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":10126,"name":"string","nodeType":"ElementaryTypeName","src":"32534:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10127,"nodeType":"ArrayTypeName","src":"32534:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32533:17:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10140,"nodeType":"FunctionDefinition","src":"32632:98:17","nodes":[],"documentation":{"id":10131,"nodeType":"StructuredDocumentation","src":"32557:70:17","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"32641:13:17","parameters":{"id":10136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10133,"mutability":"mutable","name":"json","nameLocation":"32671:4:17","nodeType":"VariableDeclaration","scope":10140,"src":"32655:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10132,"name":"string","nodeType":"ElementaryTypeName","src":"32655:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10135,"mutability":"mutable","name":"key","nameLocation":"32693:3:17","nodeType":"VariableDeclaration","scope":10140,"src":"32677:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10134,"name":"string","nodeType":"ElementaryTypeName","src":"32677:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32654:43:17"},"returnParameters":{"id":10139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10140,"src":"32721:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10137,"name":"uint256","nodeType":"ElementaryTypeName","src":"32721:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32720:9:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10151,"nodeType":"FunctionDefinition","src":"32813:112:17","nodes":[],"documentation":{"id":10141,"nodeType":"StructuredDocumentation","src":"32736:72:17","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"32822:18:17","parameters":{"id":10146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10143,"mutability":"mutable","name":"json","nameLocation":"32857:4:17","nodeType":"VariableDeclaration","scope":10151,"src":"32841:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10142,"name":"string","nodeType":"ElementaryTypeName","src":"32841:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10145,"mutability":"mutable","name":"key","nameLocation":"32879:3:17","nodeType":"VariableDeclaration","scope":10151,"src":"32863:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10144,"name":"string","nodeType":"ElementaryTypeName","src":"32863:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32840:43:17"},"returnParameters":{"id":10150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10151,"src":"32907:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10147,"name":"uint256","nodeType":"ElementaryTypeName","src":"32907:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10148,"nodeType":"ArrayTypeName","src":"32907:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"32906:18:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10159,"nodeType":"FunctionDefinition","src":"32966:93:17","nodes":[],"documentation":{"id":10152,"nodeType":"StructuredDocumentation","src":"32931:30:17","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"32975:9:17","parameters":{"id":10155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10154,"mutability":"mutable","name":"json","nameLocation":"33001:4:17","nodeType":"VariableDeclaration","scope":10159,"src":"32985:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10153,"name":"string","nodeType":"ElementaryTypeName","src":"32985:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32984:22:17"},"returnParameters":{"id":10158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10157,"mutability":"mutable","name":"abiEncodedData","nameLocation":"33043:14:17","nodeType":"VariableDeclaration","scope":10159,"src":"33030:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10156,"name":"bytes","nodeType":"ElementaryTypeName","src":"33030:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33029:29:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10169,"nodeType":"FunctionDefinition","src":"33109:114:17","nodes":[],"documentation":{"id":10160,"nodeType":"StructuredDocumentation","src":"33065:39:17","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"33118:9:17","parameters":{"id":10165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10162,"mutability":"mutable","name":"json","nameLocation":"33144:4:17","nodeType":"VariableDeclaration","scope":10169,"src":"33128:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10161,"name":"string","nodeType":"ElementaryTypeName","src":"33128:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10164,"mutability":"mutable","name":"key","nameLocation":"33166:3:17","nodeType":"VariableDeclaration","scope":10169,"src":"33150:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10163,"name":"string","nodeType":"ElementaryTypeName","src":"33150:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33127:43:17"},"returnParameters":{"id":10168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10167,"mutability":"mutable","name":"abiEncodedData","nameLocation":"33207:14:17","nodeType":"VariableDeclaration","scope":10169,"src":"33194:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10166,"name":"bytes","nodeType":"ElementaryTypeName","src":"33194:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33193:29:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10181,"nodeType":"FunctionDefinition","src":"33258:148:17","nodes":[],"documentation":{"id":10170,"nodeType":"StructuredDocumentation","src":"33229:24:17","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"33267:16:17","parameters":{"id":10177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10172,"mutability":"mutable","name":"objectKey","nameLocation":"33300:9:17","nodeType":"VariableDeclaration","scope":10181,"src":"33284:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10171,"name":"string","nodeType":"ElementaryTypeName","src":"33284:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10174,"mutability":"mutable","name":"valueKey","nameLocation":"33327:8:17","nodeType":"VariableDeclaration","scope":10181,"src":"33311:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10173,"name":"string","nodeType":"ElementaryTypeName","src":"33311:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10176,"mutability":"mutable","name":"value","nameLocation":"33345:5:17","nodeType":"VariableDeclaration","scope":10181,"src":"33337:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10175,"name":"address","nodeType":"ElementaryTypeName","src":"33337:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33283:68:17"},"returnParameters":{"id":10180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10179,"mutability":"mutable","name":"json","nameLocation":"33400:4:17","nodeType":"VariableDeclaration","scope":10181,"src":"33386:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10178,"name":"string","nodeType":"ElementaryTypeName","src":"33386:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33385:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10194,"nodeType":"FunctionDefinition","src":"33441:160:17","nodes":[],"documentation":{"id":10182,"nodeType":"StructuredDocumentation","src":"33412:24:17","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"33450:16:17","parameters":{"id":10190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10184,"mutability":"mutable","name":"objectKey","nameLocation":"33483:9:17","nodeType":"VariableDeclaration","scope":10194,"src":"33467:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10183,"name":"string","nodeType":"ElementaryTypeName","src":"33467:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10186,"mutability":"mutable","name":"valueKey","nameLocation":"33510:8:17","nodeType":"VariableDeclaration","scope":10194,"src":"33494:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10185,"name":"string","nodeType":"ElementaryTypeName","src":"33494:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10189,"mutability":"mutable","name":"values","nameLocation":"33539:6:17","nodeType":"VariableDeclaration","scope":10194,"src":"33520:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10187,"name":"address","nodeType":"ElementaryTypeName","src":"33520:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10188,"nodeType":"ArrayTypeName","src":"33520:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"33466:80:17"},"returnParameters":{"id":10193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10192,"mutability":"mutable","name":"json","nameLocation":"33595:4:17","nodeType":"VariableDeclaration","scope":10194,"src":"33581:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10191,"name":"string","nodeType":"ElementaryTypeName","src":"33581:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33580:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10206,"nodeType":"FunctionDefinition","src":"33636:142:17","nodes":[],"documentation":{"id":10195,"nodeType":"StructuredDocumentation","src":"33607:24:17","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"33645:13:17","parameters":{"id":10202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10197,"mutability":"mutable","name":"objectKey","nameLocation":"33675:9:17","nodeType":"VariableDeclaration","scope":10206,"src":"33659:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10196,"name":"string","nodeType":"ElementaryTypeName","src":"33659:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10199,"mutability":"mutable","name":"valueKey","nameLocation":"33702:8:17","nodeType":"VariableDeclaration","scope":10206,"src":"33686:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10198,"name":"string","nodeType":"ElementaryTypeName","src":"33686:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10201,"mutability":"mutable","name":"value","nameLocation":"33717:5:17","nodeType":"VariableDeclaration","scope":10206,"src":"33712:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10200,"name":"bool","nodeType":"ElementaryTypeName","src":"33712:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33658:65:17"},"returnParameters":{"id":10205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10204,"mutability":"mutable","name":"json","nameLocation":"33772:4:17","nodeType":"VariableDeclaration","scope":10206,"src":"33758:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10203,"name":"string","nodeType":"ElementaryTypeName","src":"33758:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33757:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10219,"nodeType":"FunctionDefinition","src":"33813:154:17","nodes":[],"documentation":{"id":10207,"nodeType":"StructuredDocumentation","src":"33784:24:17","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"33822:13:17","parameters":{"id":10215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10209,"mutability":"mutable","name":"objectKey","nameLocation":"33852:9:17","nodeType":"VariableDeclaration","scope":10219,"src":"33836:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10208,"name":"string","nodeType":"ElementaryTypeName","src":"33836:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10211,"mutability":"mutable","name":"valueKey","nameLocation":"33879:8:17","nodeType":"VariableDeclaration","scope":10219,"src":"33863:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10210,"name":"string","nodeType":"ElementaryTypeName","src":"33863:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10214,"mutability":"mutable","name":"values","nameLocation":"33905:6:17","nodeType":"VariableDeclaration","scope":10219,"src":"33889:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":10212,"name":"bool","nodeType":"ElementaryTypeName","src":"33889:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10213,"nodeType":"ArrayTypeName","src":"33889:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"33835:77:17"},"returnParameters":{"id":10218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10217,"mutability":"mutable","name":"json","nameLocation":"33961:4:17","nodeType":"VariableDeclaration","scope":10219,"src":"33947:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10216,"name":"string","nodeType":"ElementaryTypeName","src":"33947:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33946:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10231,"nodeType":"FunctionDefinition","src":"34002:148:17","nodes":[],"documentation":{"id":10220,"nodeType":"StructuredDocumentation","src":"33973:24:17","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"34011:16:17","parameters":{"id":10227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10222,"mutability":"mutable","name":"objectKey","nameLocation":"34044:9:17","nodeType":"VariableDeclaration","scope":10231,"src":"34028:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10221,"name":"string","nodeType":"ElementaryTypeName","src":"34028:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10224,"mutability":"mutable","name":"valueKey","nameLocation":"34071:8:17","nodeType":"VariableDeclaration","scope":10231,"src":"34055:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10223,"name":"string","nodeType":"ElementaryTypeName","src":"34055:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10226,"mutability":"mutable","name":"value","nameLocation":"34089:5:17","nodeType":"VariableDeclaration","scope":10231,"src":"34081:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34081:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"34027:68:17"},"returnParameters":{"id":10230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10229,"mutability":"mutable","name":"json","nameLocation":"34144:4:17","nodeType":"VariableDeclaration","scope":10231,"src":"34130:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10228,"name":"string","nodeType":"ElementaryTypeName","src":"34130:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34129:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10244,"nodeType":"FunctionDefinition","src":"34185:160:17","nodes":[],"documentation":{"id":10232,"nodeType":"StructuredDocumentation","src":"34156:24:17","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"34194:16:17","parameters":{"id":10240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10234,"mutability":"mutable","name":"objectKey","nameLocation":"34227:9:17","nodeType":"VariableDeclaration","scope":10244,"src":"34211:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10233,"name":"string","nodeType":"ElementaryTypeName","src":"34211:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10236,"mutability":"mutable","name":"valueKey","nameLocation":"34254:8:17","nodeType":"VariableDeclaration","scope":10244,"src":"34238:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10235,"name":"string","nodeType":"ElementaryTypeName","src":"34238:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10239,"mutability":"mutable","name":"values","nameLocation":"34283:6:17","nodeType":"VariableDeclaration","scope":10244,"src":"34264:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34264:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10238,"nodeType":"ArrayTypeName","src":"34264:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"34210:80:17"},"returnParameters":{"id":10243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10242,"mutability":"mutable","name":"json","nameLocation":"34339:4:17","nodeType":"VariableDeclaration","scope":10244,"src":"34325:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10241,"name":"string","nodeType":"ElementaryTypeName","src":"34325:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34324:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10256,"nodeType":"FunctionDefinition","src":"34380:153:17","nodes":[],"documentation":{"id":10245,"nodeType":"StructuredDocumentation","src":"34351:24:17","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"34389:14:17","parameters":{"id":10252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10247,"mutability":"mutable","name":"objectKey","nameLocation":"34420:9:17","nodeType":"VariableDeclaration","scope":10256,"src":"34404:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10246,"name":"string","nodeType":"ElementaryTypeName","src":"34404:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10249,"mutability":"mutable","name":"valueKey","nameLocation":"34447:8:17","nodeType":"VariableDeclaration","scope":10256,"src":"34431:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10248,"name":"string","nodeType":"ElementaryTypeName","src":"34431:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10251,"mutability":"mutable","name":"value","nameLocation":"34472:5:17","nodeType":"VariableDeclaration","scope":10256,"src":"34457:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10250,"name":"bytes","nodeType":"ElementaryTypeName","src":"34457:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34403:75:17"},"returnParameters":{"id":10255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10254,"mutability":"mutable","name":"json","nameLocation":"34527:4:17","nodeType":"VariableDeclaration","scope":10256,"src":"34513:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10253,"name":"string","nodeType":"ElementaryTypeName","src":"34513:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34512:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10269,"nodeType":"FunctionDefinition","src":"34568:156:17","nodes":[],"documentation":{"id":10257,"nodeType":"StructuredDocumentation","src":"34539:24:17","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"34577:14:17","parameters":{"id":10265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10259,"mutability":"mutable","name":"objectKey","nameLocation":"34608:9:17","nodeType":"VariableDeclaration","scope":10269,"src":"34592:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10258,"name":"string","nodeType":"ElementaryTypeName","src":"34592:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10261,"mutability":"mutable","name":"valueKey","nameLocation":"34635:8:17","nodeType":"VariableDeclaration","scope":10269,"src":"34619:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10260,"name":"string","nodeType":"ElementaryTypeName","src":"34619:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10264,"mutability":"mutable","name":"values","nameLocation":"34662:6:17","nodeType":"VariableDeclaration","scope":10269,"src":"34645:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":10262,"name":"bytes","nodeType":"ElementaryTypeName","src":"34645:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":10263,"nodeType":"ArrayTypeName","src":"34645:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"34591:78:17"},"returnParameters":{"id":10268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10267,"mutability":"mutable","name":"json","nameLocation":"34718:4:17","nodeType":"VariableDeclaration","scope":10269,"src":"34704:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10266,"name":"string","nodeType":"ElementaryTypeName","src":"34704:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34703:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10281,"nodeType":"FunctionDefinition","src":"34759:143:17","nodes":[],"documentation":{"id":10270,"nodeType":"StructuredDocumentation","src":"34730:24:17","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"34768:12:17","parameters":{"id":10277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10272,"mutability":"mutable","name":"objectKey","nameLocation":"34797:9:17","nodeType":"VariableDeclaration","scope":10281,"src":"34781:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10271,"name":"string","nodeType":"ElementaryTypeName","src":"34781:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10274,"mutability":"mutable","name":"valueKey","nameLocation":"34824:8:17","nodeType":"VariableDeclaration","scope":10281,"src":"34808:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10273,"name":"string","nodeType":"ElementaryTypeName","src":"34808:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10276,"mutability":"mutable","name":"value","nameLocation":"34841:5:17","nodeType":"VariableDeclaration","scope":10281,"src":"34834:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10275,"name":"int256","nodeType":"ElementaryTypeName","src":"34834:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34780:67:17"},"returnParameters":{"id":10280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10279,"mutability":"mutable","name":"json","nameLocation":"34896:4:17","nodeType":"VariableDeclaration","scope":10281,"src":"34882:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10278,"name":"string","nodeType":"ElementaryTypeName","src":"34882:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34881:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10294,"nodeType":"FunctionDefinition","src":"34937:155:17","nodes":[],"documentation":{"id":10282,"nodeType":"StructuredDocumentation","src":"34908:24:17","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"34946:12:17","parameters":{"id":10290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10284,"mutability":"mutable","name":"objectKey","nameLocation":"34975:9:17","nodeType":"VariableDeclaration","scope":10294,"src":"34959:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10283,"name":"string","nodeType":"ElementaryTypeName","src":"34959:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10286,"mutability":"mutable","name":"valueKey","nameLocation":"35002:8:17","nodeType":"VariableDeclaration","scope":10294,"src":"34986:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10285,"name":"string","nodeType":"ElementaryTypeName","src":"34986:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10289,"mutability":"mutable","name":"values","nameLocation":"35030:6:17","nodeType":"VariableDeclaration","scope":10294,"src":"35012:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":10287,"name":"int256","nodeType":"ElementaryTypeName","src":"35012:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":10288,"nodeType":"ArrayTypeName","src":"35012:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"34958:79:17"},"returnParameters":{"id":10293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10292,"mutability":"mutable","name":"json","nameLocation":"35086:4:17","nodeType":"VariableDeclaration","scope":10294,"src":"35072:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10291,"name":"string","nodeType":"ElementaryTypeName","src":"35072:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35071:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10304,"nodeType":"FunctionDefinition","src":"35289:111:17","nodes":[],"documentation":{"id":10295,"nodeType":"StructuredDocumentation","src":"35098:186:17","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"35298:13:17","parameters":{"id":10300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10297,"mutability":"mutable","name":"objectKey","nameLocation":"35328:9:17","nodeType":"VariableDeclaration","scope":10304,"src":"35312:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10296,"name":"string","nodeType":"ElementaryTypeName","src":"35312:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10299,"mutability":"mutable","name":"value","nameLocation":"35355:5:17","nodeType":"VariableDeclaration","scope":10304,"src":"35339:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10298,"name":"string","nodeType":"ElementaryTypeName","src":"35339:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35311:50:17"},"returnParameters":{"id":10303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10302,"mutability":"mutable","name":"json","nameLocation":"35394:4:17","nodeType":"VariableDeclaration","scope":10304,"src":"35380:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10301,"name":"string","nodeType":"ElementaryTypeName","src":"35380:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35379:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10316,"nodeType":"FunctionDefinition","src":"35435:155:17","nodes":[],"documentation":{"id":10305,"nodeType":"StructuredDocumentation","src":"35406:24:17","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"35444:15:17","parameters":{"id":10312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10307,"mutability":"mutable","name":"objectKey","nameLocation":"35476:9:17","nodeType":"VariableDeclaration","scope":10316,"src":"35460:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10306,"name":"string","nodeType":"ElementaryTypeName","src":"35460:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10309,"mutability":"mutable","name":"valueKey","nameLocation":"35503:8:17","nodeType":"VariableDeclaration","scope":10316,"src":"35487:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10308,"name":"string","nodeType":"ElementaryTypeName","src":"35487:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10311,"mutability":"mutable","name":"value","nameLocation":"35529:5:17","nodeType":"VariableDeclaration","scope":10316,"src":"35513:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10310,"name":"string","nodeType":"ElementaryTypeName","src":"35513:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35459:76:17"},"returnParameters":{"id":10315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10314,"mutability":"mutable","name":"json","nameLocation":"35584:4:17","nodeType":"VariableDeclaration","scope":10316,"src":"35570:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10313,"name":"string","nodeType":"ElementaryTypeName","src":"35570:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35569:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10329,"nodeType":"FunctionDefinition","src":"35625:158:17","nodes":[],"documentation":{"id":10317,"nodeType":"StructuredDocumentation","src":"35596:24:17","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"35634:15:17","parameters":{"id":10325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10319,"mutability":"mutable","name":"objectKey","nameLocation":"35666:9:17","nodeType":"VariableDeclaration","scope":10329,"src":"35650:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10318,"name":"string","nodeType":"ElementaryTypeName","src":"35650:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10321,"mutability":"mutable","name":"valueKey","nameLocation":"35693:8:17","nodeType":"VariableDeclaration","scope":10329,"src":"35677:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10320,"name":"string","nodeType":"ElementaryTypeName","src":"35677:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10324,"mutability":"mutable","name":"values","nameLocation":"35721:6:17","nodeType":"VariableDeclaration","scope":10329,"src":"35703:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":10322,"name":"string","nodeType":"ElementaryTypeName","src":"35703:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10323,"nodeType":"ArrayTypeName","src":"35703:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"35649:79:17"},"returnParameters":{"id":10328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10327,"mutability":"mutable","name":"json","nameLocation":"35777:4:17","nodeType":"VariableDeclaration","scope":10329,"src":"35763:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10326,"name":"string","nodeType":"ElementaryTypeName","src":"35763:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35762:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10341,"nodeType":"FunctionDefinition","src":"35818:150:17","nodes":[],"documentation":{"id":10330,"nodeType":"StructuredDocumentation","src":"35789:24:17","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"35827:18:17","parameters":{"id":10337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10332,"mutability":"mutable","name":"objectKey","nameLocation":"35862:9:17","nodeType":"VariableDeclaration","scope":10341,"src":"35846:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10331,"name":"string","nodeType":"ElementaryTypeName","src":"35846:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10334,"mutability":"mutable","name":"valueKey","nameLocation":"35889:8:17","nodeType":"VariableDeclaration","scope":10341,"src":"35873:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10333,"name":"string","nodeType":"ElementaryTypeName","src":"35873:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10336,"mutability":"mutable","name":"value","nameLocation":"35907:5:17","nodeType":"VariableDeclaration","scope":10341,"src":"35899:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10335,"name":"uint256","nodeType":"ElementaryTypeName","src":"35899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35845:68:17"},"returnParameters":{"id":10340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10339,"mutability":"mutable","name":"json","nameLocation":"35962:4:17","nodeType":"VariableDeclaration","scope":10341,"src":"35948:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10338,"name":"string","nodeType":"ElementaryTypeName","src":"35948:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35947:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10353,"nodeType":"FunctionDefinition","src":"36003:145:17","nodes":[],"documentation":{"id":10342,"nodeType":"StructuredDocumentation","src":"35974:24:17","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"36012:13:17","parameters":{"id":10349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10344,"mutability":"mutable","name":"objectKey","nameLocation":"36042:9:17","nodeType":"VariableDeclaration","scope":10353,"src":"36026:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10343,"name":"string","nodeType":"ElementaryTypeName","src":"36026:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10346,"mutability":"mutable","name":"valueKey","nameLocation":"36069:8:17","nodeType":"VariableDeclaration","scope":10353,"src":"36053:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10345,"name":"string","nodeType":"ElementaryTypeName","src":"36053:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10348,"mutability":"mutable","name":"value","nameLocation":"36087:5:17","nodeType":"VariableDeclaration","scope":10353,"src":"36079:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10347,"name":"uint256","nodeType":"ElementaryTypeName","src":"36079:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36025:68:17"},"returnParameters":{"id":10352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10351,"mutability":"mutable","name":"json","nameLocation":"36142:4:17","nodeType":"VariableDeclaration","scope":10353,"src":"36128:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10350,"name":"string","nodeType":"ElementaryTypeName","src":"36128:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36127:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10366,"nodeType":"FunctionDefinition","src":"36183:157:17","nodes":[],"documentation":{"id":10354,"nodeType":"StructuredDocumentation","src":"36154:24:17","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"36192:13:17","parameters":{"id":10362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10356,"mutability":"mutable","name":"objectKey","nameLocation":"36222:9:17","nodeType":"VariableDeclaration","scope":10366,"src":"36206:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10355,"name":"string","nodeType":"ElementaryTypeName","src":"36206:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10358,"mutability":"mutable","name":"valueKey","nameLocation":"36249:8:17","nodeType":"VariableDeclaration","scope":10366,"src":"36233:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10357,"name":"string","nodeType":"ElementaryTypeName","src":"36233:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10361,"mutability":"mutable","name":"values","nameLocation":"36278:6:17","nodeType":"VariableDeclaration","scope":10366,"src":"36259:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10359,"name":"uint256","nodeType":"ElementaryTypeName","src":"36259:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10360,"nodeType":"ArrayTypeName","src":"36259:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"36205:80:17"},"returnParameters":{"id":10365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10364,"mutability":"mutable","name":"json","nameLocation":"36334:4:17","nodeType":"VariableDeclaration","scope":10366,"src":"36320:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10363,"name":"string","nodeType":"ElementaryTypeName","src":"36320:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36319:20:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10374,"nodeType":"FunctionDefinition","src":"36440:72:17","nodes":[],"documentation":{"id":10367,"nodeType":"StructuredDocumentation","src":"36346:89:17","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"36449:9:17","parameters":{"id":10372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10369,"mutability":"mutable","name":"json","nameLocation":"36475:4:17","nodeType":"VariableDeclaration","scope":10374,"src":"36459:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10368,"name":"string","nodeType":"ElementaryTypeName","src":"36459:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10371,"mutability":"mutable","name":"path","nameLocation":"36497:4:17","nodeType":"VariableDeclaration","scope":10374,"src":"36481:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10370,"name":"string","nodeType":"ElementaryTypeName","src":"36481:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36458:44:17"},"returnParameters":{"id":10373,"nodeType":"ParameterList","parameters":[],"src":"36511:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10384,"nodeType":"FunctionDefinition","src":"36738:98:17","nodes":[],"documentation":{"id":10375,"nodeType":"StructuredDocumentation","src":"36518:215:17","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"36747:9:17","parameters":{"id":10382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10377,"mutability":"mutable","name":"json","nameLocation":"36773:4:17","nodeType":"VariableDeclaration","scope":10384,"src":"36757:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10376,"name":"string","nodeType":"ElementaryTypeName","src":"36757:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10379,"mutability":"mutable","name":"path","nameLocation":"36795:4:17","nodeType":"VariableDeclaration","scope":10384,"src":"36779:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10378,"name":"string","nodeType":"ElementaryTypeName","src":"36779:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10381,"mutability":"mutable","name":"valueKey","nameLocation":"36817:8:17","nodeType":"VariableDeclaration","scope":10384,"src":"36801:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10380,"name":"string","nodeType":"ElementaryTypeName","src":"36801:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36756:70:17"},"returnParameters":{"id":10383,"nodeType":"ParameterList","parameters":[],"src":"36835:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10388,"nodeType":"FunctionDefinition","src":"37375:30:17","nodes":[],"documentation":{"id":10385,"nodeType":"StructuredDocumentation","src":"36878:492:17","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37384:9:17","parameters":{"id":10386,"nodeType":"ParameterList","parameters":[],"src":"37393:2:17"},"returnParameters":{"id":10387,"nodeType":"ParameterList","parameters":[],"src":"37404:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10394,"nodeType":"FunctionDefinition","src":"37575:44:17","nodes":[],"documentation":{"id":10389,"nodeType":"StructuredDocumentation","src":"37411:159:17","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37584:9:17","parameters":{"id":10392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10391,"mutability":"mutable","name":"signer","nameLocation":"37602:6:17","nodeType":"VariableDeclaration","scope":10394,"src":"37594:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10390,"name":"address","nodeType":"ElementaryTypeName","src":"37594:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37593:16:17"},"returnParameters":{"id":10393,"nodeType":"ParameterList","parameters":[],"src":"37618:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10400,"nodeType":"FunctionDefinition","src":"37793:48:17","nodes":[],"documentation":{"id":10395,"nodeType":"StructuredDocumentation","src":"37625:163:17","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37802:9:17","parameters":{"id":10398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10397,"mutability":"mutable","name":"privateKey","nameLocation":"37820:10:17","nodeType":"VariableDeclaration","scope":10400,"src":"37812:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10396,"name":"uint256","nodeType":"ElementaryTypeName","src":"37812:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37811:20:17"},"returnParameters":{"id":10399,"nodeType":"ParameterList","parameters":[],"src":"37840:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10404,"nodeType":"FunctionDefinition","src":"38351:35:17","nodes":[],"documentation":{"id":10401,"nodeType":"StructuredDocumentation","src":"37847:499:17","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38360:14:17","parameters":{"id":10402,"nodeType":"ParameterList","parameters":[],"src":"38374:2:17"},"returnParameters":{"id":10403,"nodeType":"ParameterList","parameters":[],"src":"38385:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10410,"nodeType":"FunctionDefinition","src":"38548:49:17","nodes":[],"documentation":{"id":10405,"nodeType":"StructuredDocumentation","src":"38392:151:17","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38557:14:17","parameters":{"id":10408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10407,"mutability":"mutable","name":"signer","nameLocation":"38580:6:17","nodeType":"VariableDeclaration","scope":10410,"src":"38572:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10406,"name":"address","nodeType":"ElementaryTypeName","src":"38572:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38571:16:17"},"returnParameters":{"id":10409,"nodeType":"ParameterList","parameters":[],"src":"38596:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10416,"nodeType":"FunctionDefinition","src":"38763:53:17","nodes":[],"documentation":{"id":10411,"nodeType":"StructuredDocumentation","src":"38603:155:17","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38772:14:17","parameters":{"id":10414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10413,"mutability":"mutable","name":"privateKey","nameLocation":"38795:10:17","nodeType":"VariableDeclaration","scope":10416,"src":"38787:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10412,"name":"uint256","nodeType":"ElementaryTypeName","src":"38787:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38786:20:17"},"returnParameters":{"id":10415,"nodeType":"ParameterList","parameters":[],"src":"38815:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10420,"nodeType":"FunctionDefinition","src":"38869:34:17","nodes":[],"documentation":{"id":10417,"nodeType":"StructuredDocumentation","src":"38822:42:17","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"38878:13:17","parameters":{"id":10418,"nodeType":"ParameterList","parameters":[],"src":"38891:2:17"},"returnParameters":{"id":10419,"nodeType":"ParameterList","parameters":[],"src":"38902:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":10430,"nodeType":"FunctionDefinition","src":"39152:93:17","nodes":[],"documentation":{"id":10421,"nodeType":"StructuredDocumentation","src":"38942:205:17","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"39161:7:17","parameters":{"id":10426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10423,"mutability":"mutable","name":"input","nameLocation":"39185:5:17","nodeType":"VariableDeclaration","scope":10430,"src":"39169:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10422,"name":"string","nodeType":"ElementaryTypeName","src":"39169:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10425,"mutability":"mutable","name":"key","nameLocation":"39208:3:17","nodeType":"VariableDeclaration","scope":10430,"src":"39192:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10424,"name":"string","nodeType":"ElementaryTypeName","src":"39192:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39168:44:17"},"returnParameters":{"id":10429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10430,"src":"39236:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10427,"name":"uint256","nodeType":"ElementaryTypeName","src":"39236:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39235:9:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10438,"nodeType":"FunctionDefinition","src":"39304:100:17","nodes":[],"documentation":{"id":10431,"nodeType":"StructuredDocumentation","src":"39251:48:17","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"39313:12:17","parameters":{"id":10434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10433,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39342:16:17","nodeType":"VariableDeclaration","scope":10438,"src":"39326:32:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10432,"name":"string","nodeType":"ElementaryTypeName","src":"39326:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39325:34:17"},"returnParameters":{"id":10437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10436,"mutability":"mutable","name":"parsedValue","nameLocation":"39391:11:17","nodeType":"VariableDeclaration","scope":10438,"src":"39383:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10435,"name":"address","nodeType":"ElementaryTypeName","src":"39383:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39382:21:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10446,"nodeType":"FunctionDefinition","src":"39459:94:17","nodes":[],"documentation":{"id":10439,"nodeType":"StructuredDocumentation","src":"39410:44:17","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"39468:9:17","parameters":{"id":10442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10441,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39494:16:17","nodeType":"VariableDeclaration","scope":10446,"src":"39478:32:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10440,"name":"string","nodeType":"ElementaryTypeName","src":"39478:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39477:34:17"},"returnParameters":{"id":10445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10444,"mutability":"mutable","name":"parsedValue","nameLocation":"39540:11:17","nodeType":"VariableDeclaration","scope":10446,"src":"39535:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10443,"name":"bool","nodeType":"ElementaryTypeName","src":"39535:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"39534:18:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10454,"nodeType":"FunctionDefinition","src":"39607:103:17","nodes":[],"documentation":{"id":10447,"nodeType":"StructuredDocumentation","src":"39559:43:17","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"39616:10:17","parameters":{"id":10450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10449,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39643:16:17","nodeType":"VariableDeclaration","scope":10454,"src":"39627:32:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10448,"name":"string","nodeType":"ElementaryTypeName","src":"39627:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39626:34:17"},"returnParameters":{"id":10453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10452,"mutability":"mutable","name":"parsedValue","nameLocation":"39697:11:17","nodeType":"VariableDeclaration","scope":10454,"src":"39684:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10451,"name":"bytes","nodeType":"ElementaryTypeName","src":"39684:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39683:26:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10462,"nodeType":"FunctionDefinition","src":"39768:100:17","nodes":[],"documentation":{"id":10455,"nodeType":"StructuredDocumentation","src":"39716:47:17","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"39777:12:17","parameters":{"id":10458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10457,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39806:16:17","nodeType":"VariableDeclaration","scope":10462,"src":"39790:32:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10456,"name":"string","nodeType":"ElementaryTypeName","src":"39790:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39789:34:17"},"returnParameters":{"id":10461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10460,"mutability":"mutable","name":"parsedValue","nameLocation":"39855:11:17","nodeType":"VariableDeclaration","scope":10462,"src":"39847:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"39847:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"39846:21:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10470,"nodeType":"FunctionDefinition","src":"39925:95:17","nodes":[],"documentation":{"id":10463,"nodeType":"StructuredDocumentation","src":"39874:46:17","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"39934:8:17","parameters":{"id":10466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10465,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39959:16:17","nodeType":"VariableDeclaration","scope":10470,"src":"39943:32:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10464,"name":"string","nodeType":"ElementaryTypeName","src":"39943:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39942:34:17"},"returnParameters":{"id":10469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10468,"mutability":"mutable","name":"parsedValue","nameLocation":"40007:11:17","nodeType":"VariableDeclaration","scope":10470,"src":"40000:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10467,"name":"int256","nodeType":"ElementaryTypeName","src":"40000:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"39999:20:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10478,"nodeType":"FunctionDefinition","src":"40078:97:17","nodes":[],"documentation":{"id":10471,"nodeType":"StructuredDocumentation","src":"40026:47:17","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"40087:9:17","parameters":{"id":10474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10473,"mutability":"mutable","name":"stringifiedValue","nameLocation":"40113:16:17","nodeType":"VariableDeclaration","scope":10478,"src":"40097:32:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10472,"name":"string","nodeType":"ElementaryTypeName","src":"40097:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40096:34:17"},"returnParameters":{"id":10477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10476,"mutability":"mutable","name":"parsedValue","nameLocation":"40162:11:17","nodeType":"VariableDeclaration","scope":10478,"src":"40154:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10475,"name":"uint256","nodeType":"ElementaryTypeName","src":"40154:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40153:21:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10490,"nodeType":"FunctionDefinition","src":"40253:151:17","nodes":[],"documentation":{"id":10479,"nodeType":"StructuredDocumentation","src":"40181:67:17","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"40262:7:17","parameters":{"id":10486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10481,"mutability":"mutable","name":"input","nameLocation":"40286:5:17","nodeType":"VariableDeclaration","scope":10490,"src":"40270:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10480,"name":"string","nodeType":"ElementaryTypeName","src":"40270:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10483,"mutability":"mutable","name":"from","nameLocation":"40309:4:17","nodeType":"VariableDeclaration","scope":10490,"src":"40293:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10482,"name":"string","nodeType":"ElementaryTypeName","src":"40293:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10485,"mutability":"mutable","name":"to","nameLocation":"40331:2:17","nodeType":"VariableDeclaration","scope":10490,"src":"40315:18:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10484,"name":"string","nodeType":"ElementaryTypeName","src":"40315:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40269:65:17"},"returnParameters":{"id":10489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10488,"mutability":"mutable","name":"output","nameLocation":"40396:6:17","nodeType":"VariableDeclaration","scope":10490,"src":"40382:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10487,"name":"string","nodeType":"ElementaryTypeName","src":"40382:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40381:22:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10501,"nodeType":"FunctionDefinition","src":"40497:113:17","nodes":[],"documentation":{"id":10491,"nodeType":"StructuredDocumentation","src":"40410:82:17","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"40506:5:17","parameters":{"id":10496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10493,"mutability":"mutable","name":"input","nameLocation":"40528:5:17","nodeType":"VariableDeclaration","scope":10501,"src":"40512:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10492,"name":"string","nodeType":"ElementaryTypeName","src":"40512:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10495,"mutability":"mutable","name":"delimiter","nameLocation":"40551:9:17","nodeType":"VariableDeclaration","scope":10501,"src":"40535:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10494,"name":"string","nodeType":"ElementaryTypeName","src":"40535:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40511:50:17"},"returnParameters":{"id":10500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10499,"mutability":"mutable","name":"outputs","nameLocation":"40601:7:17","nodeType":"VariableDeclaration","scope":10501,"src":"40585:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":10497,"name":"string","nodeType":"ElementaryTypeName","src":"40585:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10498,"nodeType":"ArrayTypeName","src":"40585:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"40584:25:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10509,"nodeType":"FunctionDefinition","src":"40672:89:17","nodes":[],"documentation":{"id":10502,"nodeType":"StructuredDocumentation","src":"40616:51:17","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"40681:11:17","parameters":{"id":10505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10504,"mutability":"mutable","name":"input","nameLocation":"40709:5:17","nodeType":"VariableDeclaration","scope":10509,"src":"40693:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10503,"name":"string","nodeType":"ElementaryTypeName","src":"40693:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40692:23:17"},"returnParameters":{"id":10508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10507,"mutability":"mutable","name":"output","nameLocation":"40753:6:17","nodeType":"VariableDeclaration","scope":10509,"src":"40739:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10506,"name":"string","nodeType":"ElementaryTypeName","src":"40739:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40738:22:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10517,"nodeType":"FunctionDefinition","src":"40815:88:17","nodes":[],"documentation":{"id":10510,"nodeType":"StructuredDocumentation","src":"40767:43:17","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"40824:8:17","parameters":{"id":10513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10512,"mutability":"mutable","name":"value","nameLocation":"40841:5:17","nodeType":"VariableDeclaration","scope":10517,"src":"40833:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10511,"name":"address","nodeType":"ElementaryTypeName","src":"40833:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40832:15:17"},"returnParameters":{"id":10516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10515,"mutability":"mutable","name":"stringifiedValue","nameLocation":"40885:16:17","nodeType":"VariableDeclaration","scope":10517,"src":"40871:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10514,"name":"string","nodeType":"ElementaryTypeName","src":"40871:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40870:32:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10525,"nodeType":"FunctionDefinition","src":"40957:95:17","nodes":[],"documentation":{"id":10518,"nodeType":"StructuredDocumentation","src":"40909:43:17","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"40966:8:17","parameters":{"id":10521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10520,"mutability":"mutable","name":"value","nameLocation":"40990:5:17","nodeType":"VariableDeclaration","scope":10525,"src":"40975:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10519,"name":"bytes","nodeType":"ElementaryTypeName","src":"40975:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40974:22:17"},"returnParameters":{"id":10524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10523,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41034:16:17","nodeType":"VariableDeclaration","scope":10525,"src":"41020:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10522,"name":"string","nodeType":"ElementaryTypeName","src":"41020:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41019:32:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10533,"nodeType":"FunctionDefinition","src":"41106:88:17","nodes":[],"documentation":{"id":10526,"nodeType":"StructuredDocumentation","src":"41058:43:17","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41115:8:17","parameters":{"id":10529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10528,"mutability":"mutable","name":"value","nameLocation":"41132:5:17","nodeType":"VariableDeclaration","scope":10533,"src":"41124:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"41124:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"41123:15:17"},"returnParameters":{"id":10532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10531,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41176:16:17","nodeType":"VariableDeclaration","scope":10533,"src":"41162:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10530,"name":"string","nodeType":"ElementaryTypeName","src":"41162:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41161:32:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10541,"nodeType":"FunctionDefinition","src":"41248:85:17","nodes":[],"documentation":{"id":10534,"nodeType":"StructuredDocumentation","src":"41200:43:17","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41257:8:17","parameters":{"id":10537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10536,"mutability":"mutable","name":"value","nameLocation":"41271:5:17","nodeType":"VariableDeclaration","scope":10541,"src":"41266:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10535,"name":"bool","nodeType":"ElementaryTypeName","src":"41266:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41265:12:17"},"returnParameters":{"id":10540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10539,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41315:16:17","nodeType":"VariableDeclaration","scope":10541,"src":"41301:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10538,"name":"string","nodeType":"ElementaryTypeName","src":"41301:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41300:32:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10549,"nodeType":"FunctionDefinition","src":"41387:88:17","nodes":[],"documentation":{"id":10542,"nodeType":"StructuredDocumentation","src":"41339:43:17","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41396:8:17","parameters":{"id":10545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10544,"mutability":"mutable","name":"value","nameLocation":"41413:5:17","nodeType":"VariableDeclaration","scope":10549,"src":"41405:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10543,"name":"uint256","nodeType":"ElementaryTypeName","src":"41405:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41404:15:17"},"returnParameters":{"id":10548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10547,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41457:16:17","nodeType":"VariableDeclaration","scope":10549,"src":"41443:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10546,"name":"string","nodeType":"ElementaryTypeName","src":"41443:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41442:32:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10557,"nodeType":"FunctionDefinition","src":"41529:87:17","nodes":[],"documentation":{"id":10550,"nodeType":"StructuredDocumentation","src":"41481:43:17","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41538:8:17","parameters":{"id":10553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10552,"mutability":"mutable","name":"value","nameLocation":"41554:5:17","nodeType":"VariableDeclaration","scope":10557,"src":"41547:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10551,"name":"int256","nodeType":"ElementaryTypeName","src":"41547:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"41546:14:17"},"returnParameters":{"id":10556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10555,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41598:16:17","nodeType":"VariableDeclaration","scope":10557,"src":"41584:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10554,"name":"string","nodeType":"ElementaryTypeName","src":"41584:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41583:32:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10565,"nodeType":"FunctionDefinition","src":"41678:89:17","nodes":[],"documentation":{"id":10558,"nodeType":"StructuredDocumentation","src":"41622:51:17","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"41687:11:17","parameters":{"id":10561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10560,"mutability":"mutable","name":"input","nameLocation":"41715:5:17","nodeType":"VariableDeclaration","scope":10565,"src":"41699:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10559,"name":"string","nodeType":"ElementaryTypeName","src":"41699:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41698:23:17"},"returnParameters":{"id":10564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10563,"mutability":"mutable","name":"output","nameLocation":"41759:6:17","nodeType":"VariableDeclaration","scope":10565,"src":"41745:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10562,"name":"string","nodeType":"ElementaryTypeName","src":"41745:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41744:22:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10573,"nodeType":"FunctionDefinition","src":"41850:82:17","nodes":[],"documentation":{"id":10566,"nodeType":"StructuredDocumentation","src":"41773:72:17","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"41859:4:17","parameters":{"id":10569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10568,"mutability":"mutable","name":"input","nameLocation":"41880:5:17","nodeType":"VariableDeclaration","scope":10573,"src":"41864:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10567,"name":"string","nodeType":"ElementaryTypeName","src":"41864:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41863:23:17"},"returnParameters":{"id":10572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10571,"mutability":"mutable","name":"output","nameLocation":"41924:6:17","nodeType":"VariableDeclaration","scope":10573,"src":"41910:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10570,"name":"string","nodeType":"ElementaryTypeName","src":"41910:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41909:22:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10585,"nodeType":"FunctionDefinition","src":"42127:113:17","nodes":[],"documentation":{"id":10574,"nodeType":"StructuredDocumentation","src":"41972:150:17","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42136:24:17","parameters":{"id":10583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10576,"mutability":"mutable","name":"left","nameLocation":"42169:4:17","nodeType":"VariableDeclaration","scope":10585,"src":"42161:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10575,"name":"uint256","nodeType":"ElementaryTypeName","src":"42161:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10578,"mutability":"mutable","name":"right","nameLocation":"42183:5:17","nodeType":"VariableDeclaration","scope":10585,"src":"42175:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10577,"name":"uint256","nodeType":"ElementaryTypeName","src":"42175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10580,"mutability":"mutable","name":"maxDelta","nameLocation":"42198:8:17","nodeType":"VariableDeclaration","scope":10585,"src":"42190:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10579,"name":"uint256","nodeType":"ElementaryTypeName","src":"42190:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10582,"mutability":"mutable","name":"decimals","nameLocation":"42216:8:17","nodeType":"VariableDeclaration","scope":10585,"src":"42208:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10581,"name":"uint256","nodeType":"ElementaryTypeName","src":"42208:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42160:65:17"},"returnParameters":{"id":10584,"nodeType":"ParameterList","parameters":[],"src":"42239:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10599,"nodeType":"FunctionDefinition","src":"42455:182:17","nodes":[],"documentation":{"id":10586,"nodeType":"StructuredDocumentation","src":"42246:204:17","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42464:24:17","parameters":{"id":10597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10588,"mutability":"mutable","name":"left","nameLocation":"42506:4:17","nodeType":"VariableDeclaration","scope":10599,"src":"42498:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10587,"name":"uint256","nodeType":"ElementaryTypeName","src":"42498:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10590,"mutability":"mutable","name":"right","nameLocation":"42528:5:17","nodeType":"VariableDeclaration","scope":10599,"src":"42520:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10589,"name":"uint256","nodeType":"ElementaryTypeName","src":"42520:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10592,"mutability":"mutable","name":"maxDelta","nameLocation":"42551:8:17","nodeType":"VariableDeclaration","scope":10599,"src":"42543:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10591,"name":"uint256","nodeType":"ElementaryTypeName","src":"42543:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10594,"mutability":"mutable","name":"decimals","nameLocation":"42577:8:17","nodeType":"VariableDeclaration","scope":10599,"src":"42569:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10593,"name":"uint256","nodeType":"ElementaryTypeName","src":"42569:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10596,"mutability":"mutable","name":"error","nameLocation":"42611:5:17","nodeType":"VariableDeclaration","scope":10599,"src":"42595:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10595,"name":"string","nodeType":"ElementaryTypeName","src":"42595:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42488:134:17"},"returnParameters":{"id":10598,"nodeType":"ParameterList","parameters":[],"src":"42636:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10611,"nodeType":"FunctionDefinition","src":"42797:111:17","nodes":[],"documentation":{"id":10600,"nodeType":"StructuredDocumentation","src":"42643:149:17","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42806:24:17","parameters":{"id":10609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10602,"mutability":"mutable","name":"left","nameLocation":"42838:4:17","nodeType":"VariableDeclaration","scope":10611,"src":"42831:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10601,"name":"int256","nodeType":"ElementaryTypeName","src":"42831:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10604,"mutability":"mutable","name":"right","nameLocation":"42851:5:17","nodeType":"VariableDeclaration","scope":10611,"src":"42844:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10603,"name":"int256","nodeType":"ElementaryTypeName","src":"42844:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10606,"mutability":"mutable","name":"maxDelta","nameLocation":"42866:8:17","nodeType":"VariableDeclaration","scope":10611,"src":"42858:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10605,"name":"uint256","nodeType":"ElementaryTypeName","src":"42858:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10608,"mutability":"mutable","name":"decimals","nameLocation":"42884:8:17","nodeType":"VariableDeclaration","scope":10611,"src":"42876:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10607,"name":"uint256","nodeType":"ElementaryTypeName","src":"42876:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42830:63:17"},"returnParameters":{"id":10610,"nodeType":"ParameterList","parameters":[],"src":"42907:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10625,"nodeType":"FunctionDefinition","src":"43122:180:17","nodes":[],"documentation":{"id":10612,"nodeType":"StructuredDocumentation","src":"42914:203:17","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"43131:24:17","parameters":{"id":10623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10614,"mutability":"mutable","name":"left","nameLocation":"43172:4:17","nodeType":"VariableDeclaration","scope":10625,"src":"43165:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10613,"name":"int256","nodeType":"ElementaryTypeName","src":"43165:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10616,"mutability":"mutable","name":"right","nameLocation":"43193:5:17","nodeType":"VariableDeclaration","scope":10625,"src":"43186:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10615,"name":"int256","nodeType":"ElementaryTypeName","src":"43186:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10618,"mutability":"mutable","name":"maxDelta","nameLocation":"43216:8:17","nodeType":"VariableDeclaration","scope":10625,"src":"43208:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10617,"name":"uint256","nodeType":"ElementaryTypeName","src":"43208:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10620,"mutability":"mutable","name":"decimals","nameLocation":"43242:8:17","nodeType":"VariableDeclaration","scope":10625,"src":"43234:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10619,"name":"uint256","nodeType":"ElementaryTypeName","src":"43234:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10622,"mutability":"mutable","name":"error","nameLocation":"43276:5:17","nodeType":"VariableDeclaration","scope":10625,"src":"43260:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10621,"name":"string","nodeType":"ElementaryTypeName","src":"43260:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43155:132:17"},"returnParameters":{"id":10624,"nodeType":"ParameterList","parameters":[],"src":"43301:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10635,"nodeType":"FunctionDefinition","src":"43406:88:17","nodes":[],"documentation":{"id":10626,"nodeType":"StructuredDocumentation","src":"43308:93:17","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43415:17:17","parameters":{"id":10633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10628,"mutability":"mutable","name":"left","nameLocation":"43441:4:17","nodeType":"VariableDeclaration","scope":10635,"src":"43433:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10627,"name":"uint256","nodeType":"ElementaryTypeName","src":"43433:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10630,"mutability":"mutable","name":"right","nameLocation":"43455:5:17","nodeType":"VariableDeclaration","scope":10635,"src":"43447:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10629,"name":"uint256","nodeType":"ElementaryTypeName","src":"43447:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10632,"mutability":"mutable","name":"maxDelta","nameLocation":"43470:8:17","nodeType":"VariableDeclaration","scope":10635,"src":"43462:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10631,"name":"uint256","nodeType":"ElementaryTypeName","src":"43462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43432:47:17"},"returnParameters":{"id":10634,"nodeType":"ParameterList","parameters":[],"src":"43493:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10647,"nodeType":"FunctionDefinition","src":"43660:111:17","nodes":[],"documentation":{"id":10636,"nodeType":"StructuredDocumentation","src":"43500:155:17","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43669:17:17","parameters":{"id":10645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10638,"mutability":"mutable","name":"left","nameLocation":"43695:4:17","nodeType":"VariableDeclaration","scope":10647,"src":"43687:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10637,"name":"uint256","nodeType":"ElementaryTypeName","src":"43687:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10640,"mutability":"mutable","name":"right","nameLocation":"43709:5:17","nodeType":"VariableDeclaration","scope":10647,"src":"43701:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10639,"name":"uint256","nodeType":"ElementaryTypeName","src":"43701:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10642,"mutability":"mutable","name":"maxDelta","nameLocation":"43724:8:17","nodeType":"VariableDeclaration","scope":10647,"src":"43716:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10641,"name":"uint256","nodeType":"ElementaryTypeName","src":"43716:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10644,"mutability":"mutable","name":"error","nameLocation":"43750:5:17","nodeType":"VariableDeclaration","scope":10647,"src":"43734:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10643,"name":"string","nodeType":"ElementaryTypeName","src":"43734:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43686:70:17"},"returnParameters":{"id":10646,"nodeType":"ParameterList","parameters":[],"src":"43770:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10657,"nodeType":"FunctionDefinition","src":"43874:86:17","nodes":[],"documentation":{"id":10648,"nodeType":"StructuredDocumentation","src":"43777:92:17","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43883:17:17","parameters":{"id":10655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10650,"mutability":"mutable","name":"left","nameLocation":"43908:4:17","nodeType":"VariableDeclaration","scope":10657,"src":"43901:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10649,"name":"int256","nodeType":"ElementaryTypeName","src":"43901:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10652,"mutability":"mutable","name":"right","nameLocation":"43921:5:17","nodeType":"VariableDeclaration","scope":10657,"src":"43914:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10651,"name":"int256","nodeType":"ElementaryTypeName","src":"43914:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10654,"mutability":"mutable","name":"maxDelta","nameLocation":"43936:8:17","nodeType":"VariableDeclaration","scope":10657,"src":"43928:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10653,"name":"uint256","nodeType":"ElementaryTypeName","src":"43928:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43900:45:17"},"returnParameters":{"id":10656,"nodeType":"ParameterList","parameters":[],"src":"43959:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10669,"nodeType":"FunctionDefinition","src":"44125:109:17","nodes":[],"documentation":{"id":10658,"nodeType":"StructuredDocumentation","src":"43966:154:17","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"44134:17:17","parameters":{"id":10667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10660,"mutability":"mutable","name":"left","nameLocation":"44159:4:17","nodeType":"VariableDeclaration","scope":10669,"src":"44152:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10659,"name":"int256","nodeType":"ElementaryTypeName","src":"44152:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10662,"mutability":"mutable","name":"right","nameLocation":"44172:5:17","nodeType":"VariableDeclaration","scope":10669,"src":"44165:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10661,"name":"int256","nodeType":"ElementaryTypeName","src":"44165:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10664,"mutability":"mutable","name":"maxDelta","nameLocation":"44187:8:17","nodeType":"VariableDeclaration","scope":10669,"src":"44179:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10663,"name":"uint256","nodeType":"ElementaryTypeName","src":"44179:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10666,"mutability":"mutable","name":"error","nameLocation":"44213:5:17","nodeType":"VariableDeclaration","scope":10669,"src":"44197:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10665,"name":"string","nodeType":"ElementaryTypeName","src":"44197:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44151:68:17"},"returnParameters":{"id":10668,"nodeType":"ParameterList","parameters":[],"src":"44233:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10681,"nodeType":"FunctionDefinition","src":"44505:136:17","nodes":[],"documentation":{"id":10670,"nodeType":"StructuredDocumentation","src":"44240:260:17","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"44514:24:17","parameters":{"id":10679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10672,"mutability":"mutable","name":"left","nameLocation":"44547:4:17","nodeType":"VariableDeclaration","scope":10681,"src":"44539:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10671,"name":"uint256","nodeType":"ElementaryTypeName","src":"44539:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10674,"mutability":"mutable","name":"right","nameLocation":"44561:5:17","nodeType":"VariableDeclaration","scope":10681,"src":"44553:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10673,"name":"uint256","nodeType":"ElementaryTypeName","src":"44553:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10676,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"44576:15:17","nodeType":"VariableDeclaration","scope":10681,"src":"44568:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10675,"name":"uint256","nodeType":"ElementaryTypeName","src":"44568:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10678,"mutability":"mutable","name":"decimals","nameLocation":"44601:8:17","nodeType":"VariableDeclaration","scope":10681,"src":"44593:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10677,"name":"uint256","nodeType":"ElementaryTypeName","src":"44593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44538:72:17"},"returnParameters":{"id":10680,"nodeType":"ParameterList","parameters":[],"src":"44640:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10695,"nodeType":"FunctionDefinition","src":"44966:189:17","nodes":[],"documentation":{"id":10682,"nodeType":"StructuredDocumentation","src":"44647:314:17","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"44975:24:17","parameters":{"id":10693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10684,"mutability":"mutable","name":"left","nameLocation":"45017:4:17","nodeType":"VariableDeclaration","scope":10695,"src":"45009:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10683,"name":"uint256","nodeType":"ElementaryTypeName","src":"45009:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10686,"mutability":"mutable","name":"right","nameLocation":"45039:5:17","nodeType":"VariableDeclaration","scope":10695,"src":"45031:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10685,"name":"uint256","nodeType":"ElementaryTypeName","src":"45031:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10688,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45062:15:17","nodeType":"VariableDeclaration","scope":10695,"src":"45054:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10687,"name":"uint256","nodeType":"ElementaryTypeName","src":"45054:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10690,"mutability":"mutable","name":"decimals","nameLocation":"45095:8:17","nodeType":"VariableDeclaration","scope":10695,"src":"45087:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10689,"name":"uint256","nodeType":"ElementaryTypeName","src":"45087:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10692,"mutability":"mutable","name":"error","nameLocation":"45129:5:17","nodeType":"VariableDeclaration","scope":10695,"src":"45113:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10691,"name":"string","nodeType":"ElementaryTypeName","src":"45113:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44999:141:17"},"returnParameters":{"id":10694,"nodeType":"ParameterList","parameters":[],"src":"45154:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10707,"nodeType":"FunctionDefinition","src":"45425:134:17","nodes":[],"documentation":{"id":10696,"nodeType":"StructuredDocumentation","src":"45161:259:17","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"45434:24:17","parameters":{"id":10705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10698,"mutability":"mutable","name":"left","nameLocation":"45466:4:17","nodeType":"VariableDeclaration","scope":10707,"src":"45459:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10697,"name":"int256","nodeType":"ElementaryTypeName","src":"45459:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10700,"mutability":"mutable","name":"right","nameLocation":"45479:5:17","nodeType":"VariableDeclaration","scope":10707,"src":"45472:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10699,"name":"int256","nodeType":"ElementaryTypeName","src":"45472:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10702,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45494:15:17","nodeType":"VariableDeclaration","scope":10707,"src":"45486:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10701,"name":"uint256","nodeType":"ElementaryTypeName","src":"45486:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10704,"mutability":"mutable","name":"decimals","nameLocation":"45519:8:17","nodeType":"VariableDeclaration","scope":10707,"src":"45511:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10703,"name":"uint256","nodeType":"ElementaryTypeName","src":"45511:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45458:70:17"},"returnParameters":{"id":10706,"nodeType":"ParameterList","parameters":[],"src":"45558:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10721,"nodeType":"FunctionDefinition","src":"45883:187:17","nodes":[],"documentation":{"id":10708,"nodeType":"StructuredDocumentation","src":"45565:313:17","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"45892:24:17","parameters":{"id":10719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10710,"mutability":"mutable","name":"left","nameLocation":"45933:4:17","nodeType":"VariableDeclaration","scope":10721,"src":"45926:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10709,"name":"int256","nodeType":"ElementaryTypeName","src":"45926:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10712,"mutability":"mutable","name":"right","nameLocation":"45954:5:17","nodeType":"VariableDeclaration","scope":10721,"src":"45947:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10711,"name":"int256","nodeType":"ElementaryTypeName","src":"45947:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10714,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45977:15:17","nodeType":"VariableDeclaration","scope":10721,"src":"45969:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10713,"name":"uint256","nodeType":"ElementaryTypeName","src":"45969:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10716,"mutability":"mutable","name":"decimals","nameLocation":"46010:8:17","nodeType":"VariableDeclaration","scope":10721,"src":"46002:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10715,"name":"uint256","nodeType":"ElementaryTypeName","src":"46002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10718,"mutability":"mutable","name":"error","nameLocation":"46044:5:17","nodeType":"VariableDeclaration","scope":10721,"src":"46028:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10717,"name":"string","nodeType":"ElementaryTypeName","src":"46028:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45916:139:17"},"returnParameters":{"id":10720,"nodeType":"ParameterList","parameters":[],"src":"46069:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10731,"nodeType":"FunctionDefinition","src":"46284:95:17","nodes":[],"documentation":{"id":10722,"nodeType":"StructuredDocumentation","src":"46076:203:17","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"46293:17:17","parameters":{"id":10729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10724,"mutability":"mutable","name":"left","nameLocation":"46319:4:17","nodeType":"VariableDeclaration","scope":10731,"src":"46311:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10723,"name":"uint256","nodeType":"ElementaryTypeName","src":"46311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10726,"mutability":"mutable","name":"right","nameLocation":"46333:5:17","nodeType":"VariableDeclaration","scope":10731,"src":"46325:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10725,"name":"uint256","nodeType":"ElementaryTypeName","src":"46325:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10728,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"46348:15:17","nodeType":"VariableDeclaration","scope":10731,"src":"46340:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10727,"name":"uint256","nodeType":"ElementaryTypeName","src":"46340:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46310:54:17"},"returnParameters":{"id":10730,"nodeType":"ParameterList","parameters":[],"src":"46378:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10743,"nodeType":"FunctionDefinition","src":"46655:134:17","nodes":[],"documentation":{"id":10732,"nodeType":"StructuredDocumentation","src":"46385:265:17","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"46664:17:17","parameters":{"id":10741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10734,"mutability":"mutable","name":"left","nameLocation":"46690:4:17","nodeType":"VariableDeclaration","scope":10743,"src":"46682:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10733,"name":"uint256","nodeType":"ElementaryTypeName","src":"46682:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10736,"mutability":"mutable","name":"right","nameLocation":"46704:5:17","nodeType":"VariableDeclaration","scope":10743,"src":"46696:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10735,"name":"uint256","nodeType":"ElementaryTypeName","src":"46696:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10738,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"46719:15:17","nodeType":"VariableDeclaration","scope":10743,"src":"46711:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10737,"name":"uint256","nodeType":"ElementaryTypeName","src":"46711:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10740,"mutability":"mutable","name":"error","nameLocation":"46752:5:17","nodeType":"VariableDeclaration","scope":10743,"src":"46736:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10739,"name":"string","nodeType":"ElementaryTypeName","src":"46736:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46681:77:17"},"returnParameters":{"id":10742,"nodeType":"ParameterList","parameters":[],"src":"46788:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10753,"nodeType":"FunctionDefinition","src":"47002:93:17","nodes":[],"documentation":{"id":10744,"nodeType":"StructuredDocumentation","src":"46795:202:17","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"47011:17:17","parameters":{"id":10751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10746,"mutability":"mutable","name":"left","nameLocation":"47036:4:17","nodeType":"VariableDeclaration","scope":10753,"src":"47029:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10745,"name":"int256","nodeType":"ElementaryTypeName","src":"47029:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10748,"mutability":"mutable","name":"right","nameLocation":"47049:5:17","nodeType":"VariableDeclaration","scope":10753,"src":"47042:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10747,"name":"int256","nodeType":"ElementaryTypeName","src":"47042:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10750,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47064:15:17","nodeType":"VariableDeclaration","scope":10753,"src":"47056:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10749,"name":"uint256","nodeType":"ElementaryTypeName","src":"47056:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47028:52:17"},"returnParameters":{"id":10752,"nodeType":"ParameterList","parameters":[],"src":"47094:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10765,"nodeType":"FunctionDefinition","src":"47370:132:17","nodes":[],"documentation":{"id":10754,"nodeType":"StructuredDocumentation","src":"47101:264:17","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"47379:17:17","parameters":{"id":10763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10756,"mutability":"mutable","name":"left","nameLocation":"47404:4:17","nodeType":"VariableDeclaration","scope":10765,"src":"47397:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10755,"name":"int256","nodeType":"ElementaryTypeName","src":"47397:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10758,"mutability":"mutable","name":"right","nameLocation":"47417:5:17","nodeType":"VariableDeclaration","scope":10765,"src":"47410:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10757,"name":"int256","nodeType":"ElementaryTypeName","src":"47410:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10760,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47432:15:17","nodeType":"VariableDeclaration","scope":10765,"src":"47424:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10759,"name":"uint256","nodeType":"ElementaryTypeName","src":"47424:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10762,"mutability":"mutable","name":"error","nameLocation":"47465:5:17","nodeType":"VariableDeclaration","scope":10765,"src":"47449:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10761,"name":"string","nodeType":"ElementaryTypeName","src":"47449:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47396:75:17"},"returnParameters":{"id":10764,"nodeType":"ParameterList","parameters":[],"src":"47501:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10775,"nodeType":"FunctionDefinition","src":"47611:86:17","nodes":[],"documentation":{"id":10766,"nodeType":"StructuredDocumentation","src":"47508:98:17","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"47620:15:17","parameters":{"id":10773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10768,"mutability":"mutable","name":"left","nameLocation":"47644:4:17","nodeType":"VariableDeclaration","scope":10775,"src":"47636:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10767,"name":"uint256","nodeType":"ElementaryTypeName","src":"47636:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10770,"mutability":"mutable","name":"right","nameLocation":"47658:5:17","nodeType":"VariableDeclaration","scope":10775,"src":"47650:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10769,"name":"uint256","nodeType":"ElementaryTypeName","src":"47650:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10772,"mutability":"mutable","name":"decimals","nameLocation":"47673:8:17","nodeType":"VariableDeclaration","scope":10775,"src":"47665:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10771,"name":"uint256","nodeType":"ElementaryTypeName","src":"47665:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47635:47:17"},"returnParameters":{"id":10774,"nodeType":"ParameterList","parameters":[],"src":"47696:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10787,"nodeType":"FunctionDefinition","src":"47868:109:17","nodes":[],"documentation":{"id":10776,"nodeType":"StructuredDocumentation","src":"47703:160:17","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"47877:15:17","parameters":{"id":10785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10778,"mutability":"mutable","name":"left","nameLocation":"47901:4:17","nodeType":"VariableDeclaration","scope":10787,"src":"47893:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10777,"name":"uint256","nodeType":"ElementaryTypeName","src":"47893:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10780,"mutability":"mutable","name":"right","nameLocation":"47915:5:17","nodeType":"VariableDeclaration","scope":10787,"src":"47907:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10779,"name":"uint256","nodeType":"ElementaryTypeName","src":"47907:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10782,"mutability":"mutable","name":"decimals","nameLocation":"47930:8:17","nodeType":"VariableDeclaration","scope":10787,"src":"47922:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10781,"name":"uint256","nodeType":"ElementaryTypeName","src":"47922:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10784,"mutability":"mutable","name":"error","nameLocation":"47956:5:17","nodeType":"VariableDeclaration","scope":10787,"src":"47940:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10783,"name":"string","nodeType":"ElementaryTypeName","src":"47940:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47892:70:17"},"returnParameters":{"id":10786,"nodeType":"ParameterList","parameters":[],"src":"47976:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10797,"nodeType":"FunctionDefinition","src":"48085:84:17","nodes":[],"documentation":{"id":10788,"nodeType":"StructuredDocumentation","src":"47983:97:17","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"48094:15:17","parameters":{"id":10795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10790,"mutability":"mutable","name":"left","nameLocation":"48117:4:17","nodeType":"VariableDeclaration","scope":10797,"src":"48110:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10789,"name":"int256","nodeType":"ElementaryTypeName","src":"48110:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10792,"mutability":"mutable","name":"right","nameLocation":"48130:5:17","nodeType":"VariableDeclaration","scope":10797,"src":"48123:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10791,"name":"int256","nodeType":"ElementaryTypeName","src":"48123:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10794,"mutability":"mutable","name":"decimals","nameLocation":"48145:8:17","nodeType":"VariableDeclaration","scope":10797,"src":"48137:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10793,"name":"uint256","nodeType":"ElementaryTypeName","src":"48137:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48109:45:17"},"returnParameters":{"id":10796,"nodeType":"ParameterList","parameters":[],"src":"48168:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10809,"nodeType":"FunctionDefinition","src":"48339:107:17","nodes":[],"documentation":{"id":10798,"nodeType":"StructuredDocumentation","src":"48175:159:17","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"48348:15:17","parameters":{"id":10807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10800,"mutability":"mutable","name":"left","nameLocation":"48371:4:17","nodeType":"VariableDeclaration","scope":10809,"src":"48364:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10799,"name":"int256","nodeType":"ElementaryTypeName","src":"48364:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10802,"mutability":"mutable","name":"right","nameLocation":"48384:5:17","nodeType":"VariableDeclaration","scope":10809,"src":"48377:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10801,"name":"int256","nodeType":"ElementaryTypeName","src":"48377:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10804,"mutability":"mutable","name":"decimals","nameLocation":"48399:8:17","nodeType":"VariableDeclaration","scope":10809,"src":"48391:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10803,"name":"uint256","nodeType":"ElementaryTypeName","src":"48391:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10806,"mutability":"mutable","name":"error","nameLocation":"48425:5:17","nodeType":"VariableDeclaration","scope":10809,"src":"48409:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10805,"name":"string","nodeType":"ElementaryTypeName","src":"48409:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48363:68:17"},"returnParameters":{"id":10808,"nodeType":"ParameterList","parameters":[],"src":"48445:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10817,"nodeType":"FunctionDefinition","src":"48502:55:17","nodes":[],"documentation":{"id":10810,"nodeType":"StructuredDocumentation","src":"48452:45:17","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48511:8:17","parameters":{"id":10815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10812,"mutability":"mutable","name":"left","nameLocation":"48525:4:17","nodeType":"VariableDeclaration","scope":10817,"src":"48520:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10811,"name":"bool","nodeType":"ElementaryTypeName","src":"48520:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10814,"mutability":"mutable","name":"right","nameLocation":"48536:5:17","nodeType":"VariableDeclaration","scope":10817,"src":"48531:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10813,"name":"bool","nodeType":"ElementaryTypeName","src":"48531:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48519:23:17"},"returnParameters":{"id":10816,"nodeType":"ParameterList","parameters":[],"src":"48556:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10827,"nodeType":"FunctionDefinition","src":"48670:78:17","nodes":[],"documentation":{"id":10818,"nodeType":"StructuredDocumentation","src":"48563:102:17","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48679:8:17","parameters":{"id":10825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10820,"mutability":"mutable","name":"left","nameLocation":"48693:4:17","nodeType":"VariableDeclaration","scope":10827,"src":"48688:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10819,"name":"bool","nodeType":"ElementaryTypeName","src":"48688:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10822,"mutability":"mutable","name":"right","nameLocation":"48704:5:17","nodeType":"VariableDeclaration","scope":10827,"src":"48699:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10821,"name":"bool","nodeType":"ElementaryTypeName","src":"48699:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10824,"mutability":"mutable","name":"error","nameLocation":"48727:5:17","nodeType":"VariableDeclaration","scope":10827,"src":"48711:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10823,"name":"string","nodeType":"ElementaryTypeName","src":"48711:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48687:46:17"},"returnParameters":{"id":10826,"nodeType":"ParameterList","parameters":[],"src":"48747:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10835,"nodeType":"FunctionDefinition","src":"48806:77:17","nodes":[],"documentation":{"id":10828,"nodeType":"StructuredDocumentation","src":"48754:47:17","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48815:8:17","parameters":{"id":10833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10830,"mutability":"mutable","name":"left","nameLocation":"48840:4:17","nodeType":"VariableDeclaration","scope":10835,"src":"48824:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10829,"name":"string","nodeType":"ElementaryTypeName","src":"48824:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10832,"mutability":"mutable","name":"right","nameLocation":"48862:5:17","nodeType":"VariableDeclaration","scope":10835,"src":"48846:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10831,"name":"string","nodeType":"ElementaryTypeName","src":"48846:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48823:45:17"},"returnParameters":{"id":10834,"nodeType":"ParameterList","parameters":[],"src":"48882:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10845,"nodeType":"FunctionDefinition","src":"48998:100:17","nodes":[],"documentation":{"id":10836,"nodeType":"StructuredDocumentation","src":"48889:104:17","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49007:8:17","parameters":{"id":10843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10838,"mutability":"mutable","name":"left","nameLocation":"49032:4:17","nodeType":"VariableDeclaration","scope":10845,"src":"49016:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10837,"name":"string","nodeType":"ElementaryTypeName","src":"49016:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10840,"mutability":"mutable","name":"right","nameLocation":"49054:5:17","nodeType":"VariableDeclaration","scope":10845,"src":"49038:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10839,"name":"string","nodeType":"ElementaryTypeName","src":"49038:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10842,"mutability":"mutable","name":"error","nameLocation":"49077:5:17","nodeType":"VariableDeclaration","scope":10845,"src":"49061:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10841,"name":"string","nodeType":"ElementaryTypeName","src":"49061:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49015:68:17"},"returnParameters":{"id":10844,"nodeType":"ParameterList","parameters":[],"src":"49097:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10853,"nodeType":"FunctionDefinition","src":"49155:75:17","nodes":[],"documentation":{"id":10846,"nodeType":"StructuredDocumentation","src":"49104:46:17","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49164:8:17","parameters":{"id":10851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10848,"mutability":"mutable","name":"left","nameLocation":"49188:4:17","nodeType":"VariableDeclaration","scope":10853,"src":"49173:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10847,"name":"bytes","nodeType":"ElementaryTypeName","src":"49173:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10850,"mutability":"mutable","name":"right","nameLocation":"49209:5:17","nodeType":"VariableDeclaration","scope":10853,"src":"49194:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10849,"name":"bytes","nodeType":"ElementaryTypeName","src":"49194:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49172:43:17"},"returnParameters":{"id":10852,"nodeType":"ParameterList","parameters":[],"src":"49229:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10863,"nodeType":"FunctionDefinition","src":"49344:98:17","nodes":[],"documentation":{"id":10854,"nodeType":"StructuredDocumentation","src":"49236:103:17","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49353:8:17","parameters":{"id":10861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10856,"mutability":"mutable","name":"left","nameLocation":"49377:4:17","nodeType":"VariableDeclaration","scope":10863,"src":"49362:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10855,"name":"bytes","nodeType":"ElementaryTypeName","src":"49362:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10858,"mutability":"mutable","name":"right","nameLocation":"49398:5:17","nodeType":"VariableDeclaration","scope":10863,"src":"49383:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10857,"name":"bytes","nodeType":"ElementaryTypeName","src":"49383:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10860,"mutability":"mutable","name":"error","nameLocation":"49421:5:17","nodeType":"VariableDeclaration","scope":10863,"src":"49405:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10859,"name":"string","nodeType":"ElementaryTypeName","src":"49405:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49361:66:17"},"returnParameters":{"id":10862,"nodeType":"ParameterList","parameters":[],"src":"49441:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10873,"nodeType":"FunctionDefinition","src":"49508:77:17","nodes":[],"documentation":{"id":10864,"nodeType":"StructuredDocumentation","src":"49448:55:17","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49517:8:17","parameters":{"id":10871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10867,"mutability":"mutable","name":"left","nameLocation":"49542:4:17","nodeType":"VariableDeclaration","scope":10873,"src":"49526:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":10865,"name":"bool","nodeType":"ElementaryTypeName","src":"49526:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10866,"nodeType":"ArrayTypeName","src":"49526:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":10870,"mutability":"mutable","name":"right","nameLocation":"49564:5:17","nodeType":"VariableDeclaration","scope":10873,"src":"49548:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":10868,"name":"bool","nodeType":"ElementaryTypeName","src":"49548:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10869,"nodeType":"ArrayTypeName","src":"49548:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"49525:45:17"},"returnParameters":{"id":10872,"nodeType":"ParameterList","parameters":[],"src":"49584:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10885,"nodeType":"FunctionDefinition","src":"49708:100:17","nodes":[],"documentation":{"id":10874,"nodeType":"StructuredDocumentation","src":"49591:112:17","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49717:8:17","parameters":{"id":10883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10877,"mutability":"mutable","name":"left","nameLocation":"49742:4:17","nodeType":"VariableDeclaration","scope":10885,"src":"49726:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":10875,"name":"bool","nodeType":"ElementaryTypeName","src":"49726:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10876,"nodeType":"ArrayTypeName","src":"49726:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":10880,"mutability":"mutable","name":"right","nameLocation":"49764:5:17","nodeType":"VariableDeclaration","scope":10885,"src":"49748:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":10878,"name":"bool","nodeType":"ElementaryTypeName","src":"49748:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10879,"nodeType":"ArrayTypeName","src":"49748:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":10882,"mutability":"mutable","name":"error","nameLocation":"49787:5:17","nodeType":"VariableDeclaration","scope":10885,"src":"49771:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10881,"name":"string","nodeType":"ElementaryTypeName","src":"49771:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49725:68:17"},"returnParameters":{"id":10884,"nodeType":"ParameterList","parameters":[],"src":"49807:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10895,"nodeType":"FunctionDefinition","src":"49876:83:17","nodes":[],"documentation":{"id":10886,"nodeType":"StructuredDocumentation","src":"49814:57:17","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49885:8:17","parameters":{"id":10893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10889,"mutability":"mutable","name":"left","nameLocation":"49913:4:17","nodeType":"VariableDeclaration","scope":10895,"src":"49894:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10887,"name":"uint256","nodeType":"ElementaryTypeName","src":"49894:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10888,"nodeType":"ArrayTypeName","src":"49894:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10892,"mutability":"mutable","name":"right","nameLocation":"49938:5:17","nodeType":"VariableDeclaration","scope":10895,"src":"49919:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10890,"name":"uint256","nodeType":"ElementaryTypeName","src":"49919:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10891,"nodeType":"ArrayTypeName","src":"49919:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"49893:51:17"},"returnParameters":{"id":10894,"nodeType":"ParameterList","parameters":[],"src":"49958:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10907,"nodeType":"FunctionDefinition","src":"50085:106:17","nodes":[],"documentation":{"id":10896,"nodeType":"StructuredDocumentation","src":"49965:115:17","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50094:8:17","parameters":{"id":10905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10899,"mutability":"mutable","name":"left","nameLocation":"50122:4:17","nodeType":"VariableDeclaration","scope":10907,"src":"50103:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10897,"name":"uint256","nodeType":"ElementaryTypeName","src":"50103:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10898,"nodeType":"ArrayTypeName","src":"50103:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10902,"mutability":"mutable","name":"right","nameLocation":"50147:5:17","nodeType":"VariableDeclaration","scope":10907,"src":"50128:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10900,"name":"uint256","nodeType":"ElementaryTypeName","src":"50128:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10901,"nodeType":"ArrayTypeName","src":"50128:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10904,"mutability":"mutable","name":"error","nameLocation":"50170:5:17","nodeType":"VariableDeclaration","scope":10907,"src":"50154:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10903,"name":"string","nodeType":"ElementaryTypeName","src":"50154:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50102:74:17"},"returnParameters":{"id":10906,"nodeType":"ParameterList","parameters":[],"src":"50190:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10917,"nodeType":"FunctionDefinition","src":"50259:81:17","nodes":[],"documentation":{"id":10908,"nodeType":"StructuredDocumentation","src":"50197:57:17","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50268:8:17","parameters":{"id":10915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10911,"mutability":"mutable","name":"left","nameLocation":"50295:4:17","nodeType":"VariableDeclaration","scope":10917,"src":"50277:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":10909,"name":"int256","nodeType":"ElementaryTypeName","src":"50277:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":10910,"nodeType":"ArrayTypeName","src":"50277:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":10914,"mutability":"mutable","name":"right","nameLocation":"50319:5:17","nodeType":"VariableDeclaration","scope":10917,"src":"50301:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":10912,"name":"int256","nodeType":"ElementaryTypeName","src":"50301:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":10913,"nodeType":"ArrayTypeName","src":"50301:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"50276:49:17"},"returnParameters":{"id":10916,"nodeType":"ParameterList","parameters":[],"src":"50339:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10929,"nodeType":"FunctionDefinition","src":"50465:104:17","nodes":[],"documentation":{"id":10918,"nodeType":"StructuredDocumentation","src":"50346:114:17","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50474:8:17","parameters":{"id":10927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10921,"mutability":"mutable","name":"left","nameLocation":"50501:4:17","nodeType":"VariableDeclaration","scope":10929,"src":"50483:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":10919,"name":"int256","nodeType":"ElementaryTypeName","src":"50483:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":10920,"nodeType":"ArrayTypeName","src":"50483:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":10924,"mutability":"mutable","name":"right","nameLocation":"50525:5:17","nodeType":"VariableDeclaration","scope":10929,"src":"50507:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":10922,"name":"int256","nodeType":"ElementaryTypeName","src":"50507:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":10923,"nodeType":"ArrayTypeName","src":"50507:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":10926,"mutability":"mutable","name":"error","nameLocation":"50548:5:17","nodeType":"VariableDeclaration","scope":10929,"src":"50532:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10925,"name":"string","nodeType":"ElementaryTypeName","src":"50532:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50482:72:17"},"returnParameters":{"id":10928,"nodeType":"ParameterList","parameters":[],"src":"50568:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10937,"nodeType":"FunctionDefinition","src":"50628:61:17","nodes":[],"documentation":{"id":10930,"nodeType":"StructuredDocumentation","src":"50575:48:17","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50637:8:17","parameters":{"id":10935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10932,"mutability":"mutable","name":"left","nameLocation":"50654:4:17","nodeType":"VariableDeclaration","scope":10937,"src":"50646:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10931,"name":"uint256","nodeType":"ElementaryTypeName","src":"50646:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10934,"mutability":"mutable","name":"right","nameLocation":"50668:5:17","nodeType":"VariableDeclaration","scope":10937,"src":"50660:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10933,"name":"uint256","nodeType":"ElementaryTypeName","src":"50660:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50645:29:17"},"returnParameters":{"id":10936,"nodeType":"ParameterList","parameters":[],"src":"50688:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10947,"nodeType":"FunctionDefinition","src":"50758:83:17","nodes":[],"documentation":{"id":10938,"nodeType":"StructuredDocumentation","src":"50695:58:17","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50767:8:17","parameters":{"id":10945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10941,"mutability":"mutable","name":"left","nameLocation":"50795:4:17","nodeType":"VariableDeclaration","scope":10947,"src":"50776:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10939,"name":"address","nodeType":"ElementaryTypeName","src":"50776:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10940,"nodeType":"ArrayTypeName","src":"50776:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":10944,"mutability":"mutable","name":"right","nameLocation":"50820:5:17","nodeType":"VariableDeclaration","scope":10947,"src":"50801:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10942,"name":"address","nodeType":"ElementaryTypeName","src":"50801:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10943,"nodeType":"ArrayTypeName","src":"50801:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"50775:51:17"},"returnParameters":{"id":10946,"nodeType":"ParameterList","parameters":[],"src":"50840:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10959,"nodeType":"FunctionDefinition","src":"50967:106:17","nodes":[],"documentation":{"id":10948,"nodeType":"StructuredDocumentation","src":"50847:115:17","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50976:8:17","parameters":{"id":10957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10951,"mutability":"mutable","name":"left","nameLocation":"51004:4:17","nodeType":"VariableDeclaration","scope":10959,"src":"50985:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10949,"name":"address","nodeType":"ElementaryTypeName","src":"50985:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10950,"nodeType":"ArrayTypeName","src":"50985:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":10954,"mutability":"mutable","name":"right","nameLocation":"51029:5:17","nodeType":"VariableDeclaration","scope":10959,"src":"51010:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10952,"name":"address","nodeType":"ElementaryTypeName","src":"51010:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10953,"nodeType":"ArrayTypeName","src":"51010:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":10956,"mutability":"mutable","name":"error","nameLocation":"51052:5:17","nodeType":"VariableDeclaration","scope":10959,"src":"51036:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10955,"name":"string","nodeType":"ElementaryTypeName","src":"51036:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50984:74:17"},"returnParameters":{"id":10958,"nodeType":"ParameterList","parameters":[],"src":"51072:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10969,"nodeType":"FunctionDefinition","src":"51142:83:17","nodes":[],"documentation":{"id":10960,"nodeType":"StructuredDocumentation","src":"51079:58:17","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51151:8:17","parameters":{"id":10967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10963,"mutability":"mutable","name":"left","nameLocation":"51179:4:17","nodeType":"VariableDeclaration","scope":10969,"src":"51160:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51160:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10962,"nodeType":"ArrayTypeName","src":"51160:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":10966,"mutability":"mutable","name":"right","nameLocation":"51204:5:17","nodeType":"VariableDeclaration","scope":10969,"src":"51185:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51185:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10965,"nodeType":"ArrayTypeName","src":"51185:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"51159:51:17"},"returnParameters":{"id":10968,"nodeType":"ParameterList","parameters":[],"src":"51224:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10981,"nodeType":"FunctionDefinition","src":"51351:106:17","nodes":[],"documentation":{"id":10970,"nodeType":"StructuredDocumentation","src":"51231:115:17","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51360:8:17","parameters":{"id":10979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10973,"mutability":"mutable","name":"left","nameLocation":"51388:4:17","nodeType":"VariableDeclaration","scope":10981,"src":"51369:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51369:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10972,"nodeType":"ArrayTypeName","src":"51369:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":10976,"mutability":"mutable","name":"right","nameLocation":"51413:5:17","nodeType":"VariableDeclaration","scope":10981,"src":"51394:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51394:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10975,"nodeType":"ArrayTypeName","src":"51394:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":10978,"mutability":"mutable","name":"error","nameLocation":"51436:5:17","nodeType":"VariableDeclaration","scope":10981,"src":"51420:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10977,"name":"string","nodeType":"ElementaryTypeName","src":"51420:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51368:74:17"},"returnParameters":{"id":10980,"nodeType":"ParameterList","parameters":[],"src":"51456:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":10991,"nodeType":"FunctionDefinition","src":"51525:81:17","nodes":[],"documentation":{"id":10982,"nodeType":"StructuredDocumentation","src":"51463:57:17","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51534:8:17","parameters":{"id":10989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10985,"mutability":"mutable","name":"left","nameLocation":"51561:4:17","nodeType":"VariableDeclaration","scope":10991,"src":"51543:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":10983,"name":"string","nodeType":"ElementaryTypeName","src":"51543:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10984,"nodeType":"ArrayTypeName","src":"51543:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":10988,"mutability":"mutable","name":"right","nameLocation":"51585:5:17","nodeType":"VariableDeclaration","scope":10991,"src":"51567:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":10986,"name":"string","nodeType":"ElementaryTypeName","src":"51567:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10987,"nodeType":"ArrayTypeName","src":"51567:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"51542:49:17"},"returnParameters":{"id":10990,"nodeType":"ParameterList","parameters":[],"src":"51605:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11003,"nodeType":"FunctionDefinition","src":"51731:104:17","nodes":[],"documentation":{"id":10992,"nodeType":"StructuredDocumentation","src":"51612:114:17","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51740:8:17","parameters":{"id":11001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10995,"mutability":"mutable","name":"left","nameLocation":"51767:4:17","nodeType":"VariableDeclaration","scope":11003,"src":"51749:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":10993,"name":"string","nodeType":"ElementaryTypeName","src":"51749:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10994,"nodeType":"ArrayTypeName","src":"51749:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":10998,"mutability":"mutable","name":"right","nameLocation":"51791:5:17","nodeType":"VariableDeclaration","scope":11003,"src":"51773:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":10996,"name":"string","nodeType":"ElementaryTypeName","src":"51773:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10997,"nodeType":"ArrayTypeName","src":"51773:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":11000,"mutability":"mutable","name":"error","nameLocation":"51814:5:17","nodeType":"VariableDeclaration","scope":11003,"src":"51798:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10999,"name":"string","nodeType":"ElementaryTypeName","src":"51798:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51748:72:17"},"returnParameters":{"id":11002,"nodeType":"ParameterList","parameters":[],"src":"51834:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11013,"nodeType":"FunctionDefinition","src":"51902:79:17","nodes":[],"documentation":{"id":11004,"nodeType":"StructuredDocumentation","src":"51841:56:17","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51911:8:17","parameters":{"id":11011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11007,"mutability":"mutable","name":"left","nameLocation":"51937:4:17","nodeType":"VariableDeclaration","scope":11013,"src":"51920:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":11005,"name":"bytes","nodeType":"ElementaryTypeName","src":"51920:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":11006,"nodeType":"ArrayTypeName","src":"51920:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":11010,"mutability":"mutable","name":"right","nameLocation":"51960:5:17","nodeType":"VariableDeclaration","scope":11013,"src":"51943:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":11008,"name":"bytes","nodeType":"ElementaryTypeName","src":"51943:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":11009,"nodeType":"ArrayTypeName","src":"51943:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"51919:47:17"},"returnParameters":{"id":11012,"nodeType":"ParameterList","parameters":[],"src":"51980:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11025,"nodeType":"FunctionDefinition","src":"52105:102:17","nodes":[],"documentation":{"id":11014,"nodeType":"StructuredDocumentation","src":"51987:113:17","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52114:8:17","parameters":{"id":11023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11017,"mutability":"mutable","name":"left","nameLocation":"52140:4:17","nodeType":"VariableDeclaration","scope":11025,"src":"52123:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":11015,"name":"bytes","nodeType":"ElementaryTypeName","src":"52123:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":11016,"nodeType":"ArrayTypeName","src":"52123:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":11020,"mutability":"mutable","name":"right","nameLocation":"52163:5:17","nodeType":"VariableDeclaration","scope":11025,"src":"52146:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":11018,"name":"bytes","nodeType":"ElementaryTypeName","src":"52146:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":11019,"nodeType":"ArrayTypeName","src":"52146:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":11022,"mutability":"mutable","name":"error","nameLocation":"52186:5:17","nodeType":"VariableDeclaration","scope":11025,"src":"52170:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11021,"name":"string","nodeType":"ElementaryTypeName","src":"52170:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52122:70:17"},"returnParameters":{"id":11024,"nodeType":"ParameterList","parameters":[],"src":"52206:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11035,"nodeType":"FunctionDefinition","src":"52323:84:17","nodes":[],"documentation":{"id":11026,"nodeType":"StructuredDocumentation","src":"52213:105:17","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52332:8:17","parameters":{"id":11033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11028,"mutability":"mutable","name":"left","nameLocation":"52349:4:17","nodeType":"VariableDeclaration","scope":11035,"src":"52341:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11027,"name":"uint256","nodeType":"ElementaryTypeName","src":"52341:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11030,"mutability":"mutable","name":"right","nameLocation":"52363:5:17","nodeType":"VariableDeclaration","scope":11035,"src":"52355:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11029,"name":"uint256","nodeType":"ElementaryTypeName","src":"52355:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11032,"mutability":"mutable","name":"error","nameLocation":"52386:5:17","nodeType":"VariableDeclaration","scope":11035,"src":"52370:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11031,"name":"string","nodeType":"ElementaryTypeName","src":"52370:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52340:52:17"},"returnParameters":{"id":11034,"nodeType":"ParameterList","parameters":[],"src":"52406:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11043,"nodeType":"FunctionDefinition","src":"52465:59:17","nodes":[],"documentation":{"id":11036,"nodeType":"StructuredDocumentation","src":"52413:47:17","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52474:8:17","parameters":{"id":11041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11038,"mutability":"mutable","name":"left","nameLocation":"52490:4:17","nodeType":"VariableDeclaration","scope":11043,"src":"52483:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11037,"name":"int256","nodeType":"ElementaryTypeName","src":"52483:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11040,"mutability":"mutable","name":"right","nameLocation":"52503:5:17","nodeType":"VariableDeclaration","scope":11043,"src":"52496:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11039,"name":"int256","nodeType":"ElementaryTypeName","src":"52496:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"52482:27:17"},"returnParameters":{"id":11042,"nodeType":"ParameterList","parameters":[],"src":"52523:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11053,"nodeType":"FunctionDefinition","src":"52639:82:17","nodes":[],"documentation":{"id":11044,"nodeType":"StructuredDocumentation","src":"52530:104:17","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52648:8:17","parameters":{"id":11051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11046,"mutability":"mutable","name":"left","nameLocation":"52664:4:17","nodeType":"VariableDeclaration","scope":11053,"src":"52657:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11045,"name":"int256","nodeType":"ElementaryTypeName","src":"52657:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11048,"mutability":"mutable","name":"right","nameLocation":"52677:5:17","nodeType":"VariableDeclaration","scope":11053,"src":"52670:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11047,"name":"int256","nodeType":"ElementaryTypeName","src":"52670:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11050,"mutability":"mutable","name":"error","nameLocation":"52700:5:17","nodeType":"VariableDeclaration","scope":11053,"src":"52684:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11049,"name":"string","nodeType":"ElementaryTypeName","src":"52684:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52656:50:17"},"returnParameters":{"id":11052,"nodeType":"ParameterList","parameters":[],"src":"52720:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11061,"nodeType":"FunctionDefinition","src":"52780:61:17","nodes":[],"documentation":{"id":11054,"nodeType":"StructuredDocumentation","src":"52727:48:17","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52789:8:17","parameters":{"id":11059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11056,"mutability":"mutable","name":"left","nameLocation":"52806:4:17","nodeType":"VariableDeclaration","scope":11061,"src":"52798:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11055,"name":"address","nodeType":"ElementaryTypeName","src":"52798:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11058,"mutability":"mutable","name":"right","nameLocation":"52820:5:17","nodeType":"VariableDeclaration","scope":11061,"src":"52812:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11057,"name":"address","nodeType":"ElementaryTypeName","src":"52812:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"52797:29:17"},"returnParameters":{"id":11060,"nodeType":"ParameterList","parameters":[],"src":"52840:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11071,"nodeType":"FunctionDefinition","src":"52957:84:17","nodes":[],"documentation":{"id":11062,"nodeType":"StructuredDocumentation","src":"52847:105:17","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52966:8:17","parameters":{"id":11069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11064,"mutability":"mutable","name":"left","nameLocation":"52983:4:17","nodeType":"VariableDeclaration","scope":11071,"src":"52975:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11063,"name":"address","nodeType":"ElementaryTypeName","src":"52975:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11066,"mutability":"mutable","name":"right","nameLocation":"52997:5:17","nodeType":"VariableDeclaration","scope":11071,"src":"52989:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11065,"name":"address","nodeType":"ElementaryTypeName","src":"52989:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11068,"mutability":"mutable","name":"error","nameLocation":"53020:5:17","nodeType":"VariableDeclaration","scope":11071,"src":"53004:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11067,"name":"string","nodeType":"ElementaryTypeName","src":"53004:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52974:52:17"},"returnParameters":{"id":11070,"nodeType":"ParameterList","parameters":[],"src":"53040:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11079,"nodeType":"FunctionDefinition","src":"53100:61:17","nodes":[],"documentation":{"id":11072,"nodeType":"StructuredDocumentation","src":"53047:48:17","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53109:8:17","parameters":{"id":11077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11074,"mutability":"mutable","name":"left","nameLocation":"53126:4:17","nodeType":"VariableDeclaration","scope":11079,"src":"53118:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53118:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11076,"mutability":"mutable","name":"right","nameLocation":"53140:5:17","nodeType":"VariableDeclaration","scope":11079,"src":"53132:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53132:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"53117:29:17"},"returnParameters":{"id":11078,"nodeType":"ParameterList","parameters":[],"src":"53160:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11089,"nodeType":"FunctionDefinition","src":"53277:84:17","nodes":[],"documentation":{"id":11080,"nodeType":"StructuredDocumentation","src":"53167:105:17","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53286:8:17","parameters":{"id":11087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11082,"mutability":"mutable","name":"left","nameLocation":"53303:4:17","nodeType":"VariableDeclaration","scope":11089,"src":"53295:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53295:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11084,"mutability":"mutable","name":"right","nameLocation":"53317:5:17","nodeType":"VariableDeclaration","scope":11089,"src":"53309:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53309:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11086,"mutability":"mutable","name":"error","nameLocation":"53340:5:17","nodeType":"VariableDeclaration","scope":11089,"src":"53324:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11085,"name":"string","nodeType":"ElementaryTypeName","src":"53324:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53294:52:17"},"returnParameters":{"id":11088,"nodeType":"ParameterList","parameters":[],"src":"53360:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11095,"nodeType":"FunctionDefinition","src":"53418:51:17","nodes":[],"documentation":{"id":11090,"nodeType":"StructuredDocumentation","src":"53367:46:17","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"53427:11:17","parameters":{"id":11093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11092,"mutability":"mutable","name":"condition","nameLocation":"53444:9:17","nodeType":"VariableDeclaration","scope":11095,"src":"53439:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11091,"name":"bool","nodeType":"ElementaryTypeName","src":"53439:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"53438:16:17"},"returnParameters":{"id":11094,"nodeType":"ParameterList","parameters":[],"src":"53468:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11103,"nodeType":"FunctionDefinition","src":"53583:74:17","nodes":[],"documentation":{"id":11096,"nodeType":"StructuredDocumentation","src":"53475:103:17","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"53592:11:17","parameters":{"id":11101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11098,"mutability":"mutable","name":"condition","nameLocation":"53609:9:17","nodeType":"VariableDeclaration","scope":11103,"src":"53604:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11097,"name":"bool","nodeType":"ElementaryTypeName","src":"53604:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11100,"mutability":"mutable","name":"error","nameLocation":"53636:5:17","nodeType":"VariableDeclaration","scope":11103,"src":"53620:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11099,"name":"string","nodeType":"ElementaryTypeName","src":"53620:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53603:39:17"},"returnParameters":{"id":11102,"nodeType":"ParameterList","parameters":[],"src":"53656:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11113,"nodeType":"FunctionDefinition","src":"53818:86:17","nodes":[],"documentation":{"id":11104,"nodeType":"StructuredDocumentation","src":"53663:150:17","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"53827:15:17","parameters":{"id":11111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11106,"mutability":"mutable","name":"left","nameLocation":"53851:4:17","nodeType":"VariableDeclaration","scope":11113,"src":"53843:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11105,"name":"uint256","nodeType":"ElementaryTypeName","src":"53843:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11108,"mutability":"mutable","name":"right","nameLocation":"53865:5:17","nodeType":"VariableDeclaration","scope":11113,"src":"53857:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11107,"name":"uint256","nodeType":"ElementaryTypeName","src":"53857:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11110,"mutability":"mutable","name":"decimals","nameLocation":"53880:8:17","nodeType":"VariableDeclaration","scope":11113,"src":"53872:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11109,"name":"uint256","nodeType":"ElementaryTypeName","src":"53872:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53842:47:17"},"returnParameters":{"id":11112,"nodeType":"ParameterList","parameters":[],"src":"53903:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11125,"nodeType":"FunctionDefinition","src":"54119:109:17","nodes":[],"documentation":{"id":11114,"nodeType":"StructuredDocumentation","src":"53910:204:17","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54128:15:17","parameters":{"id":11123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11116,"mutability":"mutable","name":"left","nameLocation":"54152:4:17","nodeType":"VariableDeclaration","scope":11125,"src":"54144:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11115,"name":"uint256","nodeType":"ElementaryTypeName","src":"54144:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11118,"mutability":"mutable","name":"right","nameLocation":"54166:5:17","nodeType":"VariableDeclaration","scope":11125,"src":"54158:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11117,"name":"uint256","nodeType":"ElementaryTypeName","src":"54158:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11120,"mutability":"mutable","name":"decimals","nameLocation":"54181:8:17","nodeType":"VariableDeclaration","scope":11125,"src":"54173:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11119,"name":"uint256","nodeType":"ElementaryTypeName","src":"54173:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11122,"mutability":"mutable","name":"error","nameLocation":"54207:5:17","nodeType":"VariableDeclaration","scope":11125,"src":"54191:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11121,"name":"string","nodeType":"ElementaryTypeName","src":"54191:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54143:70:17"},"returnParameters":{"id":11124,"nodeType":"ParameterList","parameters":[],"src":"54227:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11135,"nodeType":"FunctionDefinition","src":"54388:84:17","nodes":[],"documentation":{"id":11126,"nodeType":"StructuredDocumentation","src":"54234:149:17","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54397:15:17","parameters":{"id":11133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11128,"mutability":"mutable","name":"left","nameLocation":"54420:4:17","nodeType":"VariableDeclaration","scope":11135,"src":"54413:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11127,"name":"int256","nodeType":"ElementaryTypeName","src":"54413:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11130,"mutability":"mutable","name":"right","nameLocation":"54433:5:17","nodeType":"VariableDeclaration","scope":11135,"src":"54426:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11129,"name":"int256","nodeType":"ElementaryTypeName","src":"54426:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11132,"mutability":"mutable","name":"decimals","nameLocation":"54448:8:17","nodeType":"VariableDeclaration","scope":11135,"src":"54440:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11131,"name":"uint256","nodeType":"ElementaryTypeName","src":"54440:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54412:45:17"},"returnParameters":{"id":11134,"nodeType":"ParameterList","parameters":[],"src":"54471:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11147,"nodeType":"FunctionDefinition","src":"54686:107:17","nodes":[],"documentation":{"id":11136,"nodeType":"StructuredDocumentation","src":"54478:203:17","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54695:15:17","parameters":{"id":11145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11138,"mutability":"mutable","name":"left","nameLocation":"54718:4:17","nodeType":"VariableDeclaration","scope":11147,"src":"54711:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11137,"name":"int256","nodeType":"ElementaryTypeName","src":"54711:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11140,"mutability":"mutable","name":"right","nameLocation":"54731:5:17","nodeType":"VariableDeclaration","scope":11147,"src":"54724:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11139,"name":"int256","nodeType":"ElementaryTypeName","src":"54724:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11142,"mutability":"mutable","name":"decimals","nameLocation":"54746:8:17","nodeType":"VariableDeclaration","scope":11147,"src":"54738:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11141,"name":"uint256","nodeType":"ElementaryTypeName","src":"54738:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11144,"mutability":"mutable","name":"error","nameLocation":"54772:5:17","nodeType":"VariableDeclaration","scope":11147,"src":"54756:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11143,"name":"string","nodeType":"ElementaryTypeName","src":"54756:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54710:68:17"},"returnParameters":{"id":11146,"nodeType":"ParameterList","parameters":[],"src":"54792:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11155,"nodeType":"FunctionDefinition","src":"54897:61:17","nodes":[],"documentation":{"id":11148,"nodeType":"StructuredDocumentation","src":"54799:93:17","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"54906:8:17","parameters":{"id":11153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11150,"mutability":"mutable","name":"left","nameLocation":"54923:4:17","nodeType":"VariableDeclaration","scope":11155,"src":"54915:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11149,"name":"uint256","nodeType":"ElementaryTypeName","src":"54915:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11152,"mutability":"mutable","name":"right","nameLocation":"54937:5:17","nodeType":"VariableDeclaration","scope":11155,"src":"54929:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11151,"name":"uint256","nodeType":"ElementaryTypeName","src":"54929:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54914:29:17"},"returnParameters":{"id":11154,"nodeType":"ParameterList","parameters":[],"src":"54957:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11165,"nodeType":"FunctionDefinition","src":"55124:84:17","nodes":[],"documentation":{"id":11156,"nodeType":"StructuredDocumentation","src":"54964:155:17","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55133:8:17","parameters":{"id":11163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11158,"mutability":"mutable","name":"left","nameLocation":"55150:4:17","nodeType":"VariableDeclaration","scope":11165,"src":"55142:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11157,"name":"uint256","nodeType":"ElementaryTypeName","src":"55142:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11160,"mutability":"mutable","name":"right","nameLocation":"55164:5:17","nodeType":"VariableDeclaration","scope":11165,"src":"55156:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11159,"name":"uint256","nodeType":"ElementaryTypeName","src":"55156:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11162,"mutability":"mutable","name":"error","nameLocation":"55187:5:17","nodeType":"VariableDeclaration","scope":11165,"src":"55171:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11161,"name":"string","nodeType":"ElementaryTypeName","src":"55171:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55141:52:17"},"returnParameters":{"id":11164,"nodeType":"ParameterList","parameters":[],"src":"55207:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11173,"nodeType":"FunctionDefinition","src":"55311:59:17","nodes":[],"documentation":{"id":11166,"nodeType":"StructuredDocumentation","src":"55214:92:17","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55320:8:17","parameters":{"id":11171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11168,"mutability":"mutable","name":"left","nameLocation":"55336:4:17","nodeType":"VariableDeclaration","scope":11173,"src":"55329:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11167,"name":"int256","nodeType":"ElementaryTypeName","src":"55329:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11170,"mutability":"mutable","name":"right","nameLocation":"55349:5:17","nodeType":"VariableDeclaration","scope":11173,"src":"55342:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11169,"name":"int256","nodeType":"ElementaryTypeName","src":"55342:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"55328:27:17"},"returnParameters":{"id":11172,"nodeType":"ParameterList","parameters":[],"src":"55369:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11183,"nodeType":"FunctionDefinition","src":"55535:82:17","nodes":[],"documentation":{"id":11174,"nodeType":"StructuredDocumentation","src":"55376:154:17","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55544:8:17","parameters":{"id":11181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11176,"mutability":"mutable","name":"left","nameLocation":"55560:4:17","nodeType":"VariableDeclaration","scope":11183,"src":"55553:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11175,"name":"int256","nodeType":"ElementaryTypeName","src":"55553:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11178,"mutability":"mutable","name":"right","nameLocation":"55573:5:17","nodeType":"VariableDeclaration","scope":11183,"src":"55566:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11177,"name":"int256","nodeType":"ElementaryTypeName","src":"55566:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11180,"mutability":"mutable","name":"error","nameLocation":"55596:5:17","nodeType":"VariableDeclaration","scope":11183,"src":"55580:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11179,"name":"string","nodeType":"ElementaryTypeName","src":"55580:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55552:50:17"},"returnParameters":{"id":11182,"nodeType":"ParameterList","parameters":[],"src":"55616:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11193,"nodeType":"FunctionDefinition","src":"55766:86:17","nodes":[],"documentation":{"id":11184,"nodeType":"StructuredDocumentation","src":"55623:138:17","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"55775:15:17","parameters":{"id":11191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11186,"mutability":"mutable","name":"left","nameLocation":"55799:4:17","nodeType":"VariableDeclaration","scope":11193,"src":"55791:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11185,"name":"uint256","nodeType":"ElementaryTypeName","src":"55791:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11188,"mutability":"mutable","name":"right","nameLocation":"55813:5:17","nodeType":"VariableDeclaration","scope":11193,"src":"55805:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11187,"name":"uint256","nodeType":"ElementaryTypeName","src":"55805:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11190,"mutability":"mutable","name":"decimals","nameLocation":"55828:8:17","nodeType":"VariableDeclaration","scope":11193,"src":"55820:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11189,"name":"uint256","nodeType":"ElementaryTypeName","src":"55820:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55790:47:17"},"returnParameters":{"id":11192,"nodeType":"ParameterList","parameters":[],"src":"55851:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11205,"nodeType":"FunctionDefinition","src":"56055:109:17","nodes":[],"documentation":{"id":11194,"nodeType":"StructuredDocumentation","src":"55858:192:17","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56064:15:17","parameters":{"id":11203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11196,"mutability":"mutable","name":"left","nameLocation":"56088:4:17","nodeType":"VariableDeclaration","scope":11205,"src":"56080:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11195,"name":"uint256","nodeType":"ElementaryTypeName","src":"56080:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11198,"mutability":"mutable","name":"right","nameLocation":"56102:5:17","nodeType":"VariableDeclaration","scope":11205,"src":"56094:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11197,"name":"uint256","nodeType":"ElementaryTypeName","src":"56094:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11200,"mutability":"mutable","name":"decimals","nameLocation":"56117:8:17","nodeType":"VariableDeclaration","scope":11205,"src":"56109:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11199,"name":"uint256","nodeType":"ElementaryTypeName","src":"56109:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11202,"mutability":"mutable","name":"error","nameLocation":"56143:5:17","nodeType":"VariableDeclaration","scope":11205,"src":"56127:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11201,"name":"string","nodeType":"ElementaryTypeName","src":"56127:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56079:70:17"},"returnParameters":{"id":11204,"nodeType":"ParameterList","parameters":[],"src":"56163:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11215,"nodeType":"FunctionDefinition","src":"56312:84:17","nodes":[],"documentation":{"id":11206,"nodeType":"StructuredDocumentation","src":"56170:137:17","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56321:15:17","parameters":{"id":11213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11208,"mutability":"mutable","name":"left","nameLocation":"56344:4:17","nodeType":"VariableDeclaration","scope":11215,"src":"56337:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11207,"name":"int256","nodeType":"ElementaryTypeName","src":"56337:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11210,"mutability":"mutable","name":"right","nameLocation":"56357:5:17","nodeType":"VariableDeclaration","scope":11215,"src":"56350:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11209,"name":"int256","nodeType":"ElementaryTypeName","src":"56350:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11212,"mutability":"mutable","name":"decimals","nameLocation":"56372:8:17","nodeType":"VariableDeclaration","scope":11215,"src":"56364:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11211,"name":"uint256","nodeType":"ElementaryTypeName","src":"56364:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56336:45:17"},"returnParameters":{"id":11214,"nodeType":"ParameterList","parameters":[],"src":"56395:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11227,"nodeType":"FunctionDefinition","src":"56598:107:17","nodes":[],"documentation":{"id":11216,"nodeType":"StructuredDocumentation","src":"56402:191:17","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56607:15:17","parameters":{"id":11225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11218,"mutability":"mutable","name":"left","nameLocation":"56630:4:17","nodeType":"VariableDeclaration","scope":11227,"src":"56623:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11217,"name":"int256","nodeType":"ElementaryTypeName","src":"56623:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11220,"mutability":"mutable","name":"right","nameLocation":"56643:5:17","nodeType":"VariableDeclaration","scope":11227,"src":"56636:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11219,"name":"int256","nodeType":"ElementaryTypeName","src":"56636:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11222,"mutability":"mutable","name":"decimals","nameLocation":"56658:8:17","nodeType":"VariableDeclaration","scope":11227,"src":"56650:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11221,"name":"uint256","nodeType":"ElementaryTypeName","src":"56650:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11224,"mutability":"mutable","name":"error","nameLocation":"56684:5:17","nodeType":"VariableDeclaration","scope":11227,"src":"56668:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11223,"name":"string","nodeType":"ElementaryTypeName","src":"56668:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56622:68:17"},"returnParameters":{"id":11226,"nodeType":"ParameterList","parameters":[],"src":"56704:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11235,"nodeType":"FunctionDefinition","src":"56797:61:17","nodes":[],"documentation":{"id":11228,"nodeType":"StructuredDocumentation","src":"56711:81:17","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"56806:8:17","parameters":{"id":11233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11230,"mutability":"mutable","name":"left","nameLocation":"56823:4:17","nodeType":"VariableDeclaration","scope":11235,"src":"56815:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11229,"name":"uint256","nodeType":"ElementaryTypeName","src":"56815:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11232,"mutability":"mutable","name":"right","nameLocation":"56837:5:17","nodeType":"VariableDeclaration","scope":11235,"src":"56829:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11231,"name":"uint256","nodeType":"ElementaryTypeName","src":"56829:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56814:29:17"},"returnParameters":{"id":11234,"nodeType":"ParameterList","parameters":[],"src":"56857:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11245,"nodeType":"FunctionDefinition","src":"57012:84:17","nodes":[],"documentation":{"id":11236,"nodeType":"StructuredDocumentation","src":"56864:143:17","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57021:8:17","parameters":{"id":11243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11238,"mutability":"mutable","name":"left","nameLocation":"57038:4:17","nodeType":"VariableDeclaration","scope":11245,"src":"57030:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11237,"name":"uint256","nodeType":"ElementaryTypeName","src":"57030:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11240,"mutability":"mutable","name":"right","nameLocation":"57052:5:17","nodeType":"VariableDeclaration","scope":11245,"src":"57044:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11239,"name":"uint256","nodeType":"ElementaryTypeName","src":"57044:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11242,"mutability":"mutable","name":"error","nameLocation":"57075:5:17","nodeType":"VariableDeclaration","scope":11245,"src":"57059:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11241,"name":"string","nodeType":"ElementaryTypeName","src":"57059:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57029:52:17"},"returnParameters":{"id":11244,"nodeType":"ParameterList","parameters":[],"src":"57095:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11253,"nodeType":"FunctionDefinition","src":"57187:59:17","nodes":[],"documentation":{"id":11246,"nodeType":"StructuredDocumentation","src":"57102:80:17","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57196:8:17","parameters":{"id":11251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11248,"mutability":"mutable","name":"left","nameLocation":"57212:4:17","nodeType":"VariableDeclaration","scope":11253,"src":"57205:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11247,"name":"int256","nodeType":"ElementaryTypeName","src":"57205:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11250,"mutability":"mutable","name":"right","nameLocation":"57225:5:17","nodeType":"VariableDeclaration","scope":11253,"src":"57218:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11249,"name":"int256","nodeType":"ElementaryTypeName","src":"57218:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"57204:27:17"},"returnParameters":{"id":11252,"nodeType":"ParameterList","parameters":[],"src":"57245:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11263,"nodeType":"FunctionDefinition","src":"57399:82:17","nodes":[],"documentation":{"id":11254,"nodeType":"StructuredDocumentation","src":"57252:142:17","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57408:8:17","parameters":{"id":11261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11256,"mutability":"mutable","name":"left","nameLocation":"57424:4:17","nodeType":"VariableDeclaration","scope":11263,"src":"57417:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11255,"name":"int256","nodeType":"ElementaryTypeName","src":"57417:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11258,"mutability":"mutable","name":"right","nameLocation":"57437:5:17","nodeType":"VariableDeclaration","scope":11263,"src":"57430:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11257,"name":"int256","nodeType":"ElementaryTypeName","src":"57430:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11260,"mutability":"mutable","name":"error","nameLocation":"57460:5:17","nodeType":"VariableDeclaration","scope":11263,"src":"57444:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11259,"name":"string","nodeType":"ElementaryTypeName","src":"57444:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57416:50:17"},"returnParameters":{"id":11262,"nodeType":"ParameterList","parameters":[],"src":"57480:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11273,"nodeType":"FunctionDefinition","src":"57639:86:17","nodes":[],"documentation":{"id":11264,"nodeType":"StructuredDocumentation","src":"57487:147:17","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"57648:15:17","parameters":{"id":11271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11266,"mutability":"mutable","name":"left","nameLocation":"57672:4:17","nodeType":"VariableDeclaration","scope":11273,"src":"57664:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11265,"name":"uint256","nodeType":"ElementaryTypeName","src":"57664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11268,"mutability":"mutable","name":"right","nameLocation":"57686:5:17","nodeType":"VariableDeclaration","scope":11273,"src":"57678:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11267,"name":"uint256","nodeType":"ElementaryTypeName","src":"57678:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11270,"mutability":"mutable","name":"decimals","nameLocation":"57701:8:17","nodeType":"VariableDeclaration","scope":11273,"src":"57693:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11269,"name":"uint256","nodeType":"ElementaryTypeName","src":"57693:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57663:47:17"},"returnParameters":{"id":11272,"nodeType":"ParameterList","parameters":[],"src":"57724:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11285,"nodeType":"FunctionDefinition","src":"57937:109:17","nodes":[],"documentation":{"id":11274,"nodeType":"StructuredDocumentation","src":"57731:201:17","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"57946:15:17","parameters":{"id":11283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11276,"mutability":"mutable","name":"left","nameLocation":"57970:4:17","nodeType":"VariableDeclaration","scope":11285,"src":"57962:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11275,"name":"uint256","nodeType":"ElementaryTypeName","src":"57962:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11278,"mutability":"mutable","name":"right","nameLocation":"57984:5:17","nodeType":"VariableDeclaration","scope":11285,"src":"57976:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11277,"name":"uint256","nodeType":"ElementaryTypeName","src":"57976:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11280,"mutability":"mutable","name":"decimals","nameLocation":"57999:8:17","nodeType":"VariableDeclaration","scope":11285,"src":"57991:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11279,"name":"uint256","nodeType":"ElementaryTypeName","src":"57991:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11282,"mutability":"mutable","name":"error","nameLocation":"58025:5:17","nodeType":"VariableDeclaration","scope":11285,"src":"58009:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11281,"name":"string","nodeType":"ElementaryTypeName","src":"58009:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57961:70:17"},"returnParameters":{"id":11284,"nodeType":"ParameterList","parameters":[],"src":"58045:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11295,"nodeType":"FunctionDefinition","src":"58203:84:17","nodes":[],"documentation":{"id":11286,"nodeType":"StructuredDocumentation","src":"58052:146:17","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"58212:15:17","parameters":{"id":11293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11288,"mutability":"mutable","name":"left","nameLocation":"58235:4:17","nodeType":"VariableDeclaration","scope":11295,"src":"58228:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11287,"name":"int256","nodeType":"ElementaryTypeName","src":"58228:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11290,"mutability":"mutable","name":"right","nameLocation":"58248:5:17","nodeType":"VariableDeclaration","scope":11295,"src":"58241:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11289,"name":"int256","nodeType":"ElementaryTypeName","src":"58241:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11292,"mutability":"mutable","name":"decimals","nameLocation":"58263:8:17","nodeType":"VariableDeclaration","scope":11295,"src":"58255:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11291,"name":"uint256","nodeType":"ElementaryTypeName","src":"58255:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58227:45:17"},"returnParameters":{"id":11294,"nodeType":"ParameterList","parameters":[],"src":"58286:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11307,"nodeType":"FunctionDefinition","src":"58498:107:17","nodes":[],"documentation":{"id":11296,"nodeType":"StructuredDocumentation","src":"58293:200:17","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"58507:15:17","parameters":{"id":11305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11298,"mutability":"mutable","name":"left","nameLocation":"58530:4:17","nodeType":"VariableDeclaration","scope":11307,"src":"58523:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11297,"name":"int256","nodeType":"ElementaryTypeName","src":"58523:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11300,"mutability":"mutable","name":"right","nameLocation":"58543:5:17","nodeType":"VariableDeclaration","scope":11307,"src":"58536:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11299,"name":"int256","nodeType":"ElementaryTypeName","src":"58536:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11302,"mutability":"mutable","name":"decimals","nameLocation":"58558:8:17","nodeType":"VariableDeclaration","scope":11307,"src":"58550:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11301,"name":"uint256","nodeType":"ElementaryTypeName","src":"58550:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11304,"mutability":"mutable","name":"error","nameLocation":"58584:5:17","nodeType":"VariableDeclaration","scope":11307,"src":"58568:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11303,"name":"string","nodeType":"ElementaryTypeName","src":"58568:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58522:68:17"},"returnParameters":{"id":11306,"nodeType":"ParameterList","parameters":[],"src":"58604:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11315,"nodeType":"FunctionDefinition","src":"58706:61:17","nodes":[],"documentation":{"id":11308,"nodeType":"StructuredDocumentation","src":"58611:90:17","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"58715:8:17","parameters":{"id":11313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11310,"mutability":"mutable","name":"left","nameLocation":"58732:4:17","nodeType":"VariableDeclaration","scope":11315,"src":"58724:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11309,"name":"uint256","nodeType":"ElementaryTypeName","src":"58724:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11312,"mutability":"mutable","name":"right","nameLocation":"58746:5:17","nodeType":"VariableDeclaration","scope":11315,"src":"58738:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11311,"name":"uint256","nodeType":"ElementaryTypeName","src":"58738:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58723:29:17"},"returnParameters":{"id":11314,"nodeType":"ParameterList","parameters":[],"src":"58766:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11325,"nodeType":"FunctionDefinition","src":"58930:84:17","nodes":[],"documentation":{"id":11316,"nodeType":"StructuredDocumentation","src":"58773:152:17","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"58939:8:17","parameters":{"id":11323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11318,"mutability":"mutable","name":"left","nameLocation":"58956:4:17","nodeType":"VariableDeclaration","scope":11325,"src":"58948:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11317,"name":"uint256","nodeType":"ElementaryTypeName","src":"58948:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11320,"mutability":"mutable","name":"right","nameLocation":"58970:5:17","nodeType":"VariableDeclaration","scope":11325,"src":"58962:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11319,"name":"uint256","nodeType":"ElementaryTypeName","src":"58962:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11322,"mutability":"mutable","name":"error","nameLocation":"58993:5:17","nodeType":"VariableDeclaration","scope":11325,"src":"58977:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11321,"name":"string","nodeType":"ElementaryTypeName","src":"58977:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58947:52:17"},"returnParameters":{"id":11324,"nodeType":"ParameterList","parameters":[],"src":"59013:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11333,"nodeType":"FunctionDefinition","src":"59114:59:17","nodes":[],"documentation":{"id":11326,"nodeType":"StructuredDocumentation","src":"59020:89:17","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"59123:8:17","parameters":{"id":11331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11328,"mutability":"mutable","name":"left","nameLocation":"59139:4:17","nodeType":"VariableDeclaration","scope":11333,"src":"59132:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11327,"name":"int256","nodeType":"ElementaryTypeName","src":"59132:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11330,"mutability":"mutable","name":"right","nameLocation":"59152:5:17","nodeType":"VariableDeclaration","scope":11333,"src":"59145:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11329,"name":"int256","nodeType":"ElementaryTypeName","src":"59145:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59131:27:17"},"returnParameters":{"id":11332,"nodeType":"ParameterList","parameters":[],"src":"59172:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11343,"nodeType":"FunctionDefinition","src":"59335:82:17","nodes":[],"documentation":{"id":11334,"nodeType":"StructuredDocumentation","src":"59179:151:17","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"59344:8:17","parameters":{"id":11341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11336,"mutability":"mutable","name":"left","nameLocation":"59360:4:17","nodeType":"VariableDeclaration","scope":11343,"src":"59353:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11335,"name":"int256","nodeType":"ElementaryTypeName","src":"59353:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11338,"mutability":"mutable","name":"right","nameLocation":"59373:5:17","nodeType":"VariableDeclaration","scope":11343,"src":"59366:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11337,"name":"int256","nodeType":"ElementaryTypeName","src":"59366:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11340,"mutability":"mutable","name":"error","nameLocation":"59396:5:17","nodeType":"VariableDeclaration","scope":11343,"src":"59380:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11339,"name":"string","nodeType":"ElementaryTypeName","src":"59380:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59352:50:17"},"returnParameters":{"id":11342,"nodeType":"ParameterList","parameters":[],"src":"59416:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11353,"nodeType":"FunctionDefinition","src":"59563:86:17","nodes":[],"documentation":{"id":11344,"nodeType":"StructuredDocumentation","src":"59423:135:17","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"59572:15:17","parameters":{"id":11351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11346,"mutability":"mutable","name":"left","nameLocation":"59596:4:17","nodeType":"VariableDeclaration","scope":11353,"src":"59588:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11345,"name":"uint256","nodeType":"ElementaryTypeName","src":"59588:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11348,"mutability":"mutable","name":"right","nameLocation":"59610:5:17","nodeType":"VariableDeclaration","scope":11353,"src":"59602:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11347,"name":"uint256","nodeType":"ElementaryTypeName","src":"59602:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11350,"mutability":"mutable","name":"decimals","nameLocation":"59625:8:17","nodeType":"VariableDeclaration","scope":11353,"src":"59617:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11349,"name":"uint256","nodeType":"ElementaryTypeName","src":"59617:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59587:47:17"},"returnParameters":{"id":11352,"nodeType":"ParameterList","parameters":[],"src":"59648:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11365,"nodeType":"FunctionDefinition","src":"59849:109:17","nodes":[],"documentation":{"id":11354,"nodeType":"StructuredDocumentation","src":"59655:189:17","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"59858:15:17","parameters":{"id":11363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11356,"mutability":"mutable","name":"left","nameLocation":"59882:4:17","nodeType":"VariableDeclaration","scope":11365,"src":"59874:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11355,"name":"uint256","nodeType":"ElementaryTypeName","src":"59874:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11358,"mutability":"mutable","name":"right","nameLocation":"59896:5:17","nodeType":"VariableDeclaration","scope":11365,"src":"59888:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11357,"name":"uint256","nodeType":"ElementaryTypeName","src":"59888:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11360,"mutability":"mutable","name":"decimals","nameLocation":"59911:8:17","nodeType":"VariableDeclaration","scope":11365,"src":"59903:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11359,"name":"uint256","nodeType":"ElementaryTypeName","src":"59903:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11362,"mutability":"mutable","name":"error","nameLocation":"59937:5:17","nodeType":"VariableDeclaration","scope":11365,"src":"59921:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11361,"name":"string","nodeType":"ElementaryTypeName","src":"59921:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59873:70:17"},"returnParameters":{"id":11364,"nodeType":"ParameterList","parameters":[],"src":"59957:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11375,"nodeType":"FunctionDefinition","src":"60103:84:17","nodes":[],"documentation":{"id":11366,"nodeType":"StructuredDocumentation","src":"59964:134:17","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"60112:15:17","parameters":{"id":11373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11368,"mutability":"mutable","name":"left","nameLocation":"60135:4:17","nodeType":"VariableDeclaration","scope":11375,"src":"60128:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11367,"name":"int256","nodeType":"ElementaryTypeName","src":"60128:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11370,"mutability":"mutable","name":"right","nameLocation":"60148:5:17","nodeType":"VariableDeclaration","scope":11375,"src":"60141:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11369,"name":"int256","nodeType":"ElementaryTypeName","src":"60141:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11372,"mutability":"mutable","name":"decimals","nameLocation":"60163:8:17","nodeType":"VariableDeclaration","scope":11375,"src":"60155:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11371,"name":"uint256","nodeType":"ElementaryTypeName","src":"60155:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60127:45:17"},"returnParameters":{"id":11374,"nodeType":"ParameterList","parameters":[],"src":"60186:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11387,"nodeType":"FunctionDefinition","src":"60386:107:17","nodes":[],"documentation":{"id":11376,"nodeType":"StructuredDocumentation","src":"60193:188:17","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"60395:15:17","parameters":{"id":11385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11378,"mutability":"mutable","name":"left","nameLocation":"60418:4:17","nodeType":"VariableDeclaration","scope":11387,"src":"60411:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11377,"name":"int256","nodeType":"ElementaryTypeName","src":"60411:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11380,"mutability":"mutable","name":"right","nameLocation":"60431:5:17","nodeType":"VariableDeclaration","scope":11387,"src":"60424:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11379,"name":"int256","nodeType":"ElementaryTypeName","src":"60424:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11382,"mutability":"mutable","name":"decimals","nameLocation":"60446:8:17","nodeType":"VariableDeclaration","scope":11387,"src":"60438:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11381,"name":"uint256","nodeType":"ElementaryTypeName","src":"60438:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11384,"mutability":"mutable","name":"error","nameLocation":"60472:5:17","nodeType":"VariableDeclaration","scope":11387,"src":"60456:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11383,"name":"string","nodeType":"ElementaryTypeName","src":"60456:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60410:68:17"},"returnParameters":{"id":11386,"nodeType":"ParameterList","parameters":[],"src":"60492:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11395,"nodeType":"FunctionDefinition","src":"60582:61:17","nodes":[],"documentation":{"id":11388,"nodeType":"StructuredDocumentation","src":"60499:78:17","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60591:8:17","parameters":{"id":11393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11390,"mutability":"mutable","name":"left","nameLocation":"60608:4:17","nodeType":"VariableDeclaration","scope":11395,"src":"60600:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11389,"name":"uint256","nodeType":"ElementaryTypeName","src":"60600:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11392,"mutability":"mutable","name":"right","nameLocation":"60622:5:17","nodeType":"VariableDeclaration","scope":11395,"src":"60614:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11391,"name":"uint256","nodeType":"ElementaryTypeName","src":"60614:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60599:29:17"},"returnParameters":{"id":11394,"nodeType":"ParameterList","parameters":[],"src":"60642:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11405,"nodeType":"FunctionDefinition","src":"60794:84:17","nodes":[],"documentation":{"id":11396,"nodeType":"StructuredDocumentation","src":"60649:140:17","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60803:8:17","parameters":{"id":11403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11398,"mutability":"mutable","name":"left","nameLocation":"60820:4:17","nodeType":"VariableDeclaration","scope":11405,"src":"60812:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11397,"name":"uint256","nodeType":"ElementaryTypeName","src":"60812:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11400,"mutability":"mutable","name":"right","nameLocation":"60834:5:17","nodeType":"VariableDeclaration","scope":11405,"src":"60826:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11399,"name":"uint256","nodeType":"ElementaryTypeName","src":"60826:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11402,"mutability":"mutable","name":"error","nameLocation":"60857:5:17","nodeType":"VariableDeclaration","scope":11405,"src":"60841:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11401,"name":"string","nodeType":"ElementaryTypeName","src":"60841:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60811:52:17"},"returnParameters":{"id":11404,"nodeType":"ParameterList","parameters":[],"src":"60877:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11413,"nodeType":"FunctionDefinition","src":"60966:59:17","nodes":[],"documentation":{"id":11406,"nodeType":"StructuredDocumentation","src":"60884:77:17","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60975:8:17","parameters":{"id":11411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11408,"mutability":"mutable","name":"left","nameLocation":"60991:4:17","nodeType":"VariableDeclaration","scope":11413,"src":"60984:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11407,"name":"int256","nodeType":"ElementaryTypeName","src":"60984:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11410,"mutability":"mutable","name":"right","nameLocation":"61004:5:17","nodeType":"VariableDeclaration","scope":11413,"src":"60997:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11409,"name":"int256","nodeType":"ElementaryTypeName","src":"60997:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"60983:27:17"},"returnParameters":{"id":11412,"nodeType":"ParameterList","parameters":[],"src":"61024:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11423,"nodeType":"FunctionDefinition","src":"61175:82:17","nodes":[],"documentation":{"id":11414,"nodeType":"StructuredDocumentation","src":"61031:139:17","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"61184:8:17","parameters":{"id":11421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11416,"mutability":"mutable","name":"left","nameLocation":"61200:4:17","nodeType":"VariableDeclaration","scope":11423,"src":"61193:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11415,"name":"int256","nodeType":"ElementaryTypeName","src":"61193:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11418,"mutability":"mutable","name":"right","nameLocation":"61213:5:17","nodeType":"VariableDeclaration","scope":11423,"src":"61206:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11417,"name":"int256","nodeType":"ElementaryTypeName","src":"61206:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11420,"mutability":"mutable","name":"error","nameLocation":"61236:5:17","nodeType":"VariableDeclaration","scope":11423,"src":"61220:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11419,"name":"string","nodeType":"ElementaryTypeName","src":"61220:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61192:50:17"},"returnParameters":{"id":11422,"nodeType":"ParameterList","parameters":[],"src":"61256:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11433,"nodeType":"FunctionDefinition","src":"61370:89:17","nodes":[],"documentation":{"id":11424,"nodeType":"StructuredDocumentation","src":"61263:102:17","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61379:18:17","parameters":{"id":11431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11426,"mutability":"mutable","name":"left","nameLocation":"61406:4:17","nodeType":"VariableDeclaration","scope":11433,"src":"61398:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11425,"name":"uint256","nodeType":"ElementaryTypeName","src":"61398:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11428,"mutability":"mutable","name":"right","nameLocation":"61420:5:17","nodeType":"VariableDeclaration","scope":11433,"src":"61412:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11427,"name":"uint256","nodeType":"ElementaryTypeName","src":"61412:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11430,"mutability":"mutable","name":"decimals","nameLocation":"61435:8:17","nodeType":"VariableDeclaration","scope":11433,"src":"61427:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11429,"name":"uint256","nodeType":"ElementaryTypeName","src":"61427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61397:47:17"},"returnParameters":{"id":11432,"nodeType":"ParameterList","parameters":[],"src":"61458:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11445,"nodeType":"FunctionDefinition","src":"61634:112:17","nodes":[],"documentation":{"id":11434,"nodeType":"StructuredDocumentation","src":"61465:164:17","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61643:18:17","parameters":{"id":11443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11436,"mutability":"mutable","name":"left","nameLocation":"61670:4:17","nodeType":"VariableDeclaration","scope":11445,"src":"61662:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11435,"name":"uint256","nodeType":"ElementaryTypeName","src":"61662:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11438,"mutability":"mutable","name":"right","nameLocation":"61684:5:17","nodeType":"VariableDeclaration","scope":11445,"src":"61676:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11437,"name":"uint256","nodeType":"ElementaryTypeName","src":"61676:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11440,"mutability":"mutable","name":"decimals","nameLocation":"61699:8:17","nodeType":"VariableDeclaration","scope":11445,"src":"61691:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11439,"name":"uint256","nodeType":"ElementaryTypeName","src":"61691:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11442,"mutability":"mutable","name":"error","nameLocation":"61725:5:17","nodeType":"VariableDeclaration","scope":11445,"src":"61709:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11441,"name":"string","nodeType":"ElementaryTypeName","src":"61709:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61661:70:17"},"returnParameters":{"id":11444,"nodeType":"ParameterList","parameters":[],"src":"61745:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11455,"nodeType":"FunctionDefinition","src":"61858:87:17","nodes":[],"documentation":{"id":11446,"nodeType":"StructuredDocumentation","src":"61752:101:17","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61867:18:17","parameters":{"id":11453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11448,"mutability":"mutable","name":"left","nameLocation":"61893:4:17","nodeType":"VariableDeclaration","scope":11455,"src":"61886:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11447,"name":"int256","nodeType":"ElementaryTypeName","src":"61886:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11450,"mutability":"mutable","name":"right","nameLocation":"61906:5:17","nodeType":"VariableDeclaration","scope":11455,"src":"61899:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11449,"name":"int256","nodeType":"ElementaryTypeName","src":"61899:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11452,"mutability":"mutable","name":"decimals","nameLocation":"61921:8:17","nodeType":"VariableDeclaration","scope":11455,"src":"61913:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11451,"name":"uint256","nodeType":"ElementaryTypeName","src":"61913:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61885:45:17"},"returnParameters":{"id":11454,"nodeType":"ParameterList","parameters":[],"src":"61944:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11467,"nodeType":"FunctionDefinition","src":"62119:110:17","nodes":[],"documentation":{"id":11456,"nodeType":"StructuredDocumentation","src":"61951:163:17","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"62128:18:17","parameters":{"id":11465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11458,"mutability":"mutable","name":"left","nameLocation":"62154:4:17","nodeType":"VariableDeclaration","scope":11467,"src":"62147:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11457,"name":"int256","nodeType":"ElementaryTypeName","src":"62147:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11460,"mutability":"mutable","name":"right","nameLocation":"62167:5:17","nodeType":"VariableDeclaration","scope":11467,"src":"62160:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11459,"name":"int256","nodeType":"ElementaryTypeName","src":"62160:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11462,"mutability":"mutable","name":"decimals","nameLocation":"62182:8:17","nodeType":"VariableDeclaration","scope":11467,"src":"62174:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11461,"name":"uint256","nodeType":"ElementaryTypeName","src":"62174:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11464,"mutability":"mutable","name":"error","nameLocation":"62208:5:17","nodeType":"VariableDeclaration","scope":11467,"src":"62192:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11463,"name":"string","nodeType":"ElementaryTypeName","src":"62192:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62146:68:17"},"returnParameters":{"id":11466,"nodeType":"ParameterList","parameters":[],"src":"62228:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11475,"nodeType":"FunctionDefinition","src":"62289:58:17","nodes":[],"documentation":{"id":11468,"nodeType":"StructuredDocumentation","src":"62235:49:17","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62298:11:17","parameters":{"id":11473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11470,"mutability":"mutable","name":"left","nameLocation":"62315:4:17","nodeType":"VariableDeclaration","scope":11475,"src":"62310:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11469,"name":"bool","nodeType":"ElementaryTypeName","src":"62310:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11472,"mutability":"mutable","name":"right","nameLocation":"62326:5:17","nodeType":"VariableDeclaration","scope":11475,"src":"62321:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11471,"name":"bool","nodeType":"ElementaryTypeName","src":"62321:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"62309:23:17"},"returnParameters":{"id":11474,"nodeType":"ParameterList","parameters":[],"src":"62346:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11485,"nodeType":"FunctionDefinition","src":"62464:81:17","nodes":[],"documentation":{"id":11476,"nodeType":"StructuredDocumentation","src":"62353:106:17","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62473:11:17","parameters":{"id":11483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11478,"mutability":"mutable","name":"left","nameLocation":"62490:4:17","nodeType":"VariableDeclaration","scope":11485,"src":"62485:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11477,"name":"bool","nodeType":"ElementaryTypeName","src":"62485:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11480,"mutability":"mutable","name":"right","nameLocation":"62501:5:17","nodeType":"VariableDeclaration","scope":11485,"src":"62496:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11479,"name":"bool","nodeType":"ElementaryTypeName","src":"62496:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11482,"mutability":"mutable","name":"error","nameLocation":"62524:5:17","nodeType":"VariableDeclaration","scope":11485,"src":"62508:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11481,"name":"string","nodeType":"ElementaryTypeName","src":"62508:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62484:46:17"},"returnParameters":{"id":11484,"nodeType":"ParameterList","parameters":[],"src":"62544:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11493,"nodeType":"FunctionDefinition","src":"62607:80:17","nodes":[],"documentation":{"id":11486,"nodeType":"StructuredDocumentation","src":"62551:51:17","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62616:11:17","parameters":{"id":11491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11488,"mutability":"mutable","name":"left","nameLocation":"62644:4:17","nodeType":"VariableDeclaration","scope":11493,"src":"62628:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11487,"name":"string","nodeType":"ElementaryTypeName","src":"62628:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11490,"mutability":"mutable","name":"right","nameLocation":"62666:5:17","nodeType":"VariableDeclaration","scope":11493,"src":"62650:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11489,"name":"string","nodeType":"ElementaryTypeName","src":"62650:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62627:45:17"},"returnParameters":{"id":11492,"nodeType":"ParameterList","parameters":[],"src":"62686:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11503,"nodeType":"FunctionDefinition","src":"62806:103:17","nodes":[],"documentation":{"id":11494,"nodeType":"StructuredDocumentation","src":"62693:108:17","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62815:11:17","parameters":{"id":11501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11496,"mutability":"mutable","name":"left","nameLocation":"62843:4:17","nodeType":"VariableDeclaration","scope":11503,"src":"62827:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11495,"name":"string","nodeType":"ElementaryTypeName","src":"62827:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11498,"mutability":"mutable","name":"right","nameLocation":"62865:5:17","nodeType":"VariableDeclaration","scope":11503,"src":"62849:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11497,"name":"string","nodeType":"ElementaryTypeName","src":"62849:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11500,"mutability":"mutable","name":"error","nameLocation":"62888:5:17","nodeType":"VariableDeclaration","scope":11503,"src":"62872:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11499,"name":"string","nodeType":"ElementaryTypeName","src":"62872:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62826:68:17"},"returnParameters":{"id":11502,"nodeType":"ParameterList","parameters":[],"src":"62908:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11511,"nodeType":"FunctionDefinition","src":"62970:78:17","nodes":[],"documentation":{"id":11504,"nodeType":"StructuredDocumentation","src":"62915:50:17","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62979:11:17","parameters":{"id":11509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11506,"mutability":"mutable","name":"left","nameLocation":"63006:4:17","nodeType":"VariableDeclaration","scope":11511,"src":"62991:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":11505,"name":"bytes","nodeType":"ElementaryTypeName","src":"62991:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11508,"mutability":"mutable","name":"right","nameLocation":"63027:5:17","nodeType":"VariableDeclaration","scope":11511,"src":"63012:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":11507,"name":"bytes","nodeType":"ElementaryTypeName","src":"63012:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"62990:43:17"},"returnParameters":{"id":11510,"nodeType":"ParameterList","parameters":[],"src":"63047:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11521,"nodeType":"FunctionDefinition","src":"63166:101:17","nodes":[],"documentation":{"id":11512,"nodeType":"StructuredDocumentation","src":"63054:107:17","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63175:11:17","parameters":{"id":11519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11514,"mutability":"mutable","name":"left","nameLocation":"63202:4:17","nodeType":"VariableDeclaration","scope":11521,"src":"63187:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":11513,"name":"bytes","nodeType":"ElementaryTypeName","src":"63187:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11516,"mutability":"mutable","name":"right","nameLocation":"63223:5:17","nodeType":"VariableDeclaration","scope":11521,"src":"63208:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":11515,"name":"bytes","nodeType":"ElementaryTypeName","src":"63208:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11518,"mutability":"mutable","name":"error","nameLocation":"63246:5:17","nodeType":"VariableDeclaration","scope":11521,"src":"63230:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11517,"name":"string","nodeType":"ElementaryTypeName","src":"63230:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63186:66:17"},"returnParameters":{"id":11520,"nodeType":"ParameterList","parameters":[],"src":"63266:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11531,"nodeType":"FunctionDefinition","src":"63337:80:17","nodes":[],"documentation":{"id":11522,"nodeType":"StructuredDocumentation","src":"63273:59:17","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63346:11:17","parameters":{"id":11529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11525,"mutability":"mutable","name":"left","nameLocation":"63374:4:17","nodeType":"VariableDeclaration","scope":11531,"src":"63358:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":11523,"name":"bool","nodeType":"ElementaryTypeName","src":"63358:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11524,"nodeType":"ArrayTypeName","src":"63358:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":11528,"mutability":"mutable","name":"right","nameLocation":"63396:5:17","nodeType":"VariableDeclaration","scope":11531,"src":"63380:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":11526,"name":"bool","nodeType":"ElementaryTypeName","src":"63380:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11527,"nodeType":"ArrayTypeName","src":"63380:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"63357:45:17"},"returnParameters":{"id":11530,"nodeType":"ParameterList","parameters":[],"src":"63416:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11543,"nodeType":"FunctionDefinition","src":"63544:103:17","nodes":[],"documentation":{"id":11532,"nodeType":"StructuredDocumentation","src":"63423:116:17","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63553:11:17","parameters":{"id":11541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11535,"mutability":"mutable","name":"left","nameLocation":"63581:4:17","nodeType":"VariableDeclaration","scope":11543,"src":"63565:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":11533,"name":"bool","nodeType":"ElementaryTypeName","src":"63565:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11534,"nodeType":"ArrayTypeName","src":"63565:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":11538,"mutability":"mutable","name":"right","nameLocation":"63603:5:17","nodeType":"VariableDeclaration","scope":11543,"src":"63587:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":11536,"name":"bool","nodeType":"ElementaryTypeName","src":"63587:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11537,"nodeType":"ArrayTypeName","src":"63587:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":11540,"mutability":"mutable","name":"error","nameLocation":"63626:5:17","nodeType":"VariableDeclaration","scope":11543,"src":"63610:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11539,"name":"string","nodeType":"ElementaryTypeName","src":"63610:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63564:68:17"},"returnParameters":{"id":11542,"nodeType":"ParameterList","parameters":[],"src":"63646:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11553,"nodeType":"FunctionDefinition","src":"63720:86:17","nodes":[],"documentation":{"id":11544,"nodeType":"StructuredDocumentation","src":"63653:62:17","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63729:11:17","parameters":{"id":11551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11547,"mutability":"mutable","name":"left","nameLocation":"63760:4:17","nodeType":"VariableDeclaration","scope":11553,"src":"63741:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":11545,"name":"uint256","nodeType":"ElementaryTypeName","src":"63741:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11546,"nodeType":"ArrayTypeName","src":"63741:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":11550,"mutability":"mutable","name":"right","nameLocation":"63785:5:17","nodeType":"VariableDeclaration","scope":11553,"src":"63766:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":11548,"name":"uint256","nodeType":"ElementaryTypeName","src":"63766:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11549,"nodeType":"ArrayTypeName","src":"63766:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"63740:51:17"},"returnParameters":{"id":11552,"nodeType":"ParameterList","parameters":[],"src":"63805:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11565,"nodeType":"FunctionDefinition","src":"63936:109:17","nodes":[],"documentation":{"id":11554,"nodeType":"StructuredDocumentation","src":"63812:119:17","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63945:11:17","parameters":{"id":11563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11557,"mutability":"mutable","name":"left","nameLocation":"63976:4:17","nodeType":"VariableDeclaration","scope":11565,"src":"63957:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":11555,"name":"uint256","nodeType":"ElementaryTypeName","src":"63957:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11556,"nodeType":"ArrayTypeName","src":"63957:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":11560,"mutability":"mutable","name":"right","nameLocation":"64001:5:17","nodeType":"VariableDeclaration","scope":11565,"src":"63982:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":11558,"name":"uint256","nodeType":"ElementaryTypeName","src":"63982:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11559,"nodeType":"ArrayTypeName","src":"63982:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":11562,"mutability":"mutable","name":"error","nameLocation":"64024:5:17","nodeType":"VariableDeclaration","scope":11565,"src":"64008:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11561,"name":"string","nodeType":"ElementaryTypeName","src":"64008:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63956:74:17"},"returnParameters":{"id":11564,"nodeType":"ParameterList","parameters":[],"src":"64044:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11575,"nodeType":"FunctionDefinition","src":"64117:84:17","nodes":[],"documentation":{"id":11566,"nodeType":"StructuredDocumentation","src":"64051:61:17","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64126:11:17","parameters":{"id":11573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11569,"mutability":"mutable","name":"left","nameLocation":"64156:4:17","nodeType":"VariableDeclaration","scope":11575,"src":"64138:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":11567,"name":"int256","nodeType":"ElementaryTypeName","src":"64138:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11568,"nodeType":"ArrayTypeName","src":"64138:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":11572,"mutability":"mutable","name":"right","nameLocation":"64180:5:17","nodeType":"VariableDeclaration","scope":11575,"src":"64162:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":11570,"name":"int256","nodeType":"ElementaryTypeName","src":"64162:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11571,"nodeType":"ArrayTypeName","src":"64162:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"64137:49:17"},"returnParameters":{"id":11574,"nodeType":"ParameterList","parameters":[],"src":"64200:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11587,"nodeType":"FunctionDefinition","src":"64330:107:17","nodes":[],"documentation":{"id":11576,"nodeType":"StructuredDocumentation","src":"64207:118:17","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64339:11:17","parameters":{"id":11585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11579,"mutability":"mutable","name":"left","nameLocation":"64369:4:17","nodeType":"VariableDeclaration","scope":11587,"src":"64351:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":11577,"name":"int256","nodeType":"ElementaryTypeName","src":"64351:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11578,"nodeType":"ArrayTypeName","src":"64351:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":11582,"mutability":"mutable","name":"right","nameLocation":"64393:5:17","nodeType":"VariableDeclaration","scope":11587,"src":"64375:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":11580,"name":"int256","nodeType":"ElementaryTypeName","src":"64375:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11581,"nodeType":"ArrayTypeName","src":"64375:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":11584,"mutability":"mutable","name":"error","nameLocation":"64416:5:17","nodeType":"VariableDeclaration","scope":11587,"src":"64400:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11583,"name":"string","nodeType":"ElementaryTypeName","src":"64400:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64350:72:17"},"returnParameters":{"id":11586,"nodeType":"ParameterList","parameters":[],"src":"64436:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11595,"nodeType":"FunctionDefinition","src":"64500:64:17","nodes":[],"documentation":{"id":11588,"nodeType":"StructuredDocumentation","src":"64443:52:17","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64509:11:17","parameters":{"id":11593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11590,"mutability":"mutable","name":"left","nameLocation":"64529:4:17","nodeType":"VariableDeclaration","scope":11595,"src":"64521:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11589,"name":"uint256","nodeType":"ElementaryTypeName","src":"64521:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11592,"mutability":"mutable","name":"right","nameLocation":"64543:5:17","nodeType":"VariableDeclaration","scope":11595,"src":"64535:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11591,"name":"uint256","nodeType":"ElementaryTypeName","src":"64535:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64520:29:17"},"returnParameters":{"id":11594,"nodeType":"ParameterList","parameters":[],"src":"64563:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11605,"nodeType":"FunctionDefinition","src":"64637:86:17","nodes":[],"documentation":{"id":11596,"nodeType":"StructuredDocumentation","src":"64570:62:17","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64646:11:17","parameters":{"id":11603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11599,"mutability":"mutable","name":"left","nameLocation":"64677:4:17","nodeType":"VariableDeclaration","scope":11605,"src":"64658:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":11597,"name":"address","nodeType":"ElementaryTypeName","src":"64658:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11598,"nodeType":"ArrayTypeName","src":"64658:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":11602,"mutability":"mutable","name":"right","nameLocation":"64702:5:17","nodeType":"VariableDeclaration","scope":11605,"src":"64683:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":11600,"name":"address","nodeType":"ElementaryTypeName","src":"64683:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11601,"nodeType":"ArrayTypeName","src":"64683:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"64657:51:17"},"returnParameters":{"id":11604,"nodeType":"ParameterList","parameters":[],"src":"64722:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11617,"nodeType":"FunctionDefinition","src":"64853:109:17","nodes":[],"documentation":{"id":11606,"nodeType":"StructuredDocumentation","src":"64729:119:17","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64862:11:17","parameters":{"id":11615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11609,"mutability":"mutable","name":"left","nameLocation":"64893:4:17","nodeType":"VariableDeclaration","scope":11617,"src":"64874:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":11607,"name":"address","nodeType":"ElementaryTypeName","src":"64874:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11608,"nodeType":"ArrayTypeName","src":"64874:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":11612,"mutability":"mutable","name":"right","nameLocation":"64918:5:17","nodeType":"VariableDeclaration","scope":11617,"src":"64899:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":11610,"name":"address","nodeType":"ElementaryTypeName","src":"64899:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11611,"nodeType":"ArrayTypeName","src":"64899:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":11614,"mutability":"mutable","name":"error","nameLocation":"64941:5:17","nodeType":"VariableDeclaration","scope":11617,"src":"64925:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11613,"name":"string","nodeType":"ElementaryTypeName","src":"64925:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64873:74:17"},"returnParameters":{"id":11616,"nodeType":"ParameterList","parameters":[],"src":"64961:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11627,"nodeType":"FunctionDefinition","src":"65035:86:17","nodes":[],"documentation":{"id":11618,"nodeType":"StructuredDocumentation","src":"64968:62:17","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65044:11:17","parameters":{"id":11625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11621,"mutability":"mutable","name":"left","nameLocation":"65075:4:17","nodeType":"VariableDeclaration","scope":11627,"src":"65056:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65056:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11620,"nodeType":"ArrayTypeName","src":"65056:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":11624,"mutability":"mutable","name":"right","nameLocation":"65100:5:17","nodeType":"VariableDeclaration","scope":11627,"src":"65081:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65081:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11623,"nodeType":"ArrayTypeName","src":"65081:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"65055:51:17"},"returnParameters":{"id":11626,"nodeType":"ParameterList","parameters":[],"src":"65120:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11639,"nodeType":"FunctionDefinition","src":"65251:109:17","nodes":[],"documentation":{"id":11628,"nodeType":"StructuredDocumentation","src":"65127:119:17","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65260:11:17","parameters":{"id":11637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11631,"mutability":"mutable","name":"left","nameLocation":"65291:4:17","nodeType":"VariableDeclaration","scope":11639,"src":"65272:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65272:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11630,"nodeType":"ArrayTypeName","src":"65272:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":11634,"mutability":"mutable","name":"right","nameLocation":"65316:5:17","nodeType":"VariableDeclaration","scope":11639,"src":"65297:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65297:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11633,"nodeType":"ArrayTypeName","src":"65297:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":11636,"mutability":"mutable","name":"error","nameLocation":"65339:5:17","nodeType":"VariableDeclaration","scope":11639,"src":"65323:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11635,"name":"string","nodeType":"ElementaryTypeName","src":"65323:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65271:74:17"},"returnParameters":{"id":11638,"nodeType":"ParameterList","parameters":[],"src":"65359:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11649,"nodeType":"FunctionDefinition","src":"65432:84:17","nodes":[],"documentation":{"id":11640,"nodeType":"StructuredDocumentation","src":"65366:61:17","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65441:11:17","parameters":{"id":11647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11643,"mutability":"mutable","name":"left","nameLocation":"65471:4:17","nodeType":"VariableDeclaration","scope":11649,"src":"65453:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":11641,"name":"string","nodeType":"ElementaryTypeName","src":"65453:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11642,"nodeType":"ArrayTypeName","src":"65453:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":11646,"mutability":"mutable","name":"right","nameLocation":"65495:5:17","nodeType":"VariableDeclaration","scope":11649,"src":"65477:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":11644,"name":"string","nodeType":"ElementaryTypeName","src":"65477:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11645,"nodeType":"ArrayTypeName","src":"65477:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"65452:49:17"},"returnParameters":{"id":11648,"nodeType":"ParameterList","parameters":[],"src":"65515:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11661,"nodeType":"FunctionDefinition","src":"65645:107:17","nodes":[],"documentation":{"id":11650,"nodeType":"StructuredDocumentation","src":"65522:118:17","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65654:11:17","parameters":{"id":11659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11653,"mutability":"mutable","name":"left","nameLocation":"65684:4:17","nodeType":"VariableDeclaration","scope":11661,"src":"65666:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":11651,"name":"string","nodeType":"ElementaryTypeName","src":"65666:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11652,"nodeType":"ArrayTypeName","src":"65666:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":11656,"mutability":"mutable","name":"right","nameLocation":"65708:5:17","nodeType":"VariableDeclaration","scope":11661,"src":"65690:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":11654,"name":"string","nodeType":"ElementaryTypeName","src":"65690:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11655,"nodeType":"ArrayTypeName","src":"65690:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":11658,"mutability":"mutable","name":"error","nameLocation":"65731:5:17","nodeType":"VariableDeclaration","scope":11661,"src":"65715:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11657,"name":"string","nodeType":"ElementaryTypeName","src":"65715:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65665:72:17"},"returnParameters":{"id":11660,"nodeType":"ParameterList","parameters":[],"src":"65751:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11671,"nodeType":"FunctionDefinition","src":"65823:82:17","nodes":[],"documentation":{"id":11662,"nodeType":"StructuredDocumentation","src":"65758:60:17","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65832:11:17","parameters":{"id":11669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11665,"mutability":"mutable","name":"left","nameLocation":"65861:4:17","nodeType":"VariableDeclaration","scope":11671,"src":"65844:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":11663,"name":"bytes","nodeType":"ElementaryTypeName","src":"65844:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":11664,"nodeType":"ArrayTypeName","src":"65844:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":11668,"mutability":"mutable","name":"right","nameLocation":"65884:5:17","nodeType":"VariableDeclaration","scope":11671,"src":"65867:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":11666,"name":"bytes","nodeType":"ElementaryTypeName","src":"65867:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":11667,"nodeType":"ArrayTypeName","src":"65867:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"65843:47:17"},"returnParameters":{"id":11670,"nodeType":"ParameterList","parameters":[],"src":"65904:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11683,"nodeType":"FunctionDefinition","src":"66033:105:17","nodes":[],"documentation":{"id":11672,"nodeType":"StructuredDocumentation","src":"65911:117:17","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66042:11:17","parameters":{"id":11681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11675,"mutability":"mutable","name":"left","nameLocation":"66071:4:17","nodeType":"VariableDeclaration","scope":11683,"src":"66054:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":11673,"name":"bytes","nodeType":"ElementaryTypeName","src":"66054:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":11674,"nodeType":"ArrayTypeName","src":"66054:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":11678,"mutability":"mutable","name":"right","nameLocation":"66094:5:17","nodeType":"VariableDeclaration","scope":11683,"src":"66077:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":11676,"name":"bytes","nodeType":"ElementaryTypeName","src":"66077:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":11677,"nodeType":"ArrayTypeName","src":"66077:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":11680,"mutability":"mutable","name":"error","nameLocation":"66117:5:17","nodeType":"VariableDeclaration","scope":11683,"src":"66101:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11679,"name":"string","nodeType":"ElementaryTypeName","src":"66101:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66053:70:17"},"returnParameters":{"id":11682,"nodeType":"ParameterList","parameters":[],"src":"66137:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11693,"nodeType":"FunctionDefinition","src":"66258:87:17","nodes":[],"documentation":{"id":11684,"nodeType":"StructuredDocumentation","src":"66144:109:17","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66267:11:17","parameters":{"id":11691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11686,"mutability":"mutable","name":"left","nameLocation":"66287:4:17","nodeType":"VariableDeclaration","scope":11693,"src":"66279:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11685,"name":"uint256","nodeType":"ElementaryTypeName","src":"66279:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11688,"mutability":"mutable","name":"right","nameLocation":"66301:5:17","nodeType":"VariableDeclaration","scope":11693,"src":"66293:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11687,"name":"uint256","nodeType":"ElementaryTypeName","src":"66293:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11690,"mutability":"mutable","name":"error","nameLocation":"66324:5:17","nodeType":"VariableDeclaration","scope":11693,"src":"66308:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11689,"name":"string","nodeType":"ElementaryTypeName","src":"66308:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66278:52:17"},"returnParameters":{"id":11692,"nodeType":"ParameterList","parameters":[],"src":"66344:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11701,"nodeType":"FunctionDefinition","src":"66407:62:17","nodes":[],"documentation":{"id":11694,"nodeType":"StructuredDocumentation","src":"66351:51:17","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66416:11:17","parameters":{"id":11699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11696,"mutability":"mutable","name":"left","nameLocation":"66435:4:17","nodeType":"VariableDeclaration","scope":11701,"src":"66428:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11695,"name":"int256","nodeType":"ElementaryTypeName","src":"66428:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11698,"mutability":"mutable","name":"right","nameLocation":"66448:5:17","nodeType":"VariableDeclaration","scope":11701,"src":"66441:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11697,"name":"int256","nodeType":"ElementaryTypeName","src":"66441:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"66427:27:17"},"returnParameters":{"id":11700,"nodeType":"ParameterList","parameters":[],"src":"66468:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11711,"nodeType":"FunctionDefinition","src":"66588:85:17","nodes":[],"documentation":{"id":11702,"nodeType":"StructuredDocumentation","src":"66475:108:17","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66597:11:17","parameters":{"id":11709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11704,"mutability":"mutable","name":"left","nameLocation":"66616:4:17","nodeType":"VariableDeclaration","scope":11711,"src":"66609:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11703,"name":"int256","nodeType":"ElementaryTypeName","src":"66609:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11706,"mutability":"mutable","name":"right","nameLocation":"66629:5:17","nodeType":"VariableDeclaration","scope":11711,"src":"66622:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11705,"name":"int256","nodeType":"ElementaryTypeName","src":"66622:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":11708,"mutability":"mutable","name":"error","nameLocation":"66652:5:17","nodeType":"VariableDeclaration","scope":11711,"src":"66636:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11707,"name":"string","nodeType":"ElementaryTypeName","src":"66636:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66608:50:17"},"returnParameters":{"id":11710,"nodeType":"ParameterList","parameters":[],"src":"66672:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11719,"nodeType":"FunctionDefinition","src":"66736:64:17","nodes":[],"documentation":{"id":11712,"nodeType":"StructuredDocumentation","src":"66679:52:17","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66745:11:17","parameters":{"id":11717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11714,"mutability":"mutable","name":"left","nameLocation":"66765:4:17","nodeType":"VariableDeclaration","scope":11719,"src":"66757:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11713,"name":"address","nodeType":"ElementaryTypeName","src":"66757:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11716,"mutability":"mutable","name":"right","nameLocation":"66779:5:17","nodeType":"VariableDeclaration","scope":11719,"src":"66771:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11715,"name":"address","nodeType":"ElementaryTypeName","src":"66771:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"66756:29:17"},"returnParameters":{"id":11718,"nodeType":"ParameterList","parameters":[],"src":"66799:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11729,"nodeType":"FunctionDefinition","src":"66920:87:17","nodes":[],"documentation":{"id":11720,"nodeType":"StructuredDocumentation","src":"66806:109:17","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66929:11:17","parameters":{"id":11727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11722,"mutability":"mutable","name":"left","nameLocation":"66949:4:17","nodeType":"VariableDeclaration","scope":11729,"src":"66941:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11721,"name":"address","nodeType":"ElementaryTypeName","src":"66941:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11724,"mutability":"mutable","name":"right","nameLocation":"66963:5:17","nodeType":"VariableDeclaration","scope":11729,"src":"66955:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11723,"name":"address","nodeType":"ElementaryTypeName","src":"66955:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11726,"mutability":"mutable","name":"error","nameLocation":"66986:5:17","nodeType":"VariableDeclaration","scope":11729,"src":"66970:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11725,"name":"string","nodeType":"ElementaryTypeName","src":"66970:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66940:52:17"},"returnParameters":{"id":11728,"nodeType":"ParameterList","parameters":[],"src":"67006:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11737,"nodeType":"FunctionDefinition","src":"67070:64:17","nodes":[],"documentation":{"id":11730,"nodeType":"StructuredDocumentation","src":"67013:52:17","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67079:11:17","parameters":{"id":11735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11732,"mutability":"mutable","name":"left","nameLocation":"67099:4:17","nodeType":"VariableDeclaration","scope":11737,"src":"67091:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67091:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11734,"mutability":"mutable","name":"right","nameLocation":"67113:5:17","nodeType":"VariableDeclaration","scope":11737,"src":"67105:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67105:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"67090:29:17"},"returnParameters":{"id":11736,"nodeType":"ParameterList","parameters":[],"src":"67133:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11747,"nodeType":"FunctionDefinition","src":"67254:87:17","nodes":[],"documentation":{"id":11738,"nodeType":"StructuredDocumentation","src":"67140:109:17","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67263:11:17","parameters":{"id":11745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11740,"mutability":"mutable","name":"left","nameLocation":"67283:4:17","nodeType":"VariableDeclaration","scope":11747,"src":"67275:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67275:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11742,"mutability":"mutable","name":"right","nameLocation":"67297:5:17","nodeType":"VariableDeclaration","scope":11747,"src":"67289:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67289:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11744,"mutability":"mutable","name":"error","nameLocation":"67320:5:17","nodeType":"VariableDeclaration","scope":11747,"src":"67304:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11743,"name":"string","nodeType":"ElementaryTypeName","src":"67304:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67274:52:17"},"returnParameters":{"id":11746,"nodeType":"ParameterList","parameters":[],"src":"67340:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11753,"nodeType":"FunctionDefinition","src":"67397:50:17","nodes":[],"documentation":{"id":11748,"nodeType":"StructuredDocumentation","src":"67347:45:17","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"67406:10:17","parameters":{"id":11751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11750,"mutability":"mutable","name":"condition","nameLocation":"67422:9:17","nodeType":"VariableDeclaration","scope":11753,"src":"67417:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11749,"name":"bool","nodeType":"ElementaryTypeName","src":"67417:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67416:16:17"},"returnParameters":{"id":11752,"nodeType":"ParameterList","parameters":[],"src":"67446:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11761,"nodeType":"FunctionDefinition","src":"67560:73:17","nodes":[],"documentation":{"id":11754,"nodeType":"StructuredDocumentation","src":"67453:102:17","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"67569:10:17","parameters":{"id":11759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11756,"mutability":"mutable","name":"condition","nameLocation":"67585:9:17","nodeType":"VariableDeclaration","scope":11761,"src":"67580:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11755,"name":"bool","nodeType":"ElementaryTypeName","src":"67580:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11758,"mutability":"mutable","name":"error","nameLocation":"67612:5:17","nodeType":"VariableDeclaration","scope":11761,"src":"67596:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11757,"name":"string","nodeType":"ElementaryTypeName","src":"67596:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67579:39:17"},"returnParameters":{"id":11760,"nodeType":"ParameterList","parameters":[],"src":"67632:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11767,"nodeType":"FunctionDefinition","src":"67728:46:17","nodes":[],"documentation":{"id":11762,"nodeType":"StructuredDocumentation","src":"67639:84:17","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"67737:6:17","parameters":{"id":11765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11764,"mutability":"mutable","name":"condition","nameLocation":"67749:9:17","nodeType":"VariableDeclaration","scope":11767,"src":"67744:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11763,"name":"bool","nodeType":"ElementaryTypeName","src":"67744:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67743:16:17"},"returnParameters":{"id":11766,"nodeType":"ParameterList","parameters":[],"src":"67773:0:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11773,"nodeType":"FunctionDefinition","src":"67836:51:17","nodes":[],"documentation":{"id":11768,"nodeType":"StructuredDocumentation","src":"67780:51:17","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"67845:10:17","parameters":{"id":11771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11770,"mutability":"mutable","name":"char","nameLocation":"67872:4:17","nodeType":"VariableDeclaration","scope":11773,"src":"67856:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11769,"name":"string","nodeType":"ElementaryTypeName","src":"67856:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67855:22:17"},"returnParameters":{"id":11772,"nodeType":"ParameterList","parameters":[],"src":"67886:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11781,"nodeType":"FunctionDefinition","src":"67961:63:17","nodes":[],"documentation":{"id":11774,"nodeType":"StructuredDocumentation","src":"67893:63:17","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"67970:10:17","parameters":{"id":11779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11776,"mutability":"mutable","name":"char","nameLocation":"67997:4:17","nodeType":"VariableDeclaration","scope":11781,"src":"67981:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11775,"name":"string","nodeType":"ElementaryTypeName","src":"67981:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11778,"mutability":"mutable","name":"value","nameLocation":"68008:5:17","nodeType":"VariableDeclaration","scope":11781,"src":"68003:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11777,"name":"bool","nodeType":"ElementaryTypeName","src":"68003:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67980:34:17"},"returnParameters":{"id":11780,"nodeType":"ParameterList","parameters":[],"src":"68023:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11789,"nodeType":"FunctionDefinition","src":"68079:85:17","nodes":[],"documentation":{"id":11782,"nodeType":"StructuredDocumentation","src":"68030:44:17","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"68088:6:17","parameters":{"id":11785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11784,"mutability":"mutable","name":"rpcAlias","nameLocation":"68111:8:17","nodeType":"VariableDeclaration","scope":11789,"src":"68095:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11783,"name":"string","nodeType":"ElementaryTypeName","src":"68095:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68094:26:17"},"returnParameters":{"id":11788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11787,"mutability":"mutable","name":"json","nameLocation":"68158:4:17","nodeType":"VariableDeclaration","scope":11789,"src":"68144:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11786,"name":"string","nodeType":"ElementaryTypeName","src":"68144:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68143:20:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11797,"nodeType":"FunctionDefinition","src":"68229:67:17","nodes":[],"documentation":{"id":11790,"nodeType":"StructuredDocumentation","src":"68170:54:17","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"68238:13:17","parameters":{"id":11791,"nodeType":"ParameterList","parameters":[],"src":"68251:2:17"},"returnParameters":{"id":11796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11795,"mutability":"mutable","name":"urls","nameLocation":"68290:4:17","nodeType":"VariableDeclaration","scope":11797,"src":"68277:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$9052_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":11793,"nodeType":"UserDefinedTypeName","pathNode":{"id":11792,"name":"Rpc","nameLocations":["68277:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":9052,"src":"68277:3:17"},"referencedDeclaration":9052,"src":"68277:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$9052_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":11794,"nodeType":"ArrayTypeName","src":"68277:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$9052_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"68276:19:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11806,"nodeType":"FunctionDefinition","src":"68367:67:17","nodes":[],"documentation":{"id":11798,"nodeType":"StructuredDocumentation","src":"68302:60:17","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"68376:7:17","parameters":{"id":11799,"nodeType":"ParameterList","parameters":[],"src":"68383:2:17"},"returnParameters":{"id":11805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11804,"mutability":"mutable","name":"urls","nameLocation":"68428:4:17","nodeType":"VariableDeclaration","scope":11806,"src":"68409:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":11800,"name":"string","nodeType":"ElementaryTypeName","src":"68409:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11802,"length":{"hexValue":"32","id":11801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"68416:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"68409:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":11803,"nodeType":"ArrayTypeName","src":"68409:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"68408:25:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11812,"nodeType":"FunctionDefinition","src":"68515:42:17","nodes":[],"documentation":{"id":11807,"nodeType":"StructuredDocumentation","src":"68440:70:17","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"68524:5:17","parameters":{"id":11810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11809,"mutability":"mutable","name":"duration","nameLocation":"68538:8:17","nodeType":"VariableDeclaration","scope":11812,"src":"68530:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11808,"name":"uint256","nodeType":"ElementaryTypeName","src":"68530:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68529:18:17"},"returnParameters":{"id":11811,"nodeType":"ParameterList","parameters":[],"src":"68556:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11822,"nodeType":"FunctionDefinition","src":"68642:95:17","nodes":[],"documentation":{"id":11813,"nodeType":"StructuredDocumentation","src":"68594:43:17","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"68651:13:17","parameters":{"id":11818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11815,"mutability":"mutable","name":"toml","nameLocation":"68681:4:17","nodeType":"VariableDeclaration","scope":11822,"src":"68665:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11814,"name":"string","nodeType":"ElementaryTypeName","src":"68665:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11817,"mutability":"mutable","name":"key","nameLocation":"68703:3:17","nodeType":"VariableDeclaration","scope":11822,"src":"68687:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11816,"name":"string","nodeType":"ElementaryTypeName","src":"68687:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68664:43:17"},"returnParameters":{"id":11821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11822,"src":"68731:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11819,"name":"bool","nodeType":"ElementaryTypeName","src":"68731:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68730:6:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11832,"nodeType":"FunctionDefinition","src":"68818:101:17","nodes":[],"documentation":{"id":11823,"nodeType":"StructuredDocumentation","src":"68743:70:17","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"68827:16:17","parameters":{"id":11828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11825,"mutability":"mutable","name":"toml","nameLocation":"68860:4:17","nodeType":"VariableDeclaration","scope":11832,"src":"68844:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11824,"name":"string","nodeType":"ElementaryTypeName","src":"68844:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11827,"mutability":"mutable","name":"key","nameLocation":"68882:3:17","nodeType":"VariableDeclaration","scope":11832,"src":"68866:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11826,"name":"string","nodeType":"ElementaryTypeName","src":"68866:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68843:43:17"},"returnParameters":{"id":11831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11832,"src":"68910:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11829,"name":"address","nodeType":"ElementaryTypeName","src":"68910:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"68909:9:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11843,"nodeType":"FunctionDefinition","src":"69002:139:17","nodes":[],"documentation":{"id":11833,"nodeType":"StructuredDocumentation","src":"68925:72:17","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"69011:21:17","parameters":{"id":11838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11835,"mutability":"mutable","name":"toml","nameLocation":"69049:4:17","nodeType":"VariableDeclaration","scope":11843,"src":"69033:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11834,"name":"string","nodeType":"ElementaryTypeName","src":"69033:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11837,"mutability":"mutable","name":"key","nameLocation":"69071:3:17","nodeType":"VariableDeclaration","scope":11843,"src":"69055:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11836,"name":"string","nodeType":"ElementaryTypeName","src":"69055:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69032:43:17"},"returnParameters":{"id":11842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11843,"src":"69123:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":11839,"name":"address","nodeType":"ElementaryTypeName","src":"69123:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11840,"nodeType":"ArrayTypeName","src":"69123:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"69122:18:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11853,"nodeType":"FunctionDefinition","src":"69219:95:17","nodes":[],"documentation":{"id":11844,"nodeType":"StructuredDocumentation","src":"69147:67:17","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"69228:13:17","parameters":{"id":11849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11846,"mutability":"mutable","name":"toml","nameLocation":"69258:4:17","nodeType":"VariableDeclaration","scope":11853,"src":"69242:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11845,"name":"string","nodeType":"ElementaryTypeName","src":"69242:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11848,"mutability":"mutable","name":"key","nameLocation":"69280:3:17","nodeType":"VariableDeclaration","scope":11853,"src":"69264:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11847,"name":"string","nodeType":"ElementaryTypeName","src":"69264:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69241:43:17"},"returnParameters":{"id":11852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11853,"src":"69308:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11850,"name":"bool","nodeType":"ElementaryTypeName","src":"69308:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69307:6:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11864,"nodeType":"FunctionDefinition","src":"69394:109:17","nodes":[],"documentation":{"id":11854,"nodeType":"StructuredDocumentation","src":"69320:69:17","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"69403:18:17","parameters":{"id":11859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11856,"mutability":"mutable","name":"toml","nameLocation":"69438:4:17","nodeType":"VariableDeclaration","scope":11864,"src":"69422:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11855,"name":"string","nodeType":"ElementaryTypeName","src":"69422:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11858,"mutability":"mutable","name":"key","nameLocation":"69460:3:17","nodeType":"VariableDeclaration","scope":11864,"src":"69444:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11857,"name":"string","nodeType":"ElementaryTypeName","src":"69444:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69421:43:17"},"returnParameters":{"id":11863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11864,"src":"69488:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":11860,"name":"bool","nodeType":"ElementaryTypeName","src":"69488:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11861,"nodeType":"ArrayTypeName","src":"69488:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"69487:15:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11874,"nodeType":"FunctionDefinition","src":"69582:104:17","nodes":[],"documentation":{"id":11865,"nodeType":"StructuredDocumentation","src":"69509:68:17","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"69591:14:17","parameters":{"id":11870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11867,"mutability":"mutable","name":"toml","nameLocation":"69622:4:17","nodeType":"VariableDeclaration","scope":11874,"src":"69606:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11866,"name":"string","nodeType":"ElementaryTypeName","src":"69606:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11869,"mutability":"mutable","name":"key","nameLocation":"69644:3:17","nodeType":"VariableDeclaration","scope":11874,"src":"69628:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11868,"name":"string","nodeType":"ElementaryTypeName","src":"69628:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69605:43:17"},"returnParameters":{"id":11873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11874,"src":"69672:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11871,"name":"bytes","nodeType":"ElementaryTypeName","src":"69672:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"69671:14:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11884,"nodeType":"FunctionDefinition","src":"69767:101:17","nodes":[],"documentation":{"id":11875,"nodeType":"StructuredDocumentation","src":"69692:70:17","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"69776:16:17","parameters":{"id":11880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11877,"mutability":"mutable","name":"toml","nameLocation":"69809:4:17","nodeType":"VariableDeclaration","scope":11884,"src":"69793:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11876,"name":"string","nodeType":"ElementaryTypeName","src":"69793:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11879,"mutability":"mutable","name":"key","nameLocation":"69831:3:17","nodeType":"VariableDeclaration","scope":11884,"src":"69815:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11878,"name":"string","nodeType":"ElementaryTypeName","src":"69815:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69792:43:17"},"returnParameters":{"id":11883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11884,"src":"69859:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69859:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"69858:9:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11895,"nodeType":"FunctionDefinition","src":"69951:139:17","nodes":[],"documentation":{"id":11885,"nodeType":"StructuredDocumentation","src":"69874:72:17","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"69960:21:17","parameters":{"id":11890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11887,"mutability":"mutable","name":"toml","nameLocation":"69998:4:17","nodeType":"VariableDeclaration","scope":11895,"src":"69982:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11886,"name":"string","nodeType":"ElementaryTypeName","src":"69982:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11889,"mutability":"mutable","name":"key","nameLocation":"70020:3:17","nodeType":"VariableDeclaration","scope":11895,"src":"70004:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11888,"name":"string","nodeType":"ElementaryTypeName","src":"70004:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69981:43:17"},"returnParameters":{"id":11894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11895,"src":"70072:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70072:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11892,"nodeType":"ArrayTypeName","src":"70072:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"70071:18:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11906,"nodeType":"FunctionDefinition","src":"70171:111:17","nodes":[],"documentation":{"id":11896,"nodeType":"StructuredDocumentation","src":"70096:70:17","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"70180:19:17","parameters":{"id":11901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11898,"mutability":"mutable","name":"toml","nameLocation":"70216:4:17","nodeType":"VariableDeclaration","scope":11906,"src":"70200:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11897,"name":"string","nodeType":"ElementaryTypeName","src":"70200:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11900,"mutability":"mutable","name":"key","nameLocation":"70238:3:17","nodeType":"VariableDeclaration","scope":11906,"src":"70222:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11899,"name":"string","nodeType":"ElementaryTypeName","src":"70222:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70199:43:17"},"returnParameters":{"id":11905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11906,"src":"70266:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":11902,"name":"bytes","nodeType":"ElementaryTypeName","src":"70266:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":11903,"nodeType":"ArrayTypeName","src":"70266:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"70265:16:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11916,"nodeType":"FunctionDefinition","src":"70362:96:17","nodes":[],"documentation":{"id":11907,"nodeType":"StructuredDocumentation","src":"70288:69:17","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"70371:12:17","parameters":{"id":11912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11909,"mutability":"mutable","name":"toml","nameLocation":"70400:4:17","nodeType":"VariableDeclaration","scope":11916,"src":"70384:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11908,"name":"string","nodeType":"ElementaryTypeName","src":"70384:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11911,"mutability":"mutable","name":"key","nameLocation":"70422:3:17","nodeType":"VariableDeclaration","scope":11916,"src":"70406:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11910,"name":"string","nodeType":"ElementaryTypeName","src":"70406:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70383:43:17"},"returnParameters":{"id":11915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11916,"src":"70450:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11913,"name":"int256","nodeType":"ElementaryTypeName","src":"70450:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"70449:8:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11927,"nodeType":"FunctionDefinition","src":"70540:110:17","nodes":[],"documentation":{"id":11917,"nodeType":"StructuredDocumentation","src":"70464:71:17","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"70549:17:17","parameters":{"id":11922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11919,"mutability":"mutable","name":"toml","nameLocation":"70583:4:17","nodeType":"VariableDeclaration","scope":11927,"src":"70567:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11918,"name":"string","nodeType":"ElementaryTypeName","src":"70567:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11921,"mutability":"mutable","name":"key","nameLocation":"70605:3:17","nodeType":"VariableDeclaration","scope":11927,"src":"70589:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11920,"name":"string","nodeType":"ElementaryTypeName","src":"70589:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70566:43:17"},"returnParameters":{"id":11926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11927,"src":"70633:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":11923,"name":"int256","nodeType":"ElementaryTypeName","src":"70633:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11924,"nodeType":"ArrayTypeName","src":"70633:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"70632:17:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11938,"nodeType":"FunctionDefinition","src":"70714:111:17","nodes":[],"documentation":{"id":11928,"nodeType":"StructuredDocumentation","src":"70656:53:17","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"70723:13:17","parameters":{"id":11933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11930,"mutability":"mutable","name":"toml","nameLocation":"70753:4:17","nodeType":"VariableDeclaration","scope":11938,"src":"70737:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11929,"name":"string","nodeType":"ElementaryTypeName","src":"70737:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11932,"mutability":"mutable","name":"key","nameLocation":"70775:3:17","nodeType":"VariableDeclaration","scope":11938,"src":"70759:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11931,"name":"string","nodeType":"ElementaryTypeName","src":"70759:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70736:43:17"},"returnParameters":{"id":11937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11936,"mutability":"mutable","name":"keys","nameLocation":"70819:4:17","nodeType":"VariableDeclaration","scope":11938,"src":"70803:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":11934,"name":"string","nodeType":"ElementaryTypeName","src":"70803:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11935,"nodeType":"ArrayTypeName","src":"70803:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"70802:22:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11948,"nodeType":"FunctionDefinition","src":"70905:106:17","nodes":[],"documentation":{"id":11939,"nodeType":"StructuredDocumentation","src":"70831:69:17","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"70914:15:17","parameters":{"id":11944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11941,"mutability":"mutable","name":"toml","nameLocation":"70946:4:17","nodeType":"VariableDeclaration","scope":11948,"src":"70930:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11940,"name":"string","nodeType":"ElementaryTypeName","src":"70930:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11943,"mutability":"mutable","name":"key","nameLocation":"70968:3:17","nodeType":"VariableDeclaration","scope":11948,"src":"70952:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11942,"name":"string","nodeType":"ElementaryTypeName","src":"70952:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70929:43:17"},"returnParameters":{"id":11947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11948,"src":"70996:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11945,"name":"string","nodeType":"ElementaryTypeName","src":"70996:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70995:15:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11959,"nodeType":"FunctionDefinition","src":"71093:113:17","nodes":[],"documentation":{"id":11949,"nodeType":"StructuredDocumentation","src":"71017:71:17","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"71102:20:17","parameters":{"id":11954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11951,"mutability":"mutable","name":"toml","nameLocation":"71139:4:17","nodeType":"VariableDeclaration","scope":11959,"src":"71123:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11950,"name":"string","nodeType":"ElementaryTypeName","src":"71123:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11953,"mutability":"mutable","name":"key","nameLocation":"71161:3:17","nodeType":"VariableDeclaration","scope":11959,"src":"71145:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11952,"name":"string","nodeType":"ElementaryTypeName","src":"71145:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71122:43:17"},"returnParameters":{"id":11958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11959,"src":"71189:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":11955,"name":"string","nodeType":"ElementaryTypeName","src":"71189:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11956,"nodeType":"ArrayTypeName","src":"71189:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"71188:17:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11969,"nodeType":"FunctionDefinition","src":"71287:98:17","nodes":[],"documentation":{"id":11960,"nodeType":"StructuredDocumentation","src":"71212:70:17","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"71296:13:17","parameters":{"id":11965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11962,"mutability":"mutable","name":"toml","nameLocation":"71326:4:17","nodeType":"VariableDeclaration","scope":11969,"src":"71310:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11961,"name":"string","nodeType":"ElementaryTypeName","src":"71310:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11964,"mutability":"mutable","name":"key","nameLocation":"71348:3:17","nodeType":"VariableDeclaration","scope":11969,"src":"71332:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11963,"name":"string","nodeType":"ElementaryTypeName","src":"71332:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71309:43:17"},"returnParameters":{"id":11968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11969,"src":"71376:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11966,"name":"uint256","nodeType":"ElementaryTypeName","src":"71376:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71375:9:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11980,"nodeType":"FunctionDefinition","src":"71468:112:17","nodes":[],"documentation":{"id":11970,"nodeType":"StructuredDocumentation","src":"71391:72:17","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"71477:18:17","parameters":{"id":11975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11972,"mutability":"mutable","name":"toml","nameLocation":"71512:4:17","nodeType":"VariableDeclaration","scope":11980,"src":"71496:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11971,"name":"string","nodeType":"ElementaryTypeName","src":"71496:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11974,"mutability":"mutable","name":"key","nameLocation":"71534:3:17","nodeType":"VariableDeclaration","scope":11980,"src":"71518:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11973,"name":"string","nodeType":"ElementaryTypeName","src":"71518:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71495:43:17"},"returnParameters":{"id":11979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11980,"src":"71562:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":11976,"name":"uint256","nodeType":"ElementaryTypeName","src":"71562:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11977,"nodeType":"ArrayTypeName","src":"71562:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"71561:18:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11988,"nodeType":"FunctionDefinition","src":"71620:93:17","nodes":[],"documentation":{"id":11981,"nodeType":"StructuredDocumentation","src":"71586:29:17","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"71629:9:17","parameters":{"id":11984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11983,"mutability":"mutable","name":"toml","nameLocation":"71655:4:17","nodeType":"VariableDeclaration","scope":11988,"src":"71639:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11982,"name":"string","nodeType":"ElementaryTypeName","src":"71639:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71638:22:17"},"returnParameters":{"id":11987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11986,"mutability":"mutable","name":"abiEncodedData","nameLocation":"71697:14:17","nodeType":"VariableDeclaration","scope":11988,"src":"71684:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11985,"name":"bytes","nodeType":"ElementaryTypeName","src":"71684:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71683:29:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11998,"nodeType":"FunctionDefinition","src":"71762:114:17","nodes":[],"documentation":{"id":11989,"nodeType":"StructuredDocumentation","src":"71719:38:17","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"71771:9:17","parameters":{"id":11994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11991,"mutability":"mutable","name":"toml","nameLocation":"71797:4:17","nodeType":"VariableDeclaration","scope":11998,"src":"71781:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11990,"name":"string","nodeType":"ElementaryTypeName","src":"71781:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11993,"mutability":"mutable","name":"key","nameLocation":"71819:3:17","nodeType":"VariableDeclaration","scope":11998,"src":"71803:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11992,"name":"string","nodeType":"ElementaryTypeName","src":"71803:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71780:43:17"},"returnParameters":{"id":11997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11996,"mutability":"mutable","name":"abiEncodedData","nameLocation":"71860:14:17","nodeType":"VariableDeclaration","scope":11998,"src":"71847:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11995,"name":"bytes","nodeType":"ElementaryTypeName","src":"71847:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71846:29:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12006,"nodeType":"FunctionDefinition","src":"71969:72:17","nodes":[],"documentation":{"id":11999,"nodeType":"StructuredDocumentation","src":"71882:82:17","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"71978:9:17","parameters":{"id":12004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12001,"mutability":"mutable","name":"json","nameLocation":"72004:4:17","nodeType":"VariableDeclaration","scope":12006,"src":"71988:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12000,"name":"string","nodeType":"ElementaryTypeName","src":"71988:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12003,"mutability":"mutable","name":"path","nameLocation":"72026:4:17","nodeType":"VariableDeclaration","scope":12006,"src":"72010:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12002,"name":"string","nodeType":"ElementaryTypeName","src":"72010:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71987:44:17"},"returnParameters":{"id":12005,"nodeType":"ParameterList","parameters":[],"src":"72040:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12016,"nodeType":"FunctionDefinition","src":"72310:98:17","nodes":[],"documentation":{"id":12007,"nodeType":"StructuredDocumentation","src":"72047:258:17","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"72319:9:17","parameters":{"id":12014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12009,"mutability":"mutable","name":"json","nameLocation":"72345:4:17","nodeType":"VariableDeclaration","scope":12016,"src":"72329:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12008,"name":"string","nodeType":"ElementaryTypeName","src":"72329:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12011,"mutability":"mutable","name":"path","nameLocation":"72367:4:17","nodeType":"VariableDeclaration","scope":12016,"src":"72351:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12010,"name":"string","nodeType":"ElementaryTypeName","src":"72351:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12013,"mutability":"mutable","name":"valueKey","nameLocation":"72389:8:17","nodeType":"VariableDeclaration","scope":12016,"src":"72373:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12012,"name":"string","nodeType":"ElementaryTypeName","src":"72373:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72328:70:17"},"returnParameters":{"id":12015,"nodeType":"ParameterList","parameters":[],"src":"72407:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12028,"nodeType":"FunctionDefinition","src":"72547:141:17","nodes":[],"documentation":{"id":12017,"nodeType":"StructuredDocumentation","src":"72450:92:17","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"72556:21:17","parameters":{"id":12024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12019,"mutability":"mutable","name":"salt","nameLocation":"72586:4:17","nodeType":"VariableDeclaration","scope":12028,"src":"72578:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72578:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12021,"mutability":"mutable","name":"initCodeHash","nameLocation":"72600:12:17","nodeType":"VariableDeclaration","scope":12028,"src":"72592:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72592:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12023,"mutability":"mutable","name":"deployer","nameLocation":"72622:8:17","nodeType":"VariableDeclaration","scope":12028,"src":"72614:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12022,"name":"address","nodeType":"ElementaryTypeName","src":"72614:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72577:54:17"},"returnParameters":{"id":12027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12028,"src":"72679:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12025,"name":"address","nodeType":"ElementaryTypeName","src":"72679:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72678:9:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12038,"nodeType":"FunctionDefinition","src":"72793:99:17","nodes":[],"documentation":{"id":12029,"nodeType":"StructuredDocumentation","src":"72694:94:17","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"72802:21:17","parameters":{"id":12034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12031,"mutability":"mutable","name":"salt","nameLocation":"72832:4:17","nodeType":"VariableDeclaration","scope":12038,"src":"72824:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12030,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72824:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12033,"mutability":"mutable","name":"initCodeHash","nameLocation":"72846:12:17","nodeType":"VariableDeclaration","scope":12038,"src":"72838:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72838:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"72823:36:17"},"returnParameters":{"id":12037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12038,"src":"72883:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12035,"name":"address","nodeType":"ElementaryTypeName","src":"72883:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72882:9:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12048,"nodeType":"FunctionDefinition","src":"72997:95:17","nodes":[],"documentation":{"id":12039,"nodeType":"StructuredDocumentation","src":"72898:94:17","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"73006:20:17","parameters":{"id":12044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12041,"mutability":"mutable","name":"deployer","nameLocation":"73035:8:17","nodeType":"VariableDeclaration","scope":12048,"src":"73027:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12040,"name":"address","nodeType":"ElementaryTypeName","src":"73027:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12043,"mutability":"mutable","name":"nonce","nameLocation":"73053:5:17","nodeType":"VariableDeclaration","scope":12048,"src":"73045:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12042,"name":"uint256","nodeType":"ElementaryTypeName","src":"73045:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73026:33:17"},"returnParameters":{"id":12047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12048,"src":"73083:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12045,"name":"address","nodeType":"ElementaryTypeName","src":"73083:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"73082:9:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12057,"nodeType":"FunctionDefinition","src":"73202:91:17","nodes":[],"documentation":{"id":12049,"nodeType":"StructuredDocumentation","src":"73098:99:17","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73211:12:17","parameters":{"id":12052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12051,"mutability":"mutable","name":"walletLabel","nameLocation":"73240:11:17","nodeType":"VariableDeclaration","scope":12057,"src":"73224:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12050,"name":"string","nodeType":"ElementaryTypeName","src":"73224:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73223:29:17"},"returnParameters":{"id":12056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12055,"mutability":"mutable","name":"wallet","nameLocation":"73285:6:17","nodeType":"VariableDeclaration","scope":12057,"src":"73271:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$9111_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12054,"nodeType":"UserDefinedTypeName","pathNode":{"id":12053,"name":"Wallet","nameLocations":["73271:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":9111,"src":"73271:6:17"},"referencedDeclaration":9111,"src":"73271:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$9111_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73270:22:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12066,"nodeType":"FunctionDefinition","src":"73371:82:17","nodes":[],"documentation":{"id":12058,"nodeType":"StructuredDocumentation","src":"73299:67:17","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73380:12:17","parameters":{"id":12061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12060,"mutability":"mutable","name":"privateKey","nameLocation":"73401:10:17","nodeType":"VariableDeclaration","scope":12066,"src":"73393:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12059,"name":"uint256","nodeType":"ElementaryTypeName","src":"73393:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73392:20:17"},"returnParameters":{"id":12065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12064,"mutability":"mutable","name":"wallet","nameLocation":"73445:6:17","nodeType":"VariableDeclaration","scope":12066,"src":"73431:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$9111_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12063,"nodeType":"UserDefinedTypeName","pathNode":{"id":12062,"name":"Wallet","nameLocations":["73431:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":9111,"src":"73431:6:17"},"referencedDeclaration":9111,"src":"73431:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$9111_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73430:22:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12077,"nodeType":"FunctionDefinition","src":"73567:111:17","nodes":[],"documentation":{"id":12067,"nodeType":"StructuredDocumentation","src":"73459:103:17","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73576:12:17","parameters":{"id":12072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12069,"mutability":"mutable","name":"privateKey","nameLocation":"73597:10:17","nodeType":"VariableDeclaration","scope":12077,"src":"73589:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12068,"name":"uint256","nodeType":"ElementaryTypeName","src":"73589:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12071,"mutability":"mutable","name":"walletLabel","nameLocation":"73625:11:17","nodeType":"VariableDeclaration","scope":12077,"src":"73609:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12070,"name":"string","nodeType":"ElementaryTypeName","src":"73609:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73588:49:17"},"returnParameters":{"id":12076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12075,"mutability":"mutable","name":"wallet","nameLocation":"73670:6:17","nodeType":"VariableDeclaration","scope":12077,"src":"73656:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$9111_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12074,"nodeType":"UserDefinedTypeName","pathNode":{"id":12073,"name":"Wallet","nameLocations":["73656:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":9111,"src":"73656:6:17"},"referencedDeclaration":9111,"src":"73656:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$9111_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73655:22:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12087,"nodeType":"FunctionDefinition","src":"73826:102:17","nodes":[],"documentation":{"id":12078,"nodeType":"StructuredDocumentation","src":"73684:137:17","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"73835:9:17","parameters":{"id":12083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12080,"mutability":"mutable","name":"mnemonic","nameLocation":"73861:8:17","nodeType":"VariableDeclaration","scope":12087,"src":"73845:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12079,"name":"string","nodeType":"ElementaryTypeName","src":"73845:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12082,"mutability":"mutable","name":"index","nameLocation":"73878:5:17","nodeType":"VariableDeclaration","scope":12087,"src":"73871:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":12081,"name":"uint32","nodeType":"ElementaryTypeName","src":"73871:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"73844:40:17"},"returnParameters":{"id":12086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12085,"mutability":"mutable","name":"privateKey","nameLocation":"73916:10:17","nodeType":"VariableDeclaration","scope":12087,"src":"73908:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12084,"name":"uint256","nodeType":"ElementaryTypeName","src":"73908:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73907:20:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12099,"nodeType":"FunctionDefinition","src":"74057:158:17","nodes":[],"documentation":{"id":12088,"nodeType":"StructuredDocumentation","src":"73934:118:17","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74066:9:17","parameters":{"id":12095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12090,"mutability":"mutable","name":"mnemonic","nameLocation":"74092:8:17","nodeType":"VariableDeclaration","scope":12099,"src":"74076:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12089,"name":"string","nodeType":"ElementaryTypeName","src":"74076:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12092,"mutability":"mutable","name":"derivationPath","nameLocation":"74118:14:17","nodeType":"VariableDeclaration","scope":12099,"src":"74102:30:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12091,"name":"string","nodeType":"ElementaryTypeName","src":"74102:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12094,"mutability":"mutable","name":"index","nameLocation":"74141:5:17","nodeType":"VariableDeclaration","scope":12099,"src":"74134:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":12093,"name":"uint32","nodeType":"ElementaryTypeName","src":"74134:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"74075:72:17"},"returnParameters":{"id":12098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12097,"mutability":"mutable","name":"privateKey","nameLocation":"74203:10:17","nodeType":"VariableDeclaration","scope":12099,"src":"74195:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12096,"name":"uint256","nodeType":"ElementaryTypeName","src":"74195:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74194:20:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12111,"nodeType":"FunctionDefinition","src":"74389:152:17","nodes":[],"documentation":{"id":12100,"nodeType":"StructuredDocumentation","src":"74221:163:17","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74398:9:17","parameters":{"id":12107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12102,"mutability":"mutable","name":"mnemonic","nameLocation":"74424:8:17","nodeType":"VariableDeclaration","scope":12111,"src":"74408:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12101,"name":"string","nodeType":"ElementaryTypeName","src":"74408:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12104,"mutability":"mutable","name":"index","nameLocation":"74441:5:17","nodeType":"VariableDeclaration","scope":12111,"src":"74434:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":12103,"name":"uint32","nodeType":"ElementaryTypeName","src":"74434:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":12106,"mutability":"mutable","name":"language","nameLocation":"74464:8:17","nodeType":"VariableDeclaration","scope":12111,"src":"74448:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12105,"name":"string","nodeType":"ElementaryTypeName","src":"74448:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74407:66:17"},"returnParameters":{"id":12110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12109,"mutability":"mutable","name":"privateKey","nameLocation":"74529:10:17","nodeType":"VariableDeclaration","scope":12111,"src":"74521:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12108,"name":"uint256","nodeType":"ElementaryTypeName","src":"74521:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74520:20:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12125,"nodeType":"FunctionDefinition","src":"74696:184:17","nodes":[],"documentation":{"id":12112,"nodeType":"StructuredDocumentation","src":"74547:144:17","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74705:9:17","parameters":{"id":12121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12114,"mutability":"mutable","name":"mnemonic","nameLocation":"74731:8:17","nodeType":"VariableDeclaration","scope":12125,"src":"74715:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12113,"name":"string","nodeType":"ElementaryTypeName","src":"74715:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12116,"mutability":"mutable","name":"derivationPath","nameLocation":"74757:14:17","nodeType":"VariableDeclaration","scope":12125,"src":"74741:30:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12115,"name":"string","nodeType":"ElementaryTypeName","src":"74741:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12118,"mutability":"mutable","name":"index","nameLocation":"74780:5:17","nodeType":"VariableDeclaration","scope":12125,"src":"74773:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":12117,"name":"uint32","nodeType":"ElementaryTypeName","src":"74773:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":12120,"mutability":"mutable","name":"language","nameLocation":"74803:8:17","nodeType":"VariableDeclaration","scope":12125,"src":"74787:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12119,"name":"string","nodeType":"ElementaryTypeName","src":"74787:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74714:98:17"},"returnParameters":{"id":12124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12123,"mutability":"mutable","name":"privateKey","nameLocation":"74868:10:17","nodeType":"VariableDeclaration","scope":12125,"src":"74860:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12122,"name":"uint256","nodeType":"ElementaryTypeName","src":"74860:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74859:20:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12133,"nodeType":"FunctionDefinition","src":"74936:86:17","nodes":[],"documentation":{"id":12126,"nodeType":"StructuredDocumentation","src":"74886:45:17","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"74945:8:17","parameters":{"id":12129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12128,"mutability":"mutable","name":"account","nameLocation":"74962:7:17","nodeType":"VariableDeclaration","scope":12133,"src":"74954:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12127,"name":"address","nodeType":"ElementaryTypeName","src":"74954:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"74953:17:17"},"returnParameters":{"id":12132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12131,"mutability":"mutable","name":"currentLabel","nameLocation":"75008:12:17","nodeType":"VariableDeclaration","scope":12133,"src":"74994:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12130,"name":"string","nodeType":"ElementaryTypeName","src":"74994:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74993:28:17"},"scope":12206,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12142,"nodeType":"FunctionDefinition","src":"75060:74:17","nodes":[],"documentation":{"id":12134,"nodeType":"StructuredDocumentation","src":"75028:27:17","text":"Get a `Wallet`'s nonce."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"75069:8:17","parameters":{"id":12138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12137,"mutability":"mutable","name":"wallet","nameLocation":"75094:6:17","nodeType":"VariableDeclaration","scope":12142,"src":"75078:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$9111_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12136,"nodeType":"UserDefinedTypeName","pathNode":{"id":12135,"name":"Wallet","nameLocations":["75078:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":9111,"src":"75078:6:17"},"referencedDeclaration":9111,"src":"75078:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$9111_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"75077:24:17"},"returnParameters":{"id":12141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12140,"mutability":"mutable","name":"nonce","nameLocation":"75127:5:17","nodeType":"VariableDeclaration","scope":12142,"src":"75120:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12139,"name":"uint64","nodeType":"ElementaryTypeName","src":"75120:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"75119:14:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12150,"nodeType":"FunctionDefinition","src":"75182:67:17","nodes":[],"documentation":{"id":12143,"nodeType":"StructuredDocumentation","src":"75140:37:17","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"75191:5:17","parameters":{"id":12148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12145,"mutability":"mutable","name":"account","nameLocation":"75205:7:17","nodeType":"VariableDeclaration","scope":12150,"src":"75197:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12144,"name":"address","nodeType":"ElementaryTypeName","src":"75197:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12147,"mutability":"mutable","name":"newLabel","nameLocation":"75230:8:17","nodeType":"VariableDeclaration","scope":12150,"src":"75214:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12146,"name":"string","nodeType":"ElementaryTypeName","src":"75214:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75196:43:17"},"returnParameters":{"id":12149,"nodeType":"ParameterList","parameters":[],"src":"75248:0:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12158,"nodeType":"FunctionDefinition","src":"75333:76:17","nodes":[],"documentation":{"id":12151,"nodeType":"StructuredDocumentation","src":"75255:73:17","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"75342:11:17","parameters":{"id":12154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12153,"mutability":"mutable","name":"privateKey","nameLocation":"75362:10:17","nodeType":"VariableDeclaration","scope":12158,"src":"75354:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12152,"name":"uint256","nodeType":"ElementaryTypeName","src":"75354:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75353:20:17"},"returnParameters":{"id":12157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12156,"mutability":"mutable","name":"keyAddr","nameLocation":"75400:7:17","nodeType":"VariableDeclaration","scope":12158,"src":"75392:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12155,"name":"address","nodeType":"ElementaryTypeName","src":"75392:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75391:17:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12173,"nodeType":"FunctionDefinition","src":"75451:103:17","nodes":[],"documentation":{"id":12159,"nodeType":"StructuredDocumentation","src":"75415:31:17","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"75460:4:17","parameters":{"id":12165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12162,"mutability":"mutable","name":"wallet","nameLocation":"75481:6:17","nodeType":"VariableDeclaration","scope":12173,"src":"75465:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$9111_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12161,"nodeType":"UserDefinedTypeName","pathNode":{"id":12160,"name":"Wallet","nameLocations":["75465:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":9111,"src":"75465:6:17"},"referencedDeclaration":9111,"src":"75465:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$9111_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":12164,"mutability":"mutable","name":"digest","nameLocation":"75497:6:17","nodeType":"VariableDeclaration","scope":12173,"src":"75489:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75489:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75464:40:17"},"returnParameters":{"id":12172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12167,"mutability":"mutable","name":"v","nameLocation":"75529:1:17","nodeType":"VariableDeclaration","scope":12173,"src":"75523:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12166,"name":"uint8","nodeType":"ElementaryTypeName","src":"75523:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12169,"mutability":"mutable","name":"r","nameLocation":"75540:1:17","nodeType":"VariableDeclaration","scope":12173,"src":"75532:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75532:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12171,"mutability":"mutable","name":"s","nameLocation":"75551:1:17","nodeType":"VariableDeclaration","scope":12173,"src":"75543:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75543:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75522:31:17"},"scope":12206,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12181,"nodeType":"FunctionDefinition","src":"75615:80:17","nodes":[],"documentation":{"id":12174,"nodeType":"StructuredDocumentation","src":"75560:50:17","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"75624:11:17","parameters":{"id":12177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12176,"mutability":"mutable","name":"data","nameLocation":"75651:4:17","nodeType":"VariableDeclaration","scope":12181,"src":"75636:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12175,"name":"bytes","nodeType":"ElementaryTypeName","src":"75636:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"75635:21:17"},"returnParameters":{"id":12180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12181,"src":"75680:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12178,"name":"string","nodeType":"ElementaryTypeName","src":"75680:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75679:15:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12189,"nodeType":"FunctionDefinition","src":"75757:81:17","nodes":[],"documentation":{"id":12182,"nodeType":"StructuredDocumentation","src":"75701:51:17","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"75766:11:17","parameters":{"id":12185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12184,"mutability":"mutable","name":"data","nameLocation":"75794:4:17","nodeType":"VariableDeclaration","scope":12189,"src":"75778:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12183,"name":"string","nodeType":"ElementaryTypeName","src":"75778:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75777:22:17"},"returnParameters":{"id":12188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12189,"src":"75823:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12186,"name":"string","nodeType":"ElementaryTypeName","src":"75823:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75822:15:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12197,"nodeType":"FunctionDefinition","src":"75896:77:17","nodes":[],"documentation":{"id":12190,"nodeType":"StructuredDocumentation","src":"75844:47:17","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"75905:8:17","parameters":{"id":12193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12192,"mutability":"mutable","name":"data","nameLocation":"75929:4:17","nodeType":"VariableDeclaration","scope":12197,"src":"75914:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12191,"name":"bytes","nodeType":"ElementaryTypeName","src":"75914:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"75913:21:17"},"returnParameters":{"id":12196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12197,"src":"75958:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12194,"name":"string","nodeType":"ElementaryTypeName","src":"75958:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75957:15:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12205,"nodeType":"FunctionDefinition","src":"76032:78:17","nodes":[],"documentation":{"id":12198,"nodeType":"StructuredDocumentation","src":"75979:48:17","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"76041:8:17","parameters":{"id":12201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12200,"mutability":"mutable","name":"data","nameLocation":"76066:4:17","nodeType":"VariableDeclaration","scope":12205,"src":"76050:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12199,"name":"string","nodeType":"ElementaryTypeName","src":"76050:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76049:22:17"},"returnParameters":{"id":12204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12205,"src":"76095:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12202,"name":"string","nodeType":"ElementaryTypeName","src":"76095:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76094:15:17"},"scope":12206,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":9006,"nodeType":"StructuredDocumentation","src":"184:225:17","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[12206],"name":"VmSafe","nameLocation":"419:6:17","scope":12808,"usedErrors":[],"usedEvents":[]},{"id":12807,"nodeType":"ContractDefinition","src":"76285:14386:17","nodes":[{"id":12215,"nodeType":"FunctionDefinition","src":"76445:61:17","nodes":[],"documentation":{"id":12210,"nodeType":"StructuredDocumentation","src":"76344:96:17","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"76454:10:17","parameters":{"id":12211,"nodeType":"ParameterList","parameters":[],"src":"76464:2:17"},"returnParameters":{"id":12214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12213,"mutability":"mutable","name":"forkId","nameLocation":"76498:6:17","nodeType":"VariableDeclaration","scope":12215,"src":"76490:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12212,"name":"uint256","nodeType":"ElementaryTypeName","src":"76490:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76489:16:17"},"scope":12807,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12221,"nodeType":"FunctionDefinition","src":"76590:51:17","nodes":[],"documentation":{"id":12216,"nodeType":"StructuredDocumentation","src":"76512:73:17","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"76599:15:17","parameters":{"id":12219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12218,"mutability":"mutable","name":"account","nameLocation":"76623:7:17","nodeType":"VariableDeclaration","scope":12221,"src":"76615:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12217,"name":"address","nodeType":"ElementaryTypeName","src":"76615:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76614:17:17"},"returnParameters":{"id":12220,"nodeType":"ParameterList","parameters":[],"src":"76640:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12227,"nodeType":"FunctionDefinition","src":"76680:54:17","nodes":[],"documentation":{"id":12222,"nodeType":"StructuredDocumentation","src":"76647:28:17","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"76689:11:17","parameters":{"id":12225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12224,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"76709:14:17","nodeType":"VariableDeclaration","scope":12227,"src":"76701:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12223,"name":"uint256","nodeType":"ElementaryTypeName","src":"76701:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76700:24:17"},"returnParameters":{"id":12226,"nodeType":"ParameterList","parameters":[],"src":"76733:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12233,"nodeType":"FunctionDefinition","src":"76770:46:17","nodes":[],"documentation":{"id":12228,"nodeType":"StructuredDocumentation","src":"76740:25:17","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"76779:7:17","parameters":{"id":12231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12230,"mutability":"mutable","name":"newChainId","nameLocation":"76795:10:17","nodeType":"VariableDeclaration","scope":12233,"src":"76787:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12229,"name":"uint256","nodeType":"ElementaryTypeName","src":"76787:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76786:20:17"},"returnParameters":{"id":12232,"nodeType":"ParameterList","parameters":[],"src":"76815:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12237,"nodeType":"FunctionDefinition","src":"76855:37:17","nodes":[],"documentation":{"id":12234,"nodeType":"StructuredDocumentation","src":"76822:28:17","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"76864:16:17","parameters":{"id":12235,"nodeType":"ParameterList","parameters":[],"src":"76880:2:17"},"returnParameters":{"id":12236,"nodeType":"ParameterList","parameters":[],"src":"76891:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12243,"nodeType":"FunctionDefinition","src":"76929:48:17","nodes":[],"documentation":{"id":12238,"nodeType":"StructuredDocumentation","src":"76898:26:17","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"76938:8:17","parameters":{"id":12241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12240,"mutability":"mutable","name":"newCoinbase","nameLocation":"76955:11:17","nodeType":"VariableDeclaration","scope":12243,"src":"76947:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12239,"name":"address","nodeType":"ElementaryTypeName","src":"76947:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76946:21:17"},"returnParameters":{"id":12242,"nodeType":"ParameterList","parameters":[],"src":"76976:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12251,"nodeType":"FunctionDefinition","src":"77097:82:17","nodes":[],"documentation":{"id":12244,"nodeType":"StructuredDocumentation","src":"76983:109:17","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"77106:10:17","parameters":{"id":12247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12246,"mutability":"mutable","name":"urlOrAlias","nameLocation":"77133:10:17","nodeType":"VariableDeclaration","scope":12251,"src":"77117:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12245,"name":"string","nodeType":"ElementaryTypeName","src":"77117:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77116:28:17"},"returnParameters":{"id":12250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12249,"mutability":"mutable","name":"forkId","nameLocation":"77171:6:17","nodeType":"VariableDeclaration","scope":12251,"src":"77163:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12248,"name":"uint256","nodeType":"ElementaryTypeName","src":"77163:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77162:16:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12261,"nodeType":"FunctionDefinition","src":"77286:103:17","nodes":[],"documentation":{"id":12252,"nodeType":"StructuredDocumentation","src":"77185:96:17","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"77295:10:17","parameters":{"id":12257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12254,"mutability":"mutable","name":"urlOrAlias","nameLocation":"77322:10:17","nodeType":"VariableDeclaration","scope":12261,"src":"77306:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12253,"name":"string","nodeType":"ElementaryTypeName","src":"77306:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12256,"mutability":"mutable","name":"blockNumber","nameLocation":"77342:11:17","nodeType":"VariableDeclaration","scope":12261,"src":"77334:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12255,"name":"uint256","nodeType":"ElementaryTypeName","src":"77334:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77305:49:17"},"returnParameters":{"id":12260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12259,"mutability":"mutable","name":"forkId","nameLocation":"77381:6:17","nodeType":"VariableDeclaration","scope":12261,"src":"77373:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12258,"name":"uint256","nodeType":"ElementaryTypeName","src":"77373:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77372:16:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12271,"nodeType":"FunctionDefinition","src":"77614:98:17","nodes":[],"documentation":{"id":12262,"nodeType":"StructuredDocumentation","src":"77395:214:17","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"77623:10:17","parameters":{"id":12267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12264,"mutability":"mutable","name":"urlOrAlias","nameLocation":"77650:10:17","nodeType":"VariableDeclaration","scope":12271,"src":"77634:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12263,"name":"string","nodeType":"ElementaryTypeName","src":"77634:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12266,"mutability":"mutable","name":"txHash","nameLocation":"77670:6:17","nodeType":"VariableDeclaration","scope":12271,"src":"77662:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77662:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77633:44:17"},"returnParameters":{"id":12270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12269,"mutability":"mutable","name":"forkId","nameLocation":"77704:6:17","nodeType":"VariableDeclaration","scope":12271,"src":"77696:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12268,"name":"uint256","nodeType":"ElementaryTypeName","src":"77696:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77695:16:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12279,"nodeType":"FunctionDefinition","src":"77847:88:17","nodes":[],"documentation":{"id":12272,"nodeType":"StructuredDocumentation","src":"77718:124:17","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"77856:16:17","parameters":{"id":12275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12274,"mutability":"mutable","name":"urlOrAlias","nameLocation":"77889:10:17","nodeType":"VariableDeclaration","scope":12279,"src":"77873:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12273,"name":"string","nodeType":"ElementaryTypeName","src":"77873:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77872:28:17"},"returnParameters":{"id":12278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12277,"mutability":"mutable","name":"forkId","nameLocation":"77927:6:17","nodeType":"VariableDeclaration","scope":12279,"src":"77919:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12276,"name":"uint256","nodeType":"ElementaryTypeName","src":"77919:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77918:16:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12289,"nodeType":"FunctionDefinition","src":"78059:109:17","nodes":[],"documentation":{"id":12280,"nodeType":"StructuredDocumentation","src":"77941:113:17","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"78068:16:17","parameters":{"id":12285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12282,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78101:10:17","nodeType":"VariableDeclaration","scope":12289,"src":"78085:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12281,"name":"string","nodeType":"ElementaryTypeName","src":"78085:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12284,"mutability":"mutable","name":"blockNumber","nameLocation":"78121:11:17","nodeType":"VariableDeclaration","scope":12289,"src":"78113:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12283,"name":"uint256","nodeType":"ElementaryTypeName","src":"78113:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78084:49:17"},"returnParameters":{"id":12288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12287,"mutability":"mutable","name":"forkId","nameLocation":"78160:6:17","nodeType":"VariableDeclaration","scope":12289,"src":"78152:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12286,"name":"uint256","nodeType":"ElementaryTypeName","src":"78152:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78151:16:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12299,"nodeType":"FunctionDefinition","src":"78404:104:17","nodes":[],"documentation":{"id":12290,"nodeType":"StructuredDocumentation","src":"78174:225:17","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"78413:16:17","parameters":{"id":12295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12292,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78446:10:17","nodeType":"VariableDeclaration","scope":12299,"src":"78430:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12291,"name":"string","nodeType":"ElementaryTypeName","src":"78430:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12294,"mutability":"mutable","name":"txHash","nameLocation":"78466:6:17","nodeType":"VariableDeclaration","scope":12299,"src":"78458:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78458:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78429:44:17"},"returnParameters":{"id":12298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12297,"mutability":"mutable","name":"forkId","nameLocation":"78500:6:17","nodeType":"VariableDeclaration","scope":12299,"src":"78492:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12296,"name":"uint256","nodeType":"ElementaryTypeName","src":"78492:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78491:16:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12307,"nodeType":"FunctionDefinition","src":"78548:60:17","nodes":[],"documentation":{"id":12300,"nodeType":"StructuredDocumentation","src":"78514:29:17","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"78557:4:17","parameters":{"id":12305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12302,"mutability":"mutable","name":"account","nameLocation":"78570:7:17","nodeType":"VariableDeclaration","scope":12307,"src":"78562:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12301,"name":"address","nodeType":"ElementaryTypeName","src":"78562:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12304,"mutability":"mutable","name":"newBalance","nameLocation":"78587:10:17","nodeType":"VariableDeclaration","scope":12307,"src":"78579:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12303,"name":"uint256","nodeType":"ElementaryTypeName","src":"78579:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78561:37:17"},"returnParameters":{"id":12306,"nodeType":"ParameterList","parameters":[],"src":"78607:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12315,"nodeType":"FunctionDefinition","src":"78846:76:17","nodes":[],"documentation":{"id":12308,"nodeType":"StructuredDocumentation","src":"78614:227:17","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"78855:14:17","parameters":{"id":12311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12310,"mutability":"mutable","name":"snapshotId","nameLocation":"78878:10:17","nodeType":"VariableDeclaration","scope":12315,"src":"78870:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12309,"name":"uint256","nodeType":"ElementaryTypeName","src":"78870:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78869:20:17"},"returnParameters":{"id":12314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12313,"mutability":"mutable","name":"success","nameLocation":"78913:7:17","nodeType":"VariableDeclaration","scope":12315,"src":"78908:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12312,"name":"bool","nodeType":"ElementaryTypeName","src":"78908:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"78907:14:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12319,"nodeType":"FunctionDefinition","src":"78994:36:17","nodes":[],"documentation":{"id":12316,"nodeType":"StructuredDocumentation","src":"78928:61:17","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"79003:15:17","parameters":{"id":12317,"nodeType":"ParameterList","parameters":[],"src":"79018:2:17"},"returnParameters":{"id":12318,"nodeType":"ParameterList","parameters":[],"src":"79029:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12325,"nodeType":"FunctionDefinition","src":"79206:52:17","nodes":[],"documentation":{"id":12320,"nodeType":"StructuredDocumentation","src":"79036:165:17","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"79215:10:17","parameters":{"id":12323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12322,"mutability":"mutable","name":"newDifficulty","nameLocation":"79234:13:17","nodeType":"VariableDeclaration","scope":12325,"src":"79226:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12321,"name":"uint256","nodeType":"ElementaryTypeName","src":"79226:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79225:23:17"},"returnParameters":{"id":12324,"nodeType":"ParameterList","parameters":[],"src":"79257:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12331,"nodeType":"FunctionDefinition","src":"79317:61:17","nodes":[],"documentation":{"id":12326,"nodeType":"StructuredDocumentation","src":"79264:48:17","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"79326:9:17","parameters":{"id":12329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12328,"mutability":"mutable","name":"pathToStateJson","nameLocation":"79352:15:17","nodeType":"VariableDeclaration","scope":12331,"src":"79336:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12327,"name":"string","nodeType":"ElementaryTypeName","src":"79336:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79335:33:17"},"returnParameters":{"id":12330,"nodeType":"ParameterList","parameters":[],"src":"79377:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12339,"nodeType":"FunctionDefinition","src":"79415:74:17","nodes":[],"documentation":{"id":12332,"nodeType":"StructuredDocumentation","src":"79384:26:17","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"79424:4:17","parameters":{"id":12337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12334,"mutability":"mutable","name":"target","nameLocation":"79437:6:17","nodeType":"VariableDeclaration","scope":12339,"src":"79429:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12333,"name":"address","nodeType":"ElementaryTypeName","src":"79429:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12336,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"79460:18:17","nodeType":"VariableDeclaration","scope":12339,"src":"79445:33:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12335,"name":"bytes","nodeType":"ElementaryTypeName","src":"79445:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79428:51:17"},"returnParameters":{"id":12338,"nodeType":"ParameterList","parameters":[],"src":"79488:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12345,"nodeType":"FunctionDefinition","src":"79525:42:17","nodes":[],"documentation":{"id":12340,"nodeType":"StructuredDocumentation","src":"79495:25:17","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"79534:3:17","parameters":{"id":12343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12342,"mutability":"mutable","name":"newBasefee","nameLocation":"79546:10:17","nodeType":"VariableDeclaration","scope":12345,"src":"79538:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12341,"name":"uint256","nodeType":"ElementaryTypeName","src":"79538:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79537:20:17"},"returnParameters":{"id":12344,"nodeType":"ParameterList","parameters":[],"src":"79566:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12353,"nodeType":"FunctionDefinition","src":"79634:79:17","nodes":[],"documentation":{"id":12346,"nodeType":"StructuredDocumentation","src":"79573:56:17","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"79643:12:17","parameters":{"id":12349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12348,"mutability":"mutable","name":"account","nameLocation":"79664:7:17","nodeType":"VariableDeclaration","scope":12353,"src":"79656:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12347,"name":"address","nodeType":"ElementaryTypeName","src":"79656:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"79655:17:17"},"returnParameters":{"id":12352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12351,"mutability":"mutable","name":"persistent","nameLocation":"79701:10:17","nodeType":"VariableDeclaration","scope":12353,"src":"79696:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12350,"name":"bool","nodeType":"ElementaryTypeName","src":"79696:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"79695:17:17"},"scope":12807,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12359,"nodeType":"FunctionDefinition","src":"79794:63:17","nodes":[],"documentation":{"id":12354,"nodeType":"StructuredDocumentation","src":"79719:70:17","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"79803:10:17","parameters":{"id":12357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12356,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"79830:16:17","nodeType":"VariableDeclaration","scope":12359,"src":"79814:32:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12355,"name":"string","nodeType":"ElementaryTypeName","src":"79814:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79813:34:17"},"returnParameters":{"id":12358,"nodeType":"ParameterList","parameters":[],"src":"79856:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12365,"nodeType":"FunctionDefinition","src":"80060:50:17","nodes":[],"documentation":{"id":12360,"nodeType":"StructuredDocumentation","src":"79863:192:17","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80069:14:17","parameters":{"id":12363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12362,"mutability":"mutable","name":"account","nameLocation":"80092:7:17","nodeType":"VariableDeclaration","scope":12365,"src":"80084:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12361,"name":"address","nodeType":"ElementaryTypeName","src":"80084:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80083:17:17"},"returnParameters":{"id":12364,"nodeType":"ParameterList","parameters":[],"src":"80109:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12373,"nodeType":"FunctionDefinition","src":"80155:69:17","nodes":[],"documentation":{"id":12366,"nodeType":"StructuredDocumentation","src":"80116:34:17","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80164:14:17","parameters":{"id":12371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12368,"mutability":"mutable","name":"account0","nameLocation":"80187:8:17","nodeType":"VariableDeclaration","scope":12373,"src":"80179:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12367,"name":"address","nodeType":"ElementaryTypeName","src":"80179:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12370,"mutability":"mutable","name":"account1","nameLocation":"80205:8:17","nodeType":"VariableDeclaration","scope":12373,"src":"80197:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12369,"name":"address","nodeType":"ElementaryTypeName","src":"80197:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80178:36:17"},"returnParameters":{"id":12372,"nodeType":"ParameterList","parameters":[],"src":"80223:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12383,"nodeType":"FunctionDefinition","src":"80269:87:17","nodes":[],"documentation":{"id":12374,"nodeType":"StructuredDocumentation","src":"80230:34:17","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80278:14:17","parameters":{"id":12381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12376,"mutability":"mutable","name":"account0","nameLocation":"80301:8:17","nodeType":"VariableDeclaration","scope":12383,"src":"80293:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12375,"name":"address","nodeType":"ElementaryTypeName","src":"80293:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12378,"mutability":"mutable","name":"account1","nameLocation":"80319:8:17","nodeType":"VariableDeclaration","scope":12383,"src":"80311:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12377,"name":"address","nodeType":"ElementaryTypeName","src":"80311:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12380,"mutability":"mutable","name":"account2","nameLocation":"80337:8:17","nodeType":"VariableDeclaration","scope":12383,"src":"80329:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12379,"name":"address","nodeType":"ElementaryTypeName","src":"80329:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80292:54:17"},"returnParameters":{"id":12382,"nodeType":"ParameterList","parameters":[],"src":"80355:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12390,"nodeType":"FunctionDefinition","src":"80401:62:17","nodes":[],"documentation":{"id":12384,"nodeType":"StructuredDocumentation","src":"80362:34:17","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80410:14:17","parameters":{"id":12388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12387,"mutability":"mutable","name":"accounts","nameLocation":"80444:8:17","nodeType":"VariableDeclaration","scope":12390,"src":"80425:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12385,"name":"address","nodeType":"ElementaryTypeName","src":"80425:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12386,"nodeType":"ArrayTypeName","src":"80425:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"80424:29:17"},"returnParameters":{"id":12389,"nodeType":"ParameterList","parameters":[],"src":"80462:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12400,"nodeType":"FunctionDefinition","src":"80534:97:17","nodes":[],"documentation":{"id":12391,"nodeType":"StructuredDocumentation","src":"80469:60:17","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"80543:14:17","parameters":{"id":12398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12393,"mutability":"mutable","name":"callee","nameLocation":"80566:6:17","nodeType":"VariableDeclaration","scope":12400,"src":"80558:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12392,"name":"address","nodeType":"ElementaryTypeName","src":"80558:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12395,"mutability":"mutable","name":"data","nameLocation":"80589:4:17","nodeType":"VariableDeclaration","scope":12400,"src":"80574:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12394,"name":"bytes","nodeType":"ElementaryTypeName","src":"80574:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12397,"mutability":"mutable","name":"revertData","nameLocation":"80610:10:17","nodeType":"VariableDeclaration","scope":12400,"src":"80595:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12396,"name":"bytes","nodeType":"ElementaryTypeName","src":"80595:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"80557:64:17"},"returnParameters":{"id":12399,"nodeType":"ParameterList","parameters":[],"src":"80630:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12412,"nodeType":"FunctionDefinition","src":"80731:123:17","nodes":[],"documentation":{"id":12401,"nodeType":"StructuredDocumentation","src":"80637:89:17","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"80740:14:17","parameters":{"id":12410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12403,"mutability":"mutable","name":"callee","nameLocation":"80763:6:17","nodeType":"VariableDeclaration","scope":12412,"src":"80755:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12402,"name":"address","nodeType":"ElementaryTypeName","src":"80755:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12405,"mutability":"mutable","name":"msgValue","nameLocation":"80779:8:17","nodeType":"VariableDeclaration","scope":12412,"src":"80771:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12404,"name":"uint256","nodeType":"ElementaryTypeName","src":"80771:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12407,"mutability":"mutable","name":"data","nameLocation":"80804:4:17","nodeType":"VariableDeclaration","scope":12412,"src":"80789:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12406,"name":"bytes","nodeType":"ElementaryTypeName","src":"80789:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12409,"mutability":"mutable","name":"revertData","nameLocation":"80825:10:17","nodeType":"VariableDeclaration","scope":12412,"src":"80810:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12408,"name":"bytes","nodeType":"ElementaryTypeName","src":"80810:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"80754:82:17"},"returnParameters":{"id":12411,"nodeType":"ParameterList","parameters":[],"src":"80853:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12422,"nodeType":"FunctionDefinition","src":"81114:91:17","nodes":[],"documentation":{"id":12413,"nodeType":"StructuredDocumentation","src":"80860:249:17","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"81123:8:17","parameters":{"id":12420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12415,"mutability":"mutable","name":"callee","nameLocation":"81140:6:17","nodeType":"VariableDeclaration","scope":12422,"src":"81132:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12414,"name":"address","nodeType":"ElementaryTypeName","src":"81132:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12417,"mutability":"mutable","name":"data","nameLocation":"81163:4:17","nodeType":"VariableDeclaration","scope":12422,"src":"81148:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12416,"name":"bytes","nodeType":"ElementaryTypeName","src":"81148:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12419,"mutability":"mutable","name":"returnData","nameLocation":"81184:10:17","nodeType":"VariableDeclaration","scope":12422,"src":"81169:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12418,"name":"bytes","nodeType":"ElementaryTypeName","src":"81169:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81131:64:17"},"returnParameters":{"id":12421,"nodeType":"ParameterList","parameters":[],"src":"81204:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12434,"nodeType":"FunctionDefinition","src":"81380:109:17","nodes":[],"documentation":{"id":12423,"nodeType":"StructuredDocumentation","src":"81211:164:17","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"81389:8:17","parameters":{"id":12432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12425,"mutability":"mutable","name":"callee","nameLocation":"81406:6:17","nodeType":"VariableDeclaration","scope":12434,"src":"81398:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12424,"name":"address","nodeType":"ElementaryTypeName","src":"81398:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12427,"mutability":"mutable","name":"msgValue","nameLocation":"81422:8:17","nodeType":"VariableDeclaration","scope":12434,"src":"81414:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12426,"name":"uint256","nodeType":"ElementaryTypeName","src":"81414:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12429,"mutability":"mutable","name":"data","nameLocation":"81447:4:17","nodeType":"VariableDeclaration","scope":12434,"src":"81432:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12428,"name":"bytes","nodeType":"ElementaryTypeName","src":"81432:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12431,"mutability":"mutable","name":"returnData","nameLocation":"81468:10:17","nodeType":"VariableDeclaration","scope":12434,"src":"81453:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12430,"name":"bytes","nodeType":"ElementaryTypeName","src":"81453:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81397:82:17"},"returnParameters":{"id":12433,"nodeType":"ParameterList","parameters":[],"src":"81488:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12440,"nodeType":"FunctionDefinition","src":"81564:43:17","nodes":[],"documentation":{"id":12435,"nodeType":"StructuredDocumentation","src":"81495:64:17","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"81573:5:17","parameters":{"id":12438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12437,"mutability":"mutable","name":"msgSender","nameLocation":"81587:9:17","nodeType":"VariableDeclaration","scope":12440,"src":"81579:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12436,"name":"address","nodeType":"ElementaryTypeName","src":"81579:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81578:19:17"},"returnParameters":{"id":12439,"nodeType":"ParameterList","parameters":[],"src":"81606:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12448,"nodeType":"FunctionDefinition","src":"81726:61:17","nodes":[],"documentation":{"id":12441,"nodeType":"StructuredDocumentation","src":"81613:108:17","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"81735:5:17","parameters":{"id":12446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12443,"mutability":"mutable","name":"msgSender","nameLocation":"81749:9:17","nodeType":"VariableDeclaration","scope":12448,"src":"81741:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12442,"name":"address","nodeType":"ElementaryTypeName","src":"81741:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12445,"mutability":"mutable","name":"txOrigin","nameLocation":"81768:8:17","nodeType":"VariableDeclaration","scope":12448,"src":"81760:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12444,"name":"address","nodeType":"ElementaryTypeName","src":"81760:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81740:37:17"},"returnParameters":{"id":12447,"nodeType":"ParameterList","parameters":[],"src":"81786:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12454,"nodeType":"FunctionDefinition","src":"81964:52:17","nodes":[],"documentation":{"id":12449,"nodeType":"StructuredDocumentation","src":"81793:166:17","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"81973:10:17","parameters":{"id":12452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12451,"mutability":"mutable","name":"newPrevrandao","nameLocation":"81992:13:17","nodeType":"VariableDeclaration","scope":12454,"src":"81984:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81984:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"81983:23:17"},"returnParameters":{"id":12453,"nodeType":"ParameterList","parameters":[],"src":"82015:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12460,"nodeType":"FunctionDefinition","src":"82193:52:17","nodes":[],"documentation":{"id":12455,"nodeType":"StructuredDocumentation","src":"82022:166:17","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"82202:10:17","parameters":{"id":12458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12457,"mutability":"mutable","name":"newPrevrandao","nameLocation":"82221:13:17","nodeType":"VariableDeclaration","scope":12460,"src":"82213:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12456,"name":"uint256","nodeType":"ElementaryTypeName","src":"82213:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82212:23:17"},"returnParameters":{"id":12459,"nodeType":"ParameterList","parameters":[],"src":"82244:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12467,"nodeType":"FunctionDefinition","src":"82412:56:17","nodes":[],"documentation":{"id":12461,"nodeType":"StructuredDocumentation","src":"82251:156:17","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"82421:10:17","parameters":{"id":12465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12464,"mutability":"mutable","name":"hashes","nameLocation":"82451:6:17","nodeType":"VariableDeclaration","scope":12467,"src":"82432:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82432:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12463,"nodeType":"ArrayTypeName","src":"82432:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"82431:27:17"},"returnParameters":{"id":12466,"nodeType":"ParameterList","parameters":[],"src":"82467:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12474,"nodeType":"FunctionDefinition","src":"82646:73:17","nodes":[],"documentation":{"id":12468,"nodeType":"StructuredDocumentation","src":"82474:167:17","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"82655:13:17","parameters":{"id":12469,"nodeType":"ParameterList","parameters":[],"src":"82668:2:17"},"returnParameters":{"id":12473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12472,"mutability":"mutable","name":"hashes","nameLocation":"82711:6:17","nodeType":"VariableDeclaration","scope":12474,"src":"82694:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82694:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12471,"nodeType":"ArrayTypeName","src":"82694:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"82693:25:17"},"scope":12807,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12485,"nodeType":"FunctionDefinition","src":"82847:101:17","nodes":[],"documentation":{"id":12475,"nodeType":"StructuredDocumentation","src":"82725:117:17","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"82856:11:17","parameters":{"id":12476,"nodeType":"ParameterList","parameters":[],"src":"82867:2:17"},"returnParameters":{"id":12484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12479,"mutability":"mutable","name":"callerMode","nameLocation":"82899:10:17","nodeType":"VariableDeclaration","scope":12485,"src":"82888:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$9013","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":12478,"nodeType":"UserDefinedTypeName","pathNode":{"id":12477,"name":"CallerMode","nameLocations":["82888:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":9013,"src":"82888:10:17"},"referencedDeclaration":9013,"src":"82888:10:17","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$9013","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":12481,"mutability":"mutable","name":"msgSender","nameLocation":"82919:9:17","nodeType":"VariableDeclaration","scope":12485,"src":"82911:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12480,"name":"address","nodeType":"ElementaryTypeName","src":"82911:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12483,"mutability":"mutable","name":"txOrigin","nameLocation":"82938:8:17","nodeType":"VariableDeclaration","scope":12485,"src":"82930:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12482,"name":"address","nodeType":"ElementaryTypeName","src":"82930:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82887:60:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12491,"nodeType":"FunctionDefinition","src":"83036:46:17","nodes":[],"documentation":{"id":12486,"nodeType":"StructuredDocumentation","src":"82954:77:17","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"83045:10:17","parameters":{"id":12489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12488,"mutability":"mutable","name":"account","nameLocation":"83064:7:17","nodeType":"VariableDeclaration","scope":12491,"src":"83056:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12487,"name":"address","nodeType":"ElementaryTypeName","src":"83056:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83055:17:17"},"returnParameters":{"id":12490,"nodeType":"ParameterList","parameters":[],"src":"83081:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12499,"nodeType":"FunctionDefinition","src":"83425:70:17","nodes":[],"documentation":{"id":12492,"nodeType":"StructuredDocumentation","src":"83088:332:17","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"83434:8:17","parameters":{"id":12495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12494,"mutability":"mutable","name":"snapshotId","nameLocation":"83451:10:17","nodeType":"VariableDeclaration","scope":12499,"src":"83443:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12493,"name":"uint256","nodeType":"ElementaryTypeName","src":"83443:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83442:20:17"},"returnParameters":{"id":12498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12497,"mutability":"mutable","name":"success","nameLocation":"83486:7:17","nodeType":"VariableDeclaration","scope":12499,"src":"83481:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12496,"name":"bool","nodeType":"ElementaryTypeName","src":"83481:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83480:14:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12507,"nodeType":"FunctionDefinition","src":"83778:79:17","nodes":[],"documentation":{"id":12500,"nodeType":"StructuredDocumentation","src":"83501:272:17","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"83787:17:17","parameters":{"id":12503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12502,"mutability":"mutable","name":"snapshotId","nameLocation":"83813:10:17","nodeType":"VariableDeclaration","scope":12507,"src":"83805:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12501,"name":"uint256","nodeType":"ElementaryTypeName","src":"83805:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83804:20:17"},"returnParameters":{"id":12506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12505,"mutability":"mutable","name":"success","nameLocation":"83848:7:17","nodeType":"VariableDeclaration","scope":12507,"src":"83843:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12504,"name":"bool","nodeType":"ElementaryTypeName","src":"83843:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83842:14:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12513,"nodeType":"FunctionDefinition","src":"83954:52:17","nodes":[],"documentation":{"id":12508,"nodeType":"StructuredDocumentation","src":"83863:86:17","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"83963:16:17","parameters":{"id":12511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12510,"mutability":"mutable","name":"account","nameLocation":"83988:7:17","nodeType":"VariableDeclaration","scope":12513,"src":"83980:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12509,"name":"address","nodeType":"ElementaryTypeName","src":"83980:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83979:17:17"},"returnParameters":{"id":12512,"nodeType":"ParameterList","parameters":[],"src":"84005:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12520,"nodeType":"FunctionDefinition","src":"84053:64:17","nodes":[],"documentation":{"id":12514,"nodeType":"StructuredDocumentation","src":"84012:36:17","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"84062:16:17","parameters":{"id":12518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12517,"mutability":"mutable","name":"accounts","nameLocation":"84098:8:17","nodeType":"VariableDeclaration","scope":12520,"src":"84079:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12515,"name":"address","nodeType":"ElementaryTypeName","src":"84079:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12516,"nodeType":"ArrayTypeName","src":"84079:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"84078:29:17"},"returnParameters":{"id":12519,"nodeType":"ParameterList","parameters":[],"src":"84116:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12526,"nodeType":"FunctionDefinition","src":"84152:42:17","nodes":[],"documentation":{"id":12521,"nodeType":"StructuredDocumentation","src":"84123:24:17","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"84161:4:17","parameters":{"id":12524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12523,"mutability":"mutable","name":"newHeight","nameLocation":"84174:9:17","nodeType":"VariableDeclaration","scope":12526,"src":"84166:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12522,"name":"uint256","nodeType":"ElementaryTypeName","src":"84166:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84165:19:17"},"returnParameters":{"id":12525,"nodeType":"ParameterList","parameters":[],"src":"84193:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12532,"nodeType":"FunctionDefinition","src":"84333:48:17","nodes":[],"documentation":{"id":12527,"nodeType":"StructuredDocumentation","src":"84200:128:17","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84342:8:17","parameters":{"id":12530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12529,"mutability":"mutable","name":"blockNumber","nameLocation":"84359:11:17","nodeType":"VariableDeclaration","scope":12532,"src":"84351:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12528,"name":"uint256","nodeType":"ElementaryTypeName","src":"84351:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84350:21:17"},"returnParameters":{"id":12531,"nodeType":"ParameterList","parameters":[],"src":"84380:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12538,"nodeType":"FunctionDefinition","src":"84596:43:17","nodes":[],"documentation":{"id":12533,"nodeType":"StructuredDocumentation","src":"84387:204:17","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84605:8:17","parameters":{"id":12536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12535,"mutability":"mutable","name":"txHash","nameLocation":"84622:6:17","nodeType":"VariableDeclaration","scope":12538,"src":"84614:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84614:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84613:16:17"},"returnParameters":{"id":12537,"nodeType":"ParameterList","parameters":[],"src":"84638:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12546,"nodeType":"FunctionDefinition","src":"84699:64:17","nodes":[],"documentation":{"id":12539,"nodeType":"StructuredDocumentation","src":"84645:49:17","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84708:8:17","parameters":{"id":12544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12541,"mutability":"mutable","name":"forkId","nameLocation":"84725:6:17","nodeType":"VariableDeclaration","scope":12546,"src":"84717:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12540,"name":"uint256","nodeType":"ElementaryTypeName","src":"84717:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12543,"mutability":"mutable","name":"blockNumber","nameLocation":"84741:11:17","nodeType":"VariableDeclaration","scope":12546,"src":"84733:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12542,"name":"uint256","nodeType":"ElementaryTypeName","src":"84733:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84716:37:17"},"returnParameters":{"id":12545,"nodeType":"ParameterList","parameters":[],"src":"84762:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12554,"nodeType":"FunctionDefinition","src":"84899:59:17","nodes":[],"documentation":{"id":12547,"nodeType":"StructuredDocumentation","src":"84769:125:17","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84908:8:17","parameters":{"id":12552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12549,"mutability":"mutable","name":"forkId","nameLocation":"84925:6:17","nodeType":"VariableDeclaration","scope":12554,"src":"84917:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12548,"name":"uint256","nodeType":"ElementaryTypeName","src":"84917:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12551,"mutability":"mutable","name":"txHash","nameLocation":"84941:6:17","nodeType":"VariableDeclaration","scope":12554,"src":"84933:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84933:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84916:32:17"},"returnParameters":{"id":12553,"nodeType":"ParameterList","parameters":[],"src":"84957:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12560,"nodeType":"FunctionDefinition","src":"85071:45:17","nodes":[],"documentation":{"id":12555,"nodeType":"StructuredDocumentation","src":"84964:102:17","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"85080:10:17","parameters":{"id":12558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12557,"mutability":"mutable","name":"forkId","nameLocation":"85099:6:17","nodeType":"VariableDeclaration","scope":12560,"src":"85091:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12556,"name":"uint256","nodeType":"ElementaryTypeName","src":"85091:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85090:16:17"},"returnParameters":{"id":12559,"nodeType":"ParameterList","parameters":[],"src":"85115:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12568,"nodeType":"FunctionDefinition","src":"85214:61:17","nodes":[],"documentation":{"id":12561,"nodeType":"StructuredDocumentation","src":"85122:87:17","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"85223:8:17","parameters":{"id":12566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12563,"mutability":"mutable","name":"account","nameLocation":"85240:7:17","nodeType":"VariableDeclaration","scope":12568,"src":"85232:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12562,"name":"address","nodeType":"ElementaryTypeName","src":"85232:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12565,"mutability":"mutable","name":"newNonce","nameLocation":"85256:8:17","nodeType":"VariableDeclaration","scope":12568,"src":"85249:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12564,"name":"uint64","nodeType":"ElementaryTypeName","src":"85249:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"85231:34:17"},"returnParameters":{"id":12567,"nodeType":"ParameterList","parameters":[],"src":"85274:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12576,"nodeType":"FunctionDefinition","src":"85341:67:17","nodes":[],"documentation":{"id":12569,"nodeType":"StructuredDocumentation","src":"85281:55:17","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"85350:14:17","parameters":{"id":12574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12571,"mutability":"mutable","name":"account","nameLocation":"85373:7:17","nodeType":"VariableDeclaration","scope":12576,"src":"85365:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12570,"name":"address","nodeType":"ElementaryTypeName","src":"85365:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12573,"mutability":"mutable","name":"newNonce","nameLocation":"85389:8:17","nodeType":"VariableDeclaration","scope":12576,"src":"85382:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12572,"name":"uint64","nodeType":"ElementaryTypeName","src":"85382:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"85364:34:17"},"returnParameters":{"id":12575,"nodeType":"ParameterList","parameters":[],"src":"85407:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12582,"nodeType":"FunctionDefinition","src":"85563:58:17","nodes":[],"documentation":{"id":12577,"nodeType":"StructuredDocumentation","src":"85414:144:17","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"85572:8:17","parameters":{"id":12578,"nodeType":"ParameterList","parameters":[],"src":"85580:2:17"},"returnParameters":{"id":12581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12580,"mutability":"mutable","name":"snapshotId","nameLocation":"85609:10:17","nodeType":"VariableDeclaration","scope":12582,"src":"85601:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12579,"name":"uint256","nodeType":"ElementaryTypeName","src":"85601:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85600:20:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12588,"nodeType":"FunctionDefinition","src":"85728:48:17","nodes":[],"documentation":{"id":12583,"nodeType":"StructuredDocumentation","src":"85627:96:17","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"85737:10:17","parameters":{"id":12586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12585,"mutability":"mutable","name":"msgSender","nameLocation":"85756:9:17","nodeType":"VariableDeclaration","scope":12588,"src":"85748:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12584,"name":"address","nodeType":"ElementaryTypeName","src":"85748:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85747:19:17"},"returnParameters":{"id":12587,"nodeType":"ParameterList","parameters":[],"src":"85775:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12596,"nodeType":"FunctionDefinition","src":"85927:66:17","nodes":[],"documentation":{"id":12589,"nodeType":"StructuredDocumentation","src":"85782:140:17","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"85936:10:17","parameters":{"id":12594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12591,"mutability":"mutable","name":"msgSender","nameLocation":"85955:9:17","nodeType":"VariableDeclaration","scope":12596,"src":"85947:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12590,"name":"address","nodeType":"ElementaryTypeName","src":"85947:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12593,"mutability":"mutable","name":"txOrigin","nameLocation":"85974:8:17","nodeType":"VariableDeclaration","scope":12596,"src":"85966:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12592,"name":"address","nodeType":"ElementaryTypeName","src":"85966:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85946:37:17"},"returnParameters":{"id":12595,"nodeType":"ParameterList","parameters":[],"src":"85992:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12600,"nodeType":"FunctionDefinition","src":"86068:30:17","nodes":[],"documentation":{"id":12597,"nodeType":"StructuredDocumentation","src":"85999:64:17","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"86077:9:17","parameters":{"id":12598,"nodeType":"ParameterList","parameters":[],"src":"86086:2:17"},"returnParameters":{"id":12599,"nodeType":"ParameterList","parameters":[],"src":"86097:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12610,"nodeType":"FunctionDefinition","src":"86156:69:17","nodes":[],"documentation":{"id":12601,"nodeType":"StructuredDocumentation","src":"86104:47:17","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"86165:5:17","parameters":{"id":12608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12603,"mutability":"mutable","name":"target","nameLocation":"86179:6:17","nodeType":"VariableDeclaration","scope":12610,"src":"86171:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12602,"name":"address","nodeType":"ElementaryTypeName","src":"86171:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12605,"mutability":"mutable","name":"slot","nameLocation":"86195:4:17","nodeType":"VariableDeclaration","scope":12610,"src":"86187:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86187:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12607,"mutability":"mutable","name":"value","nameLocation":"86209:5:17","nodeType":"VariableDeclaration","scope":12610,"src":"86201:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86201:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86170:45:17"},"returnParameters":{"id":12609,"nodeType":"ParameterList","parameters":[],"src":"86224:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12616,"nodeType":"FunctionDefinition","src":"86328:43:17","nodes":[],"documentation":{"id":12611,"nodeType":"StructuredDocumentation","src":"86231:92:17","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"86337:8:17","parameters":{"id":12614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12613,"mutability":"mutable","name":"txHash","nameLocation":"86354:6:17","nodeType":"VariableDeclaration","scope":12616,"src":"86346:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86346:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86345:16:17"},"returnParameters":{"id":12615,"nodeType":"ParameterList","parameters":[],"src":"86370:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12624,"nodeType":"FunctionDefinition","src":"86473:59:17","nodes":[],"documentation":{"id":12617,"nodeType":"StructuredDocumentation","src":"86377:91:17","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"86482:8:17","parameters":{"id":12622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12619,"mutability":"mutable","name":"forkId","nameLocation":"86499:6:17","nodeType":"VariableDeclaration","scope":12624,"src":"86491:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12618,"name":"uint256","nodeType":"ElementaryTypeName","src":"86491:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12621,"mutability":"mutable","name":"txHash","nameLocation":"86515:6:17","nodeType":"VariableDeclaration","scope":12624,"src":"86507:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86507:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86490:32:17"},"returnParameters":{"id":12623,"nodeType":"ParameterList","parameters":[],"src":"86531:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12630,"nodeType":"FunctionDefinition","src":"86566:50:17","nodes":[],"documentation":{"id":12625,"nodeType":"StructuredDocumentation","src":"86538:23:17","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"86575:10:17","parameters":{"id":12628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12627,"mutability":"mutable","name":"newGasPrice","nameLocation":"86594:11:17","nodeType":"VariableDeclaration","scope":12630,"src":"86586:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12626,"name":"uint256","nodeType":"ElementaryTypeName","src":"86586:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86585:21:17"},"returnParameters":{"id":12629,"nodeType":"ParameterList","parameters":[],"src":"86615:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12636,"nodeType":"FunctionDefinition","src":"86654:45:17","nodes":[],"documentation":{"id":12631,"nodeType":"StructuredDocumentation","src":"86622:27:17","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"86663:4:17","parameters":{"id":12634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12633,"mutability":"mutable","name":"newTimestamp","nameLocation":"86676:12:17","nodeType":"VariableDeclaration","scope":12636,"src":"86668:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12632,"name":"uint256","nodeType":"ElementaryTypeName","src":"86668:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86667:22:17"},"returnParameters":{"id":12635,"nodeType":"ParameterList","parameters":[],"src":"86698:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12648,"nodeType":"FunctionDefinition","src":"86851:105:17","nodes":[],"documentation":{"id":12637,"nodeType":"StructuredDocumentation","src":"86739:107:17","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"86860:16:17","parameters":{"id":12646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12639,"mutability":"mutable","name":"callee","nameLocation":"86885:6:17","nodeType":"VariableDeclaration","scope":12648,"src":"86877:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12638,"name":"address","nodeType":"ElementaryTypeName","src":"86877:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12641,"mutability":"mutable","name":"msgValue","nameLocation":"86901:8:17","nodeType":"VariableDeclaration","scope":12648,"src":"86893:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12640,"name":"uint256","nodeType":"ElementaryTypeName","src":"86893:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12643,"mutability":"mutable","name":"minGas","nameLocation":"86918:6:17","nodeType":"VariableDeclaration","scope":12648,"src":"86911:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12642,"name":"uint64","nodeType":"ElementaryTypeName","src":"86911:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12645,"mutability":"mutable","name":"data","nameLocation":"86941:4:17","nodeType":"VariableDeclaration","scope":12648,"src":"86926:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12644,"name":"bytes","nodeType":"ElementaryTypeName","src":"86926:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"86876:70:17"},"returnParameters":{"id":12647,"nodeType":"ParameterList","parameters":[],"src":"86955:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12662,"nodeType":"FunctionDefinition","src":"87089:127:17","nodes":[],"documentation":{"id":12649,"nodeType":"StructuredDocumentation","src":"86962:122:17","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"87098:16:17","parameters":{"id":12660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12651,"mutability":"mutable","name":"callee","nameLocation":"87123:6:17","nodeType":"VariableDeclaration","scope":12662,"src":"87115:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12650,"name":"address","nodeType":"ElementaryTypeName","src":"87115:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12653,"mutability":"mutable","name":"msgValue","nameLocation":"87139:8:17","nodeType":"VariableDeclaration","scope":12662,"src":"87131:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12652,"name":"uint256","nodeType":"ElementaryTypeName","src":"87131:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12655,"mutability":"mutable","name":"minGas","nameLocation":"87156:6:17","nodeType":"VariableDeclaration","scope":12662,"src":"87149:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12654,"name":"uint64","nodeType":"ElementaryTypeName","src":"87149:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12657,"mutability":"mutable","name":"data","nameLocation":"87179:4:17","nodeType":"VariableDeclaration","scope":12662,"src":"87164:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12656,"name":"bytes","nodeType":"ElementaryTypeName","src":"87164:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12659,"mutability":"mutable","name":"count","nameLocation":"87192:5:17","nodeType":"VariableDeclaration","scope":12662,"src":"87185:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12658,"name":"uint64","nodeType":"ElementaryTypeName","src":"87185:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87114:84:17"},"returnParameters":{"id":12661,"nodeType":"ParameterList","parameters":[],"src":"87215:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12670,"nodeType":"FunctionDefinition","src":"87348:66:17","nodes":[],"documentation":{"id":12663,"nodeType":"StructuredDocumentation","src":"87222:121:17","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87357:10:17","parameters":{"id":12668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12665,"mutability":"mutable","name":"callee","nameLocation":"87376:6:17","nodeType":"VariableDeclaration","scope":12670,"src":"87368:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12664,"name":"address","nodeType":"ElementaryTypeName","src":"87368:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12667,"mutability":"mutable","name":"data","nameLocation":"87399:4:17","nodeType":"VariableDeclaration","scope":12670,"src":"87384:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12666,"name":"bytes","nodeType":"ElementaryTypeName","src":"87384:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87367:37:17"},"returnParameters":{"id":12669,"nodeType":"ParameterList","parameters":[],"src":"87413:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12680,"nodeType":"FunctionDefinition","src":"87501:80:17","nodes":[],"documentation":{"id":12671,"nodeType":"StructuredDocumentation","src":"87420:76:17","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87510:10:17","parameters":{"id":12678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12673,"mutability":"mutable","name":"callee","nameLocation":"87529:6:17","nodeType":"VariableDeclaration","scope":12680,"src":"87521:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12672,"name":"address","nodeType":"ElementaryTypeName","src":"87521:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12675,"mutability":"mutable","name":"data","nameLocation":"87552:4:17","nodeType":"VariableDeclaration","scope":12680,"src":"87537:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12674,"name":"bytes","nodeType":"ElementaryTypeName","src":"87537:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12677,"mutability":"mutable","name":"count","nameLocation":"87565:5:17","nodeType":"VariableDeclaration","scope":12680,"src":"87558:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12676,"name":"uint64","nodeType":"ElementaryTypeName","src":"87558:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87520:51:17"},"returnParameters":{"id":12679,"nodeType":"ParameterList","parameters":[],"src":"87580:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12690,"nodeType":"FunctionDefinition","src":"87669:84:17","nodes":[],"documentation":{"id":12681,"nodeType":"StructuredDocumentation","src":"87587:77:17","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87678:10:17","parameters":{"id":12688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12683,"mutability":"mutable","name":"callee","nameLocation":"87697:6:17","nodeType":"VariableDeclaration","scope":12690,"src":"87689:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12682,"name":"address","nodeType":"ElementaryTypeName","src":"87689:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12685,"mutability":"mutable","name":"msgValue","nameLocation":"87713:8:17","nodeType":"VariableDeclaration","scope":12690,"src":"87705:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12684,"name":"uint256","nodeType":"ElementaryTypeName","src":"87705:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12687,"mutability":"mutable","name":"data","nameLocation":"87738:4:17","nodeType":"VariableDeclaration","scope":12690,"src":"87723:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12686,"name":"bytes","nodeType":"ElementaryTypeName","src":"87723:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87688:55:17"},"returnParameters":{"id":12689,"nodeType":"ParameterList","parameters":[],"src":"87752:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12702,"nodeType":"FunctionDefinition","src":"87856:98:17","nodes":[],"documentation":{"id":12691,"nodeType":"StructuredDocumentation","src":"87759:92:17","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87865:10:17","parameters":{"id":12700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12693,"mutability":"mutable","name":"callee","nameLocation":"87884:6:17","nodeType":"VariableDeclaration","scope":12702,"src":"87876:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12692,"name":"address","nodeType":"ElementaryTypeName","src":"87876:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12695,"mutability":"mutable","name":"msgValue","nameLocation":"87900:8:17","nodeType":"VariableDeclaration","scope":12702,"src":"87892:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12694,"name":"uint256","nodeType":"ElementaryTypeName","src":"87892:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12697,"mutability":"mutable","name":"data","nameLocation":"87925:4:17","nodeType":"VariableDeclaration","scope":12702,"src":"87910:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12696,"name":"bytes","nodeType":"ElementaryTypeName","src":"87910:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12699,"mutability":"mutable","name":"count","nameLocation":"87938:5:17","nodeType":"VariableDeclaration","scope":12702,"src":"87931:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12698,"name":"uint64","nodeType":"ElementaryTypeName","src":"87931:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87875:69:17"},"returnParameters":{"id":12701,"nodeType":"ParameterList","parameters":[],"src":"87953:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12714,"nodeType":"FunctionDefinition","src":"88047:96:17","nodes":[],"documentation":{"id":12703,"nodeType":"StructuredDocumentation","src":"87960:82:17","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88056:10:17","parameters":{"id":12712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12705,"mutability":"mutable","name":"callee","nameLocation":"88075:6:17","nodeType":"VariableDeclaration","scope":12714,"src":"88067:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12704,"name":"address","nodeType":"ElementaryTypeName","src":"88067:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12707,"mutability":"mutable","name":"msgValue","nameLocation":"88091:8:17","nodeType":"VariableDeclaration","scope":12714,"src":"88083:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12706,"name":"uint256","nodeType":"ElementaryTypeName","src":"88083:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12709,"mutability":"mutable","name":"gas","nameLocation":"88108:3:17","nodeType":"VariableDeclaration","scope":12714,"src":"88101:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12708,"name":"uint64","nodeType":"ElementaryTypeName","src":"88101:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12711,"mutability":"mutable","name":"data","nameLocation":"88128:4:17","nodeType":"VariableDeclaration","scope":12714,"src":"88113:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12710,"name":"bytes","nodeType":"ElementaryTypeName","src":"88113:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88066:67:17"},"returnParameters":{"id":12713,"nodeType":"ParameterList","parameters":[],"src":"88142:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12728,"nodeType":"FunctionDefinition","src":"88252:110:17","nodes":[],"documentation":{"id":12715,"nodeType":"StructuredDocumentation","src":"88149:98:17","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88261:10:17","parameters":{"id":12726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12717,"mutability":"mutable","name":"callee","nameLocation":"88280:6:17","nodeType":"VariableDeclaration","scope":12728,"src":"88272:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12716,"name":"address","nodeType":"ElementaryTypeName","src":"88272:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12719,"mutability":"mutable","name":"msgValue","nameLocation":"88296:8:17","nodeType":"VariableDeclaration","scope":12728,"src":"88288:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12718,"name":"uint256","nodeType":"ElementaryTypeName","src":"88288:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12721,"mutability":"mutable","name":"gas","nameLocation":"88313:3:17","nodeType":"VariableDeclaration","scope":12728,"src":"88306:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12720,"name":"uint64","nodeType":"ElementaryTypeName","src":"88306:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12723,"mutability":"mutable","name":"data","nameLocation":"88333:4:17","nodeType":"VariableDeclaration","scope":12728,"src":"88318:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12722,"name":"bytes","nodeType":"ElementaryTypeName","src":"88318:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12725,"mutability":"mutable","name":"count","nameLocation":"88346:5:17","nodeType":"VariableDeclaration","scope":12728,"src":"88339:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12724,"name":"uint64","nodeType":"ElementaryTypeName","src":"88339:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88271:81:17"},"returnParameters":{"id":12727,"nodeType":"ParameterList","parameters":[],"src":"88361:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12740,"nodeType":"FunctionDefinition","src":"88701:99:17","nodes":[],"documentation":{"id":12729,"nodeType":"StructuredDocumentation","src":"88368:328:17","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"88710:10:17","parameters":{"id":12738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12731,"mutability":"mutable","name":"checkTopic1","nameLocation":"88726:11:17","nodeType":"VariableDeclaration","scope":12740,"src":"88721:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12730,"name":"bool","nodeType":"ElementaryTypeName","src":"88721:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12733,"mutability":"mutable","name":"checkTopic2","nameLocation":"88744:11:17","nodeType":"VariableDeclaration","scope":12740,"src":"88739:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12732,"name":"bool","nodeType":"ElementaryTypeName","src":"88739:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12735,"mutability":"mutable","name":"checkTopic3","nameLocation":"88762:11:17","nodeType":"VariableDeclaration","scope":12740,"src":"88757:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12734,"name":"bool","nodeType":"ElementaryTypeName","src":"88757:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12737,"mutability":"mutable","name":"checkData","nameLocation":"88780:9:17","nodeType":"VariableDeclaration","scope":12740,"src":"88775:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12736,"name":"bool","nodeType":"ElementaryTypeName","src":"88775:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"88720:70:17"},"returnParameters":{"id":12739,"nodeType":"ParameterList","parameters":[],"src":"88799:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12754,"nodeType":"FunctionDefinition","src":"88903:124:17","nodes":[],"documentation":{"id":12741,"nodeType":"StructuredDocumentation","src":"88806:92:17","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"88912:10:17","parameters":{"id":12752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12743,"mutability":"mutable","name":"checkTopic1","nameLocation":"88928:11:17","nodeType":"VariableDeclaration","scope":12754,"src":"88923:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12742,"name":"bool","nodeType":"ElementaryTypeName","src":"88923:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12745,"mutability":"mutable","name":"checkTopic2","nameLocation":"88946:11:17","nodeType":"VariableDeclaration","scope":12754,"src":"88941:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12744,"name":"bool","nodeType":"ElementaryTypeName","src":"88941:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12747,"mutability":"mutable","name":"checkTopic3","nameLocation":"88964:11:17","nodeType":"VariableDeclaration","scope":12754,"src":"88959:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12746,"name":"bool","nodeType":"ElementaryTypeName","src":"88959:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12749,"mutability":"mutable","name":"checkData","nameLocation":"88982:9:17","nodeType":"VariableDeclaration","scope":12754,"src":"88977:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12748,"name":"bool","nodeType":"ElementaryTypeName","src":"88977:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12751,"mutability":"mutable","name":"emitter","nameLocation":"89001:7:17","nodeType":"VariableDeclaration","scope":12754,"src":"88993:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12750,"name":"address","nodeType":"ElementaryTypeName","src":"88993:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88922:87:17"},"returnParameters":{"id":12753,"nodeType":"ParameterList","parameters":[],"src":"89026:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12758,"nodeType":"FunctionDefinition","src":"89297:31:17","nodes":[],"documentation":{"id":12755,"nodeType":"StructuredDocumentation","src":"89033:259:17","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"89306:10:17","parameters":{"id":12756,"nodeType":"ParameterList","parameters":[],"src":"89316:2:17"},"returnParameters":{"id":12757,"nodeType":"ParameterList","parameters":[],"src":"89327:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12764,"nodeType":"FunctionDefinition","src":"89431:46:17","nodes":[],"documentation":{"id":12759,"nodeType":"StructuredDocumentation","src":"89334:92:17","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"89440:10:17","parameters":{"id":12762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12761,"mutability":"mutable","name":"emitter","nameLocation":"89459:7:17","nodeType":"VariableDeclaration","scope":12764,"src":"89451:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12760,"name":"address","nodeType":"ElementaryTypeName","src":"89451:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89450:17:17"},"returnParameters":{"id":12763,"nodeType":"ParameterList","parameters":[],"src":"89476:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12768,"nodeType":"FunctionDefinition","src":"89543:33:17","nodes":[],"documentation":{"id":12765,"nodeType":"StructuredDocumentation","src":"89483:55:17","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"89552:12:17","parameters":{"id":12766,"nodeType":"ParameterList","parameters":[],"src":"89564:2:17"},"returnParameters":{"id":12767,"nodeType":"ParameterList","parameters":[],"src":"89575:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12774,"nodeType":"FunctionDefinition","src":"89654:50:17","nodes":[],"documentation":{"id":12769,"nodeType":"StructuredDocumentation","src":"89582:67:17","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"89663:12:17","parameters":{"id":12772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12771,"mutability":"mutable","name":"revertData","nameLocation":"89683:10:17","nodeType":"VariableDeclaration","scope":12774,"src":"89676:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":12770,"name":"bytes4","nodeType":"ElementaryTypeName","src":"89676:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"89675:19:17"},"returnParameters":{"id":12773,"nodeType":"ParameterList","parameters":[],"src":"89703:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12780,"nodeType":"FunctionDefinition","src":"89786:58:17","nodes":[],"documentation":{"id":12775,"nodeType":"StructuredDocumentation","src":"89710:71:17","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"89795:12:17","parameters":{"id":12778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12777,"mutability":"mutable","name":"revertData","nameLocation":"89823:10:17","nodeType":"VariableDeclaration","scope":12780,"src":"89808:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12776,"name":"bytes","nodeType":"ElementaryTypeName","src":"89808:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"89807:27:17"},"returnParameters":{"id":12779,"nodeType":"ParameterList","parameters":[],"src":"89843:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12788,"nodeType":"FunctionDefinition","src":"90073:59:17","nodes":[],"documentation":{"id":12781,"nodeType":"StructuredDocumentation","src":"89850:218:17","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"90082:16:17","parameters":{"id":12786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12783,"mutability":"mutable","name":"min","nameLocation":"90106:3:17","nodeType":"VariableDeclaration","scope":12788,"src":"90099:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12782,"name":"uint64","nodeType":"ElementaryTypeName","src":"90099:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12785,"mutability":"mutable","name":"max","nameLocation":"90118:3:17","nodeType":"VariableDeclaration","scope":12788,"src":"90111:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12784,"name":"uint64","nodeType":"ElementaryTypeName","src":"90111:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90098:24:17"},"returnParameters":{"id":12787,"nodeType":"ParameterList","parameters":[],"src":"90131:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12796,"nodeType":"FunctionDefinition","src":"90374:63:17","nodes":[],"documentation":{"id":12789,"nodeType":"StructuredDocumentation","src":"90138:231:17","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"90383:20:17","parameters":{"id":12794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12791,"mutability":"mutable","name":"min","nameLocation":"90411:3:17","nodeType":"VariableDeclaration","scope":12796,"src":"90404:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12790,"name":"uint64","nodeType":"ElementaryTypeName","src":"90404:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12793,"mutability":"mutable","name":"max","nameLocation":"90423:3:17","nodeType":"VariableDeclaration","scope":12796,"src":"90416:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12792,"name":"uint64","nodeType":"ElementaryTypeName","src":"90416:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90403:24:17"},"returnParameters":{"id":12795,"nodeType":"ParameterList","parameters":[],"src":"90436:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12802,"nodeType":"FunctionDefinition","src":"90515:38:17","nodes":[],"documentation":{"id":12797,"nodeType":"StructuredDocumentation","src":"90443:67:17","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"90524:4:17","parameters":{"id":12800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12799,"mutability":"mutable","name":"skipTest","nameLocation":"90534:8:17","nodeType":"VariableDeclaration","scope":12802,"src":"90529:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12798,"name":"bool","nodeType":"ElementaryTypeName","src":"90529:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"90528:15:17"},"returnParameters":{"id":12801,"nodeType":"ParameterList","parameters":[],"src":"90552:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12806,"nodeType":"FunctionDefinition","src":"90628:41:17","nodes":[],"documentation":{"id":12803,"nodeType":"StructuredDocumentation","src":"90559:64:17","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"90637:20:17","parameters":{"id":12804,"nodeType":"ParameterList","parameters":[],"src":"90657:2:17"},"returnParameters":{"id":12805,"nodeType":"ParameterList","parameters":[],"src":"90668:0:17"},"scope":12807,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":12208,"name":"VmSafe","nameLocations":["76301:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":12206,"src":"76301:6:17"},"id":12209,"nodeType":"InheritanceSpecifier","src":"76301:6:17"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":12207,"nodeType":"StructuredDocumentation","src":"76114:171:17","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[12807,12206],"name":"Vm","nameLocation":"76295:2:17","scope":12808,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":17}